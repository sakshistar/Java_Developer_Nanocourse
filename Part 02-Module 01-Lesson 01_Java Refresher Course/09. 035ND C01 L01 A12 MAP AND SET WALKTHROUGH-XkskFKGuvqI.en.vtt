WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:02.339
Again, hopefully, you solved the problem yourself.

00:00:02.339 --> 00:00:05.415
If not, let's walk through it again together.

00:00:05.415 --> 00:00:08.205
Let's take a look at our problem.

00:00:08.205 --> 00:00:10.775
The problem we are trying to solve is,

00:00:10.775 --> 00:00:19.810
we are given a list of strings and we try to find out the frequencies of the strings.

00:00:20.089 --> 00:00:22.940
So here's my solution for that.

00:00:22.940 --> 00:00:28.585
So first of all I have a method called calculateWordFrequency,

00:00:28.585 --> 00:00:31.940
and I have a list of strings as input.

00:00:31.940 --> 00:00:33.770
When I use it,

00:00:33.770 --> 00:00:37.325
I'm using a TreeMap here in server HashMap.

00:00:37.325 --> 00:00:43.630
The reason being is, because we want an order,

00:00:43.630 --> 00:00:47.640
the word with less frequency will go first,

00:00:47.640 --> 00:00:53.545
and the word with higher frequency will go to end.

00:00:53.545 --> 00:00:56.329
Which is why we are using a TreeMap.

00:00:56.329 --> 00:00:59.134
Remember, TreeMap is the order map,

00:00:59.134 --> 00:01:03.250
where we can send order in the TreeMap.

00:01:03.250 --> 00:01:08.155
So what do we do is, we iterating through the input list,

00:01:08.155 --> 00:01:13.210
the string list, and we are putting hierarchy into the map,

00:01:13.209 --> 00:01:15.789
but we check the frequency of that.

00:01:15.790 --> 00:01:18.850
We are using a put master here,

00:01:18.849 --> 00:01:21.549
and we're putting the string over here.

00:01:21.549 --> 00:01:30.159
We use this method to get the frequency for the string.

00:01:30.159 --> 00:01:33.114
If the string is already exist in the map,

00:01:33.114 --> 00:01:34.674
we are getting that,

00:01:34.674 --> 00:01:37.974
the frequency out of this map.

00:01:37.974 --> 00:01:41.994
By default if the string does not exist,

00:01:41.995 --> 00:01:47.145
we are giving a zero so that we can add one to it.

00:01:47.144 --> 00:01:57.539
Then we looking through the frequency map and just printing out the number. Let's run it.

00:02:01.400 --> 00:02:04.665
So in here, in this example,

00:02:04.665 --> 00:02:09.615
of abc, bcd, and abc.

00:02:09.615 --> 00:02:12.510
So the abc shows two times,

00:02:12.509 --> 00:02:15.639
and bcd shows one time.

00:02:16.789 --> 00:02:20.620
Hopefully, you got the wrong answer yourself

