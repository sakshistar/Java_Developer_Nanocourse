WEBVTT
Kind: captions
Language: zh-CN

00:00:00.000 --> 00:00:04.221
输出行命令不仅可以用来显示文本

00:00:04.221 --> 00:00:07.970
你还可以输出运算结果

00:00:07.969 --> 00:00:13.559
例如这个语句 System.out.println(2+3);

00:00:13.560 --> 00:00:15.630
注意我并没有在此处加上引号

00:00:15.630 --> 00:00:18.153
因为我们并不想显示文本

00:00:18.152 --> 00:00:21.759
我们实际上希望得到这个数学运算的结果

00:00:21.760 --> 00:00:25.740
所以 当我们运行这个 Java 程序中的两个语句时

00:00:25.739 --> 00:00:29.144
我们会得到 Hello world!

00:00:29.144 --> 00:00:31.890
与我们输入其中的完全一致

00:00:31.890 --> 00:00:34.954
但是第二行显示 5

00:00:34.954 --> 00:00:37.369
相当于 2+3 的结果

00:00:37.369 --> 00:00:39.829
注意每个语句要在单独一行输出

00:00:39.829 --> 00:00:44.974
因此输出每行命令 第一行显示我们输入的内容

00:00:44.975 --> 00:00:48.070
而第二行是运算结果

00:00:48.070 --> 00:00:51.884
计算机不仅可以在屏幕上显示信息 还可以做更多

00:00:51.884 --> 00:00:53.960
没错 它们可以做出选择

00:00:53.960 --> 00:00:56.920
根据我们给出的信息 执行运算

00:00:56.920 --> 00:01:01.015
事实上 让我来展示下 计算机可以做我们人类感到恐怖的事情

00:01:01.015 --> 00:01:02.299
Suzanne 你想玩游戏吗？

00:01:02.299 --> 00:01:03.439
当然 什么游戏？

00:01:03.439 --> 00:01:04.819
记忆力游戏

00:01:04.819 --> 00:01:07.424
你可能需要使用这些东西

00:01:07.424 --> 00:01:11.629
想象一下 有一辆公交车出发时没有乘客

00:01:11.629 --> 00:01:16.204
然后三名乘客上车 两名乘客下车

00:01:16.204 --> 00:01:20.129
紧接着 又有一名乘客上车 没有乘客下车

00:01:20.129 --> 00:01:25.339
随后 另一名乘客上车 一名乘客下车

00:01:25.340 --> 00:01:28.380
我的问题是 这辆公交车停了几个站点？

00:01:28.379 --> 00:01:30.609
不行 我没有记住这个

00:01:30.609 --> 00:01:34.340
我明白了 但是你确实记住了公交车上的乘客数量

00:01:34.340 --> 00:01:37.340
你只需要一个盒子就能记忆 也很有意思

00:01:37.340 --> 00:01:39.770
对 这是因为我记录的只是

00:01:39.769 --> 00:01:42.810
车上乘客的数量

00:01:42.810 --> 00:01:45.460
我确实不需要记住你所说的每个单独数字

00:01:45.459 --> 00:01:50.000
没错 这也是计算机可以做到的事情 让我来给你展示下 计算机如何做到的

