WEBVTT
Kind: captions
Language: zh-CN

00:00:00.000 --> 00:00:03.334
目前为止 我们已经了解到各种不同的变量类型

00:00:03.334 --> 00:00:07.543
我们已经使用一些整数变量 了解如何声明这些变量

00:00:07.543 --> 00:00:12.030
对其初始化 并且更新变量 记录数字的变化情况

00:00:12.029 --> 00:00:13.910
然而 Java 存储整数值的方式

00:00:13.910 --> 00:00:19.074
类似于使用较小的盒子

00:00:19.074 --> 00:00:22.574
由于小盒子便于移动

00:00:22.574 --> 00:00:27.219
同样 与其他变量类型相比 整数变量也可以让程序运行更加迅速

00:00:27.219 --> 00:00:32.049
这就是为什么 Java 将整数限制在十位数的原因

00:00:32.049 --> 00:00:36.265
任何大于十位数的整数无法成为整数变量

00:00:36.265 --> 00:00:38.590
这可以适用于大部分程序

00:00:38.590 --> 00:00:41.890
不过有时我们需要记录更大值

00:00:41.890 --> 00:00:45.320
Java 提供此类变量类型 称为 Long(长整型) 变量

00:00:45.320 --> 00:00:49.344
Long 变量可以储存比整数变量更大的数字

00:00:49.344 --> 00:00:53.759
但是可能会让程序运行速度减慢

00:00:53.759 --> 00:00:55.780
因此 编写程序时

00:00:55.780 --> 00:00:58.570
你应当判断 将要使用的变量是否

00:00:58.570 --> 00:01:01.715
比这个值更大

00:01:01.715 --> 00:01:03.785
如果更大 那么要用 Long 变量

00:01:03.784 --> 00:01:07.489
如果不是 那么使用整数会是更加明智的选择

00:01:07.489 --> 00:01:11.079
整数变量和 Long 变量都可以存储负数

00:01:11.079 --> 00:01:13.719
然而 这两个变量无法存储分数

00:01:13.719 --> 00:01:16.780
因此 Java 具有第三种数据类型

00:01:16.780 --> 00:01:20.120
即 双精度浮点数变量 可以存储大量内容

00:01:20.120 --> 00:01:21.670
包括一般的正数

00:01:21.670 --> 00:01:24.329
负数和分数

00:01:24.329 --> 00:01:26.500
不过 和 Long 变量一样

00:01:26.500 --> 00:01:29.469
双精度浮点数变量会使程序运行速度减慢

00:01:29.469 --> 00:01:32.200
因此 使用整数或 Long 变量更为明智

00:01:32.200 --> 00:01:35.630
若值不包含分数

00:01:35.629 --> 00:01:37.739
然而 存储文本时

00:01:37.739 --> 00:01:40.689
我们会使用之前见过的字符串变量

00:01:40.689 --> 00:01:44.170
与其他类型的变量一样 我们可以声明后进行初始化

00:01:44.170 --> 00:01:47.829
不过 初始化某个特定文本的字符串变量时

00:01:47.829 --> 00:01:50.804
我们通常在文本上加引号

00:01:50.805 --> 00:01:53.455
另一种文本的数据类型称为字符

00:01:53.454 --> 00:01:55.179
简写为 char

00:01:55.180 --> 00:01:59.600
它可以让你存储单个字母 无须使用字符串进行存储

00:01:59.599 --> 00:02:02.140
注意 我们此处使用单引号

00:02:02.140 --> 00:02:04.575
而不是含有字符串的双引号

00:02:04.575 --> 00:02:08.205
你可以在字符变量中存储任何类型的字符

00:02:08.205 --> 00:02:11.424
甚至是单个数字 如数字 3

00:02:11.425 --> 00:02:14.400
但是注意 不要与整数 3 混淆

00:02:14.400 --> 00:02:19.735
字符变量用于显示文本 或联接其他字符串

00:02:19.735 --> 00:02:24.130
但并不用于类似于整数或Long 变量的数学运算

00:02:24.129 --> 00:02:27.745
同时还要记住 一个字符只能存储一个字母

00:02:27.745 --> 00:02:34.324
所以 如果我们将变量 char 设为 10

00:02:34.324 --> 00:02:36.965
Java 就会控诉 无法接受

00:02:36.965 --> 00:02:41.849
有时 除了在变量中存储数字或文本

00:02:41.849 --> 00:02:45.544
我们会希望存储计算机做出选择的结果

00:02:45.544 --> 00:02:47.829
这时我们使用布尔变量

00:02:47.830 --> 00:02:49.960
它只包括两个值

00:02:49.960 --> 00:02:52.000
true (真) 或 false (假)

00:02:52.000 --> 00:02:55.474
类似于一般疑问句的回答

00:02:55.474 --> 00:02:58.370
或者是否经过检查的检查框

00:02:58.370 --> 00:03:00.819
但是 我们将会在下节课看到在讨论决定时 如何使用

00:03:00.819 --> 00:03:04.579
布尔变量的更多内容

