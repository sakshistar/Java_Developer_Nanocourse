WEBVTT
Kind: captions
Language: zh-CN

00:00:00.000 --> 00:00:03.690
现在设想一下 你有个朋友刚刚高中毕业

00:00:03.690 --> 00:00:07.755
请求你编写 Java 程序 帮他计算平均分

00:00:07.754 --> 00:00:10.140
平均分相当于所有分数的总和

00:00:10.140 --> 00:00:12.769
再除以学科数量

00:00:12.769 --> 00:00:17.295
然而 你朋友只知道五门课中的四门课成绩

00:00:17.295 --> 00:00:20.145
所以现在可以通过四门课所有分数相加

00:00:20.144 --> 00:00:23.850
再除以 4 计算得出平均分

00:00:23.850 --> 00:00:27.840
一旦编写出计算四门课平均分的程序后

00:00:27.839 --> 00:00:31.920
加入第五门课的成绩 很容易得出平均分

00:00:31.920 --> 00:00:35.670
我们首先来声明并初始化每门课的变量

00:00:35.670 --> 00:00:37.535
注意 有些课程得分是分数形式

00:00:37.534 --> 00:00:40.584
为保证一致性 我们要将这些变量声明为双精度浮点数变量

00:00:40.585 --> 00:00:45.265
现在我们需要计算这些分数的总和 存储在一个变量中

00:00:45.265 --> 00:00:47.250
这些变量也应当是双精度浮点数变量

00:00:47.250 --> 00:00:52.314
我们可以命名为 sum 并且设为等于四门分数的总和

00:00:52.314 --> 00:00:54.449
最后计算平均数

00:00:54.450 --> 00:00:59.820
我们可以将总和除以 4 并把结果存储在变量 average 中

00:00:59.820 --> 00:01:03.619
现在我们可以输出这个变量 average 观察这个结果是什么

00:01:03.619 --> 00:01:08.170
这个程序的输出结果是 88.5 看起来没问题

00:01:08.170 --> 00:01:12.689
现在你朋友说 他得到了第五门课的成绩

00:01:12.689 --> 00:01:15.719
接下来我可以在批注中写上细节

00:01:15.719 --> 00:01:20.534
试着更改程序 计算五门课的最新平均分

00:01:20.534 --> 00:01:22.829
记住 首先要为第五门课声明新的变量

00:01:22.829 --> 00:01:26.000
然后将其加入平均分计算中

