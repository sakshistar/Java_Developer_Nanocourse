WEBVTT
Kind: captions
Language: zh-CN

00:00:00.000 --> 00:00:04.684
记得我们之前声明了变量 driverFirstName 吗？

00:00:04.684 --> 00:00:08.474
是否注意到我如何在此处使用名称的大写字母呢？

00:00:08.474 --> 00:00:10.064
这称为驼峰式拼写

00:00:10.064 --> 00:00:12.884
因为它类似于骆驼的驼峰形状

00:00:12.884 --> 00:00:16.410
不过 此处首字母为小写字母

00:00:16.410 --> 00:00:18.929
这称为小驼峰式拼写

00:00:18.929 --> 00:00:21.359
另一种变体是大驼峰式拼写

00:00:21.359 --> 00:00:25.199
它们在 Java 中都很常用 但用于不同情况

00:00:25.199 --> 00:00:28.589
不过现在 只要记住

00:00:28.589 --> 00:00:33.725
在创建此类新变量名称时 你应当遵循小驼峰式拼写

00:00:33.725 --> 00:00:36.870
你可以采用自己的方式编写变量名称

00:00:36.869 --> 00:00:40.709
只要遵循接下来我们提及的一些基本规则即可

00:00:40.710 --> 00:00:43.829
不过 驼峰式拼写非常普遍

00:00:43.829 --> 00:00:47.350
在我们创建包含多个单词的变量名称时

00:00:47.350 --> 00:00:52.380
因为正如你所看到的 我们在变量名称中的单词之间没有空格

00:00:52.380 --> 00:00:54.840
这种驼峰式拼写

00:00:54.840 --> 00:00:58.255
比所有小写形式 更便于阅读

00:00:58.255 --> 00:01:02.040
那么我们在创建变量名称时需要遵循哪些规则呢？

00:01:02.039 --> 00:01:05.329
变量名称完全取决于你

00:01:05.329 --> 00:01:10.484
你应该一直使用完整单词 描述这个变量的用途

00:01:10.484 --> 00:01:12.840
如 speed 或 price

00:01:12.840 --> 00:01:17.820
避免使用含义模糊的缩略形式 如用 SP 表示 stock price

00:01:17.819 --> 00:01:18.989
相反 你应当使用

00:01:18.989 --> 00:01:23.435
驼峰式拼写形式 命名变量 stock price

00:01:23.435 --> 00:01:26.780
不过要一直牢记这些规则

00:01:26.780 --> 00:01:30.552
首先 变量名称区分大小写

00:01:30.552 --> 00:01:32.215
与 Java 中的其他命令一样

00:01:32.215 --> 00:01:34.905
变量名称也区分大小写

00:01:34.905 --> 00:01:39.510
也就是说如果我们这里在语句中使用的变量 stockPrice

00:01:39.510 --> 00:01:44.580
但是这里是小写 p 而不是大写 P

00:01:44.579 --> 00:01:47.069
那么 Java 无法理解这个变量

00:01:47.069 --> 00:01:49.934
因为假定这是个不同的变量

00:01:49.935 --> 00:01:52.745
也无法在程序中找到它

00:01:52.745 --> 00:01:58.625
因此 应当采用之前声明的变量中相同的拼写

00:01:58.625 --> 00:02:01.629
这就是为什么 Java 无法理解这个语句

00:02:01.629 --> 00:02:03.969
第二个规则是你应当

00:02:03.969 --> 00:02:07.870
以字母作为变量名称的开头

00:02:07.870 --> 00:02:12.490
即使变量名称中包含数字和符号

00:02:12.490 --> 00:02:15.625
首字母必须为字母形式

00:02:15.625 --> 00:02:17.229
所以这样的变量

00:02:17.229 --> 00:02:21.459
以数字 2 开头 就会出错 Java 无法接受这一变量

00:02:21.460 --> 00:02:26.034
不过 你可以用美元符号或下划线符号作为变量的开头

00:02:26.034 --> 00:02:27.835
只有这两种是可接受的

00:02:27.835 --> 00:02:30.510
不过也并不建议这样做

00:02:30.509 --> 00:02:36.500
最后一个规则是变量名称中不能包含空格

00:02:36.500 --> 00:02:38.599
应当是一个单词

00:02:38.599 --> 00:02:41.900
例如 字符串 stock price 等

00:02:41.900 --> 00:02:46.325
在 stock 和 price 之间包含空格 就行不通

00:02:46.324 --> 00:02:48.780
Java 也无法接受这个字符串

00:02:48.780 --> 00:02:52.430
所以 只要你遵循这三个基本规则 牢记

00:02:52.430 --> 00:02:56.165
变量名称可以描述变量的用途

00:02:56.164 --> 00:03:00.134
那么其他人阅读你的程序时 程序就容易理解得多

00:03:00.134 --> 00:03:02.939
在声明一个变量时 你还可以

00:03:02.939 --> 00:03:06.155
在相同语句中 对其进行初始化

00:03:06.155 --> 00:03:10.400
例如 我们在此处声明的字符串 player 变量

00:03:10.400 --> 00:03:13.650
实际上我可以立刻进行赋值

00:03:13.650 --> 00:03:15.515
所以在这个语句中

00:03:15.514 --> 00:03:21.209
我声明变量 player 并且将其初始化至字符串 Jack

00:03:21.210 --> 00:03:26.990
声明 int price 并初始化为 0 也采用相同方法

00:03:26.990 --> 00:03:30.600
或者另一个 int speed 并初始化为 100 等等

00:03:30.599 --> 00:03:33.799
所以 记住如果你想要

00:03:33.800 --> 00:03:37.580
让编码简洁 减少程序中的行数

00:03:37.580 --> 00:03:41.560
你可以在声明变量时将变量初始化

00:03:41.560 --> 00:03:47.981
这也可以保证你不会使用未经初始化的变量

00:03:47.981 --> 00:03:51.030
这是在你的程序中要考虑的非常重要的事情

