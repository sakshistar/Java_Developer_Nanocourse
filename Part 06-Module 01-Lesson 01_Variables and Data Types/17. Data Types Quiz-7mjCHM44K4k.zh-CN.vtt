WEBVTT
Kind: captions
Language: zh-CN

00:00:00.000 --> 00:00:03.759
这两个语句看似存在问题

00:00:03.759 --> 00:00:06.472
让我们逐一看看原因

00:00:06.472 --> 00:00:08.910
第一个是类型 char 的变量 名称是 me

00:00:08.910 --> 00:00:14.219
初始化字符为大写 I

00:00:14.220 --> 00:00:17.050
看起来没有错误

00:00:17.050 --> 00:00:21.330
将其声明为字符 并对其进行初始化

00:00:21.329 --> 00:00:24.869
非常棒 第二个是变量 称为 fact

00:00:24.870 --> 00:00:29.609
将其声明为布尔变量 将其值初始化为 true （真）

00:00:29.609 --> 00:00:32.519
这也看起来没有问题

00:00:32.520 --> 00:00:37.040
不过这个数字变量 被声明为布尔变量

00:00:37.039 --> 00:00:41.100
并且初始化为数字 17

00:00:41.100 --> 00:00:42.463
我们之前提到过

00:00:42.463 --> 00:00:46.769
布尔变量只能存储值 true （真）或 false （假）

00:00:46.770 --> 00:00:48.735
不能存储数字

00:00:48.734 --> 00:00:51.104
所以这个是错误的

00:00:51.104 --> 00:00:53.729
这个是字符串 text

00:00:53.729 --> 00:00:57.119
初始化为不包含双引号的文本

00:00:57.119 --> 00:00:59.219
非常好

00:00:59.219 --> 00:01:01.214
这是双精度浮点数变量 price

00:01:01.215 --> 00:01:05.775
初始化为分数 23.75

00:01:05.775 --> 00:01:10.530
因为它有两个值 而且需要存储分数 所以可以用双精度浮点数变量

00:01:10.530 --> 00:01:12.120
不过最后一个

00:01:12.120 --> 00:01:14.954
是Long 变量 total

00:01:14.954 --> 00:01:17.834
但初始化为 100.1

00:01:17.834 --> 00:01:19.739
Long 变量与整数变量一样

00:01:19.739 --> 00:01:21.352
只能存储自然数

00:01:21.352 --> 00:01:23.799
而不能存储分数

00:01:23.799 --> 00:01:26.000
所以 Java 也会控诉这个变量

