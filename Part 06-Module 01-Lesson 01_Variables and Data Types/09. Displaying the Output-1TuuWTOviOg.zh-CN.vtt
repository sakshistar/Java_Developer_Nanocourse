WEBVTT
Kind: captions
Language: zh-CN

00:00:00.000 --> 00:00:04.570
目前为止 我们已进行计算机编程 记录乘客数量

00:00:04.570 --> 00:00:09.574
现在我们想用计算机 表示公交车上截止目前的乘客数量

00:00:09.574 --> 00:00:13.890
我们知道这里面存储了变量 passengers (乘客)

00:00:13.890 --> 00:00:17.024
但是如何告诉计算机显示其值呢？

00:00:17.024 --> 00:00:20.649
还记得我们之前学习的输出行命令吗？

00:00:20.649 --> 00:00:23.219
那就是我们现在所需要的

00:00:23.219 --> 00:00:27.779
不过 这次我们希望让它显示变量中的值

00:00:27.780 --> 00:00:33.750
为了实现这一点 我们输入 passengers (乘客) 这个单词 不加引号

00:00:33.750 --> 00:00:36.090
记住 引号一般用于我们希望

00:00:36.090 --> 00:00:39.050
表示信息或单词时

00:00:39.049 --> 00:00:43.369
但是此处 我们不希望表示乘客这个单词

00:00:43.369 --> 00:00:47.750
而是希望看到变量中存储的值

00:00:47.750 --> 00:00:53.359
因此 当我们在括号中输入不加引号的内容时

00:00:53.359 --> 00:00:57.590
Java 可以自动假定这是一个变量 并开始寻找

00:00:57.590 --> 00:00:59.060
变量中存储的值

00:00:59.060 --> 00:01:02.780
并显示出来 因为这是一个输出行语句

00:01:02.780 --> 00:01:05.224
也就是说 当我们运行这个程序时

00:01:05.224 --> 00:01:06.739
我们可以输出这一内容

00:01:06.739 --> 00:01:11.579
6 恰好就是此处变量 passengers (乘客) 的值

00:01:11.579 --> 00:01:14.649
让我们一步步来跟踪这一程序

00:01:14.650 --> 00:01:18.105
观察变量 passengers (乘客) 为何最终值为 6

00:01:18.105 --> 00:01:21.880
这个语句 用来声明变量 passengers (乘客) 的

00:01:21.879 --> 00:01:24.159
整数类型 主要通过创建

00:01:24.159 --> 00:01:27.744
空框 用以存储其中的整数变量

00:01:27.745 --> 00:01:30.040
第二个语句可以使之初始化

00:01:30.040 --> 00:01:33.570
为 0 即将数字 0 添加其中

00:01:33.569 --> 00:01:35.799
然后 下一个语句用来更新

00:01:35.799 --> 00:01:39.369
变量 passengers (乘客) 在原有值的基础上加 5

00:01:39.370 --> 00:01:41.625
原有值为 0

00:01:41.625 --> 00:01:45.769
所以 5 加 0 后更新 值变为 5

00:01:45.769 --> 00:01:49.840
接下来的语句是从原有值 5 中减去 3

00:01:49.840 --> 00:01:55.555
通过减法的结果更新 passengers (乘客)

00:01:55.555 --> 00:01:58.285
因此 5 减 3 等于 2

00:01:58.284 --> 00:02:00.804
乘客变为 2 人

00:02:00.805 --> 00:02:04.120
最后这个语句表示在原有值 2 的基础上减去 1

00:02:04.120 --> 00:02:07.650
再加上 5

00:02:07.650 --> 00:02:09.795
所以当我们减去 1 后得到结果是 1

00:02:09.794 --> 00:02:12.984
再加上 5 乘客数量变为 6

00:02:12.985 --> 00:02:15.960
我们看到 到最后这则语句时

00:02:15.960 --> 00:02:18.885
变量 passengers (乘客) 的值为 6

00:02:18.884 --> 00:02:20.469
当我们输出时

00:02:20.469 --> 00:02:22.000
就能得到这一结果

