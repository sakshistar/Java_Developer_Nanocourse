WEBVTT
Kind: captions
Language: zh-CN

00:00:00.000 --> 00:00:04.019
使用 Java 语言编写代码主要便于计算机的理解

00:00:04.019 --> 00:00:07.394
不过也应该让我们程序员便于理解

00:00:07.394 --> 00:00:10.199
你们很有可能将会在程序员团队中工作

00:00:10.199 --> 00:00:13.929
读别人的代码 别人也会读你的代码

00:00:13.929 --> 00:00:16.259
所以确保

00:00:16.260 --> 00:00:19.820
你的代码和变量名称具有自描述性 这非常重要

00:00:19.820 --> 00:00:22.320
但是 当你的程序越来越长时

00:00:22.320 --> 00:00:25.589
开始有些疑惑不解的内容 你需要的不仅仅是

00:00:25.589 --> 00:00:29.074
用 Java 语句来解释程序的作用

00:00:29.074 --> 00:00:31.410
这就是为什么要给 Java 在各行之间加上

00:00:31.410 --> 00:00:34.350
这样的注释或批注

00:00:34.350 --> 00:00:38.405
运行程序时 计算机会忽视这些代码行

00:00:38.405 --> 00:00:42.215
但是其他人阅读代码时 它会起到解释说明的作用

00:00:42.215 --> 00:00:43.770
为了给代码加上批注

00:00:43.770 --> 00:00:47.345
首先要在这里以两个斜线作为开头

00:00:47.344 --> 00:00:50.009
然后随意写上你想要添加的内容

00:00:50.009 --> 00:00:53.939
通常在后面添加解释说明命令的内容

00:00:53.939 --> 00:00:55.784
并且当你真正运行程序时

00:00:55.784 --> 00:00:58.259
计算机会忽视以两个斜线开头的

00:00:58.259 --> 00:01:02.219
内容行 只运行其中的实际代码行

00:01:02.219 --> 00:01:04.890
这些线性节点称为批注

00:01:04.890 --> 00:01:07.980
添加许多必要的批注确实是个好主意

00:01:07.980 --> 00:01:11.575
可以使别人在阅读你的代码时 更加容易理解

00:01:11.575 --> 00:01:13.515
如果你想让代码更具有描述性

00:01:13.515 --> 00:01:16.109
你可以编写多行批注

00:01:16.109 --> 00:01:19.109
第一行以斜线和星号为开头

00:01:19.109 --> 00:01:22.094
最后以星号和斜线为结尾

00:01:22.094 --> 00:01:25.814
你可以在这些符号之间编写多行内容

00:01:25.814 --> 00:01:27.314
也就是说 你不必

00:01:27.314 --> 00:01:30.444
每行都以两个斜线作为开头

00:01:30.444 --> 00:01:34.449
批注良好的代码更容易理解和运行

00:01:34.450 --> 00:01:38.620
针对代码本身没有一目了然的情况 养成添加批注的习惯

00:01:38.620 --> 00:01:42.240
相信我 如果没有这些宝贵的批注进行解释说明

00:01:42.239 --> 00:01:46.750
你可能都无法立即读懂你自己的代码 

