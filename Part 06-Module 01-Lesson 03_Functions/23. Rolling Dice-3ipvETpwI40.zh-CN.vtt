WEBVTT
Kind: captions
Language: zh-CN

00:00:00.000 --> 00:00:02.490
我们来编写掷六面骰子的程序

00:00:02.490 --> 00:00:07.140
返回掷骰子的值 1 到 6

00:00:07.139 --> 00:00:11.730
我们知道这个值可以是范围内的任一整数

00:00:11.730 --> 00:00:16.073
所以我们先来编写函数定义 其中返回类型为 int

00:00:16.073 --> 00:00:18.225
命名为函数 rollDice

00:00:18.225 --> 00:00:20.850
这个返回类型指我们在函数中的 return 语句

00:00:20.850 --> 00:00:24.870
可以返回 int 作为输出结果

00:00:24.870 --> 00:00:29.435
现在我们编写代码 生成 1 到 6 之间的 randomInt

00:00:29.434 --> 00:00:34.335
我们使用 Math.random 生成 0 到 1 之间的小数

00:00:34.335 --> 00:00:36.149
其中不包括 1

00:00:36.149 --> 00:00:40.320
如何将这个值变为 1 到 6 之间的整数呢？

00:00:40.320 --> 00:00:43.079
我们知道通过把随机值乘以 10

00:00:43.079 --> 00:00:48.530
形成 0 到 9.999 之间的值

00:00:48.530 --> 00:00:53.875
所以我们使用类似的策略 改为 1 到 6 之间的范围

00:00:53.875 --> 00:00:56.774
首先我们先看一下总范围

00:00:56.774 --> 00:01:01.375
我们想要包含 10 个整数的范围 应创建 0 到 9 之间的范围

00:01:01.375 --> 00:01:03.762
记得也要把 0 考虑在内

00:01:03.762 --> 00:01:07.109
然后把随机值乘以 10

00:01:07.109 --> 00:01:09.974
这样可以得到 10 个值

00:01:09.974 --> 00:01:14.839
这次 你想要包含 6 个值的范围 即 1 到 6

00:01:14.840 --> 00:01:18.900
所以你要乘以 6 得到正确范围

00:01:18.900 --> 00:01:21.600
我们乘以 6 得到随机值

00:01:21.599 --> 00:01:26.069
然后这里随机值为 0 到 6 之间 不包括 6

00:01:26.069 --> 00:01:28.349
但是这并不是我们想要的结果

00:01:28.349 --> 00:01:32.399
因为我们把 0 到 1 的范围

00:01:32.400 --> 00:01:34.365
扩大到 0 到 6 之间 不包括 6

00:01:34.364 --> 00:01:38.894
实际上我们想要的最小值不是 0 而是 1

00:01:38.894 --> 00:01:43.349
最大值是接近 7 而不是接近 6

00:01:43.349 --> 00:01:46.094
之后 我们把它转变为整数值时

00:01:46.094 --> 00:01:48.209
最大值应当接近 7

00:01:48.209 --> 00:01:54.759
如 6.999 这样转变后最大整数值为 6

00:01:54.760 --> 00:01:58.570
我们需要通过加 1 改变整个范围

00:01:58.569 --> 00:02:01.574
通过把随机数加 1 可以实现

00:02:01.575 --> 00:02:05.359
改成正确的区间范围

00:02:05.359 --> 00:02:07.739
从 1 到 7 之间 不包括 7

00:02:07.739 --> 00:02:10.560
接下来 我们需要转换

00:02:10.560 --> 00:02:14.235
得到随机整数值 舍弃小数部分

00:02:14.235 --> 00:02:18.135
通过加入变量 int 转变这个值

00:02:18.134 --> 00:02:23.444
放入括号中 位于我们想改变随机值的前面

00:02:23.444 --> 00:02:26.824
这与给变量 randomInt 赋值一样

00:02:26.824 --> 00:02:31.319
此外 即使双精度浮点数随机值接近于 7

00:02:31.319 --> 00:02:35.444
例如 6.998 但是转变为整数值时

00:02:35.444 --> 00:02:40.324
仍然转变为 6 因为小数部分完全被忽略

00:02:40.324 --> 00:02:42.000
现在我们得到了正确的范围

00:02:42.000 --> 00:02:44.259
1 到 6 之间的整数

00:02:44.259 --> 00:02:45.919
为了返回这个值

00:02:45.919 --> 00:02:49.009
还需要增加一步 return 语句

00:02:49.009 --> 00:02:53.370
为了做到这一点 我们返回想要的值

00:02:53.370 --> 00:02:55.969
在这个例子中是变量 randomInt

00:02:55.969 --> 00:02:59.909
非常好 现在我们有返回类型和 return 语句

00:02:59.909 --> 00:03:04.375
调用这个函数 得到 randomInt 作为输出结果

00:03:04.375 --> 00:03:07.289
然后为 rollDice 编写函数定义

00:03:07.289 --> 00:03:10.719
现在我们调用两次 存储输出结果

00:03:10.719 --> 00:03:14.849
输出结果应该是 1 到 6 之间的任一整数

00:03:14.849 --> 00:03:18.995
所以我们存储为整数变量 roll1 和 roll2

00:03:18.995 --> 00:03:24.004
我们也要包含打印代码 输出 roll1 和 roll2 的值

00:03:24.004 --> 00:03:27.469
然后打印出这样的结果

00:03:27.469 --> 00:03:29.389
Roll 1 : 2

00:03:29.389 --> 00:03:32.229
Roll 2 : 5

00:03:32.229 --> 00:03:35.849
所以把这两个点数赋值到同一个函数调用中

00:03:35.849 --> 00:03:37.620
每次调用这个函数时

00:03:37.620 --> 00:03:41.664
都可以产生 1 到 6 之间的新随机值

00:03:41.664 --> 00:03:44.405
这就是为什么得到不同点值的原因

00:03:44.405 --> 00:03:46.094
如果我们再次运行代码

00:03:46.094 --> 00:03:49.439
会产生新的随机值

00:03:49.439 --> 00:03:54.000
非常好 我们完成了模拟掷骰子的编程

