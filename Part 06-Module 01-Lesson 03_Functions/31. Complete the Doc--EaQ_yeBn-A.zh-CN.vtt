WEBVTT
Kind: captions
Language: zh-CN

00:00:00.000 --> 00:00:01.540
这是正确答案

00:00:01.540 --> 00:00:04.000
是 abs 的完整文档

00:00:04.000 --> 00:00:08.039
你可以在 Java 文档的网页页面查到这个文档

00:00:08.039 --> 00:00:12.269
这个文档包括绝对值函数的一般描述

00:00:12.269 --> 00:00:17.269
还包括返回值的描述

00:00:17.269 --> 00:00:20.269
但是之前 abs 文档缺少

00:00:20.269 --> 00:00:25.269
参数部分 而参数是这个函数的重要部分

00:00:25.269 --> 00:00:27.439
abs 包括一个 int 参数

00:00:27.440 --> 00:00:31.160
名字为 a 可以计算绝对值

00:00:31.160 --> 00:00:32.549
所以正确答案是

00:00:32.549 --> 00:00:36.649
这个文档缺少参数 a 的描述

00:00:36.649 --> 00:00:40.652
为了把它写入 Java doc 注释中

00:00:40.652 --> 00:00:42.945
应该在 param 前面加上符号 @

00:00:42.945 --> 00:00:44.490
和参数名

00:00:44.490 --> 00:00:46.260
即字母 a

00:00:46.259 --> 00:00:49.909
然后最后是对这个参数的描述

00:00:49.909 --> 00:00:52.709
我们已经有了返回值的描述

00:00:52.710 --> 00:00:56.105
所以我们不需要在 Java doc 注释中增加返回描述部分

00:00:56.104 --> 00:00:59.459
最后参数注释行并不完整

00:00:59.460 --> 00:01:03.500
因为它没有包含参数名 即字母 a

00:01:03.500 --> 00:01:07.920
所以 @param a, the argument whose absolute value is
to be determined

00:01:07.920 --> 00:01:10.170
是正确答案

00:01:10.170 --> 00:01:12.989
如果我们加入这个参数描述行

00:01:12.989 --> 00:01:15.599
文档中完整的 Java doc

00:01:15.599 --> 00:01:19.109
应当是这样 首先

00:01:19.109 --> 00:01:22.799
一般性描述告诉我们函数 abs 是什么

00:01:22.799 --> 00:01:25.709
它可以返回给定整数的绝对值

00:01:25.709 --> 00:01:27.929
然后是参数

00:01:27.930 --> 00:01:31.140
在这个例子中只有一个参数 即参数 a

00:01:31.140 --> 00:01:32.805
为了在注释中描述参数

00:01:32.805 --> 00:01:35.645
我们使用 @param a 再加上描述

00:01:35.644 --> 00:01:37.609
这是我们的正确答案

00:01:37.609 --> 00:01:41.789
最后我们用 @return 作为返回值的描述

00:01:41.790 --> 00:01:43.890
通过这个完整的文档

00:01:43.890 --> 00:01:47.010
我们可以明白如何使用这个 abs 函数

00:01:47.010 --> 00:01:50.180
通过写入数字 得到返回的绝对值

00:01:50.180 --> 00:01:52.710
即使之前我们没见过这个函数

00:01:52.709 --> 00:01:55.279
这就是文档的独特之处

