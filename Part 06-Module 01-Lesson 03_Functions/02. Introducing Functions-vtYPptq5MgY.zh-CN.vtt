WEBVTT
Kind: captions
Language: zh-CN

00:00:00.000 --> 00:00:02.879
这是我们想要显示的一些 Blondie 歌词

00:00:02.879 --> 00:00:05.820
我们可以看到这首歌以副歌作为开头

00:00:05.820 --> 00:00:07.620
Once I had a love and it was a gas

00:00:07.620 --> 00:00:09.814
Soon found out had a heart of glass

00:00:09.814 --> 00:00:14.989
Seemed like the real thing only to find mucho
mistrust, love’s gone behind

00:00:14.990 --> 00:00:18.390
这几行在歌曲后面重复出现

00:00:18.390 --> 00:00:21.553
为了在卡拉 OK 机上显示这些歌词

00:00:21.553 --> 00:00:24.905
我们可以编写代码块 输出副歌和其他歌词

00:00:24.905 --> 00:00:30.315
对于副歌 我们可以在副歌出现的地方复制并粘贴相同的代码

00:00:30.315 --> 00:00:34.310
但是应该避免出现相同的代码

00:00:34.310 --> 00:00:37.585
例如 我们编写的副歌代码存在拼写小错误

00:00:37.585 --> 00:00:40.207
把 love 写成 live

00:00:40.207 --> 00:00:43.274
并且在复制粘贴代码后才发现这个错误

00:00:43.274 --> 00:00:45.195
我们发现这个小错误时

00:00:45.195 --> 00:00:47.954
要检查所有副歌代码出现的地方

00:00:47.954 --> 00:00:51.929
然后单独在每处进行修改

00:00:51.929 --> 00:00:53.429
这对于修改两处复制的

00:00:53.429 --> 00:00:56.909
相同内容还好 可以很快完成

00:00:56.909 --> 00:00:59.764
但是一个很小的变化会带来大量工作

00:00:59.765 --> 00:01:01.619
如果将所有副歌代码分组

00:01:01.619 --> 00:01:04.564
就可以重复利用 便于修改 那样会更加有效

00:01:04.564 --> 00:01:09.539
是的 我们可以做到 Java 可以让我们对代码分组 这称为函数

00:01:09.540 --> 00:01:11.310
函数包括所有命令

00:01:11.310 --> 00:01:14.015
和执行某个特殊任务的决策

00:01:14.015 --> 00:01:16.400
包括输出一首歌的副歌部分

00:01:16.400 --> 00:01:20.250
所以 我们将四行代码分组 放入一个函数中

00:01:20.250 --> 00:01:25.549
函数的任何变化都会自动影响其出现的任何地方

00:01:25.549 --> 00:01:29.000
在这节课中 我们将学习函数 以及如何创建自己的函数

