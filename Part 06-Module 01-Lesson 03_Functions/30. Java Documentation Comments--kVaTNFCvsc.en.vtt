WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:02.415
When you're writing a program on your computer,

00:00:02.415 --> 00:00:05.790
it's a good idea to document your code and use comments.

00:00:05.790 --> 00:00:08.640
Java comments help you and people who may

00:00:08.640 --> 00:00:12.200
read your code understand what that code is doing.

00:00:12.199 --> 00:00:16.144
And we've already been using comments to leave notes to ourselves.

00:00:16.144 --> 00:00:19.919
We've been using single-line comments that start with a double slash.

00:00:19.920 --> 00:00:22.890
And there are a couple more ways to write comments.

00:00:22.890 --> 00:00:24.810
If you have a more descriptive comment,

00:00:24.809 --> 00:00:27.594
you can use a multi-line comment.

00:00:27.594 --> 00:00:29.969
These are the same kind of note-to-self comments as

00:00:29.969 --> 00:00:33.704
single-line comments but they start with a slash and an asterisk.

00:00:33.704 --> 00:00:37.359
And then they end with an asterisk then a slash.

00:00:37.359 --> 00:00:40.729
But both these kinds of comments will stay inside your code.

00:00:40.729 --> 00:00:42.554
And then there's a third style,

00:00:42.554 --> 00:00:45.865
Java documentation or Java doc comments.

00:00:45.865 --> 00:00:48.240
These are the comments that generate what you see

00:00:48.240 --> 00:00:51.840
when you look at Java documentation pages.

00:00:51.840 --> 00:00:55.260
So, this kind of comment let's you generate document descriptions,

00:00:55.259 --> 00:00:58.244
and it starts with a slash and two asterisks.

00:00:58.244 --> 00:01:01.739
Then each line starts with a single asterisk and it

00:01:01.740 --> 00:01:05.814
ends with an asterisk slash just like our multi-line comment did.

00:01:05.814 --> 00:01:08.429
And there are tools that help you generate comments like this

00:01:08.430 --> 00:01:12.195
automatically so don't worry too much about this syntax.

00:01:12.194 --> 00:01:14.399
Most importantly, this kind of comment let's

00:01:14.400 --> 00:01:16.859
you divide up a general description of your function,

00:01:16.859 --> 00:01:19.545
description of any parameters it may need,

00:01:19.545 --> 00:01:23.085
and a description of its return value if it has one.

00:01:23.084 --> 00:01:27.905
The general description always goes at the top of one of these comments.

00:01:27.905 --> 00:01:30.015
Then if you want to add parameter descriptions,

00:01:30.015 --> 00:01:31.920
you have to type @param,

00:01:31.920 --> 00:01:33.734
then the name of the parameter,

00:01:33.734 --> 00:01:35.670
and then a description of it.

00:01:35.670 --> 00:01:39.000
And you can do these for multiple parameters.

00:01:39.000 --> 00:01:40.765
Similarly, for the return output,

00:01:40.765 --> 00:01:45.180
you type @return, and then the description of that return value.

00:01:45.180 --> 00:01:51.210
Let's see an example. Here's a sample Java doc comment for our earlier rollDice function.

00:01:51.209 --> 00:01:53.769
If you remember this function was called rollDice,

00:01:53.769 --> 00:01:57.209
and it returned a randomly generated dice roll.

00:01:57.209 --> 00:01:59.549
It also took in the number of sides that a dice

00:01:59.549 --> 00:02:03.099
had to generate the correct range for that dice roll.

00:02:03.099 --> 00:02:05.909
The first part of the comment gives us a general description of

00:02:05.909 --> 00:02:09.236
the function that tells us that this returns a random dice roll,

00:02:09.236 --> 00:02:11.625
given the number of sides of a dice.

00:02:11.625 --> 00:02:14.719
Next, a description of the parameter it requires.

00:02:14.719 --> 00:02:17.685
There's only one parameter named sides,

00:02:17.685 --> 00:02:20.805
which is the number of sides the dice has.

00:02:20.805 --> 00:02:24.189
And finally, a description for the returned value,

00:02:24.189 --> 00:02:26.594
an int value that's a random roll.

00:02:26.594 --> 00:02:29.400
And when you write Java doc comments like this,

00:02:29.400 --> 00:02:32.010
is even software that will automatically generate

00:02:32.009 --> 00:02:36.554
documentation that looks like what we saw from math.random and math.max.

00:02:36.555 --> 00:02:39.180
So if you want to write your own Java documentation,

00:02:39.180 --> 00:02:43.000
it's as easy as including it in your code comments.

