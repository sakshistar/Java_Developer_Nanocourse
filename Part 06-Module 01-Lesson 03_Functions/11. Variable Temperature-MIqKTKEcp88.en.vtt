WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:04.094
We've been passing an argument values directly into our function calls.

00:00:04.094 --> 00:00:06.044
Like for weather interpreter function,

00:00:06.044 --> 00:00:07.575
whose definition is here.

00:00:07.575 --> 00:00:10.789
We've passed in different integer arguments for the temperature,

00:00:10.789 --> 00:00:12.579
like four and 32.

00:00:12.580 --> 00:00:16.050
And for these function calls we'll see this print output.

00:00:16.050 --> 00:00:20.414
Brr, consider wearing a jacket for an argument of four degrees Celsius.

00:00:20.414 --> 00:00:23.989
And, it's hot outside for 32 degrees.

00:00:23.989 --> 00:00:26.264
But instead of directly passing in these values,

00:00:26.265 --> 00:00:28.714
we can also pass in variables as arguments,

00:00:28.714 --> 00:00:30.934
as long as they're the right type.

00:00:30.934 --> 00:00:32.534
So for our weather example,

00:00:32.534 --> 00:00:34.429
that would look something like this.

00:00:34.429 --> 00:00:38.329
Our weatherInterpreter still expects an integer as an argument.

00:00:38.329 --> 00:00:41.609
But instead of typing in a value directly, like 32,

00:00:41.609 --> 00:00:44.490
we're passing in the int variable degreesC,

00:00:44.490 --> 00:00:47.065
that's been declared and initialized here.

00:00:47.064 --> 00:00:50.094
And this variable holds the value 32.

00:00:50.094 --> 00:00:51.960
So this function call will print out,

00:00:51.960 --> 00:00:54.310
it's hot outside, just like before.

00:00:54.310 --> 00:00:57.060
And if we change the value of degreesC to say,

00:00:57.060 --> 00:01:00.731
15 and use the same weatherInterpreter call,

00:01:00.731 --> 00:01:03.870
this will prompt the code in our function definition to run.

00:01:03.869 --> 00:01:05.709
And we'll go through our if test,

00:01:05.709 --> 00:01:08.339
this time with temperature equal to 15.

00:01:08.340 --> 00:01:10.530
For a temperature value of 15,

00:01:10.530 --> 00:01:15.329
we don't pass our first hot test because 15 is not greater than 30.

00:01:15.329 --> 00:01:20.584
We also don't pass our second test because 15 is not less than five.

00:01:20.584 --> 00:01:23.399
We end up in our else block of code and print out,

00:01:23.400 --> 00:01:25.665
not too hot, not too cold.

00:01:25.665 --> 00:01:29.609
This way we haven't changed our function call at all.

00:01:29.609 --> 00:01:33.054
We're still saying whetherInterpreter with degreesC passed in.

00:01:33.055 --> 00:01:36.735
We've just changed the value of our variable to be 15.

00:01:36.734 --> 00:01:41.689
And it's often a lot easier to change variables rather than changed whole function calls.

00:01:41.689 --> 00:01:45.390
So passing in variables as arguments is really useful.

00:01:45.390 --> 00:01:49.185
And as long as we're passing in an int value directly or as a variable,

00:01:49.185 --> 00:01:53.975
which is the type of input our weatherInterpreter expects, our code will run.

00:01:53.974 --> 00:01:56.924
And this goes for any function that expects input.

00:01:56.924 --> 00:02:00.719
As long as we're passing in the type of variable our function expects,

00:02:00.719 --> 00:02:04.549
as a variable like degreesC or as a direct value like 32,

00:02:04.549 --> 00:02:06.000
our function call will work.

