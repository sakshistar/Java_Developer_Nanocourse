WEBVTT
Kind: captions
Language: en

00:00:04.099 --> 00:00:06.929
Let's see this in action.

00:00:06.929 --> 00:00:09.285
To follow along during this demo,

00:00:09.285 --> 00:00:14.080
go ahead and clone the code locally from the link provided in the course notes,

00:00:14.080 --> 00:00:16.885
and open that project in your IDE.

00:00:16.885 --> 00:00:20.070
What I'm showing here is the project opened in intellij,

00:00:20.070 --> 00:00:22.600
and you'll notice that there are two modules.

00:00:22.600 --> 00:00:27.925
First, you have the Eureka module and you have this items Micro-services module.

00:00:27.925 --> 00:00:30.685
Let's look at the Eureka module.

00:00:30.684 --> 00:00:33.369
Starting with the pom.xml file.

00:00:33.369 --> 00:00:38.439
There are several dependencies that you need in order to support the Eureka server.

00:00:38.439 --> 00:00:42.750
The first dependency is found here on lines 31 through 34,

00:00:42.750 --> 00:00:45.534
and it's the spring-cloud-starter-config.

00:00:45.534 --> 00:00:48.964
So this initializes and sets up Spring Cloud.

00:00:48.965 --> 00:00:53.915
The next dependency that you need is found here on lines 35 through 38,

00:00:53.914 --> 00:00:57.725
and it is the Spring Cloud Netflix Eureka Server.

00:00:57.725 --> 00:01:01.445
So this is added in an auto configures the Eureka server.

00:01:01.445 --> 00:01:04.989
Now let's navigate to the application.properties file,

00:01:04.989 --> 00:01:07.534
specifically for the Eureka module,

00:01:07.534 --> 00:01:09.754
and let's take a look at what I have here.

00:01:09.754 --> 00:01:11.359
On these first two lines,

00:01:11.359 --> 00:01:12.784
lines one and two,

00:01:12.784 --> 00:01:19.189
I'm configuring the name for the Eureka server and the port, it's 8761.

00:01:19.189 --> 00:01:23.060
This is the typical default port for Eureka servers.

00:01:23.060 --> 00:01:26.885
Next, here on lines five through eight,

00:01:26.885 --> 00:01:30.650
there are several configuration items for the Eureka client.

00:01:30.650 --> 00:01:32.030
At the highest level,

00:01:32.030 --> 00:01:36.530
I'm telling the Eureka client not to register itself as a client.

00:01:36.530 --> 00:01:40.085
We want our application to act as the server in this case,

00:01:40.084 --> 00:01:41.569
and not the client.

00:01:41.569 --> 00:01:45.859
Also I'm turning on the Eureka Netflix logging,

00:01:45.859 --> 00:01:47.760
and the discovery logging.

00:01:47.760 --> 00:01:52.280
Just so that we have additional details in our log window down here.

00:01:52.280 --> 00:01:56.585
Now let's look at the Eureka application.java file.

00:01:56.584 --> 00:02:00.019
This is the typical Spring boot application file.

00:02:00.019 --> 00:02:03.079
It's the main entry point for the spring application.

00:02:03.079 --> 00:02:06.920
Notice, the only difference here on line eight,

00:02:06.920 --> 00:02:10.759
I've added the ad enable Eureka server annotation.

00:02:10.759 --> 00:02:17.149
So this annotation tells Spring to activate the Eureka server related configuration,

00:02:17.150 --> 00:02:18.650
and that's all it takes.

00:02:18.650 --> 00:02:21.694
I've already deployed the application to Tomcat.

00:02:21.694 --> 00:02:23.689
You can see in the log down here,

00:02:23.689 --> 00:02:25.895
it says started Eureka server.

00:02:25.895 --> 00:02:31.765
It started Tomcat on port 8761 and it started the Eureka application.

00:02:31.764 --> 00:02:37.459
Now the simplest next step is to point your web browser to the Eureka server.

00:02:37.460 --> 00:02:39.605
So let's navigate there,

00:02:39.604 --> 00:02:44.139
and the URL is local host colon 8761.

00:02:44.139 --> 00:02:47.684
Now what comes up is the Eureka dashboard.

00:02:47.685 --> 00:02:53.090
At the moment we see basic indicators like system status over here,

00:02:53.090 --> 00:02:55.354
and system health over here,

00:02:55.354 --> 00:02:57.935
current time, up-time, etc.

00:02:57.935 --> 00:03:01.655
The most important part of this screen is right here.

00:03:01.655 --> 00:03:05.705
It's the instances currently registered with Eureka.

00:03:05.705 --> 00:03:10.969
As you can see, right now there are no instances registered under this section and

00:03:10.969 --> 00:03:16.564
this is because we haven't created any micro-services yet or registered them as clients.

00:03:16.564 --> 00:03:18.185
So in our next demo,

00:03:18.185 --> 00:03:22.360
we'll actually create the micro-service and register it.

