WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:02.160
Hi, I'm Richie Pandey.

00:00:02.160 --> 00:00:03.270
I'm Richer Cahal.

00:00:03.270 --> 00:00:04.305
I'm Vienna Harvey.

00:00:04.305 --> 00:00:08.820
I'm Brian Okaykay and I'm a Curriculum Manager and self-taught full-stack developer.

00:00:08.820 --> 00:00:11.370
I'm manager at self-driving car here at Udacity.

00:00:11.370 --> 00:00:13.845
I'm a content creator and software engineer.

00:00:13.845 --> 00:00:17.820
Here at Udacity, I've been developing programs in data science.

00:00:17.820 --> 00:00:21.360
Let's discuss strategies for learning new technical skills.

00:00:21.360 --> 00:00:24.630
Learning a new skill can be really exciting but can also be

00:00:24.630 --> 00:00:29.040
challenging especially in a self-paced online program.

00:00:29.040 --> 00:00:32.220
We start by defining a learning path so that we know

00:00:32.220 --> 00:00:35.595
what our goals are and that we're making progress towards them.

00:00:35.595 --> 00:00:38.340
A goal can mean to finish a particular course,

00:00:38.340 --> 00:00:41.950
or complete a nano degree program and get a new job.

00:00:41.950 --> 00:00:43.640
Maybe you're just personally curious about

00:00:43.640 --> 00:00:45.800
a topic and want to broaden your knowledge base.

00:00:45.800 --> 00:00:47.255
Whatever your goal is,

00:00:47.255 --> 00:00:48.650
try to keep it in mind.

00:00:48.650 --> 00:00:50.420
It shapes how you learn.

00:00:50.420 --> 00:00:52.105
When it comes to goals,

00:00:52.105 --> 00:00:56.870
one strategy is to set short term goals and long-term goals.

00:00:56.870 --> 00:01:01.670
If your goal is to complete a project or apply to a certain kind of job,

00:01:01.670 --> 00:01:05.500
then you should write an incremental plan to get there.

00:01:05.500 --> 00:01:08.390
Knowing specific steps to take or milestones to

00:01:08.390 --> 00:01:11.465
reach can help you stay on track and not feel overwhelmed.

00:01:11.465 --> 00:01:14.030
Take each step as you achieve it so you

00:01:14.030 --> 00:01:16.900
can see yourself moving closer to your long-term goals.

00:01:16.900 --> 00:01:20.750
Keeping yourself accountable to a goal is really important.

00:01:20.750 --> 00:01:23.015
Serious, so important.

00:01:23.015 --> 00:01:25.820
Set calendar reminders for yourself to keep yourself

00:01:25.820 --> 00:01:29.570
accountable and learn some small thing every day.

00:01:29.570 --> 00:01:31.640
Try to add an additional layer of

00:01:31.640 --> 00:01:34.505
accountability by telling a partner or a friend about it,

00:01:34.505 --> 00:01:36.290
or even your coworker, or boss.

00:01:36.290 --> 00:01:38.240
Someone you can check on your progress.

00:01:38.240 --> 00:01:43.490
Enroll in a program with a buddy to help you stay committed to completing the program.

00:01:43.490 --> 00:01:46.445
Studies show it takes time to form a new habit.

00:01:46.445 --> 00:01:49.225
So get into the habit of working on your program.

00:01:49.225 --> 00:01:50.755
Once learning becomes a habit,

00:01:50.755 --> 00:01:53.855
it won't take so much effort to sit down and work on you program.

00:01:53.855 --> 00:01:55.895
When you feel like procrastinating,

00:01:55.895 --> 00:01:59.045
remind yourself why you enrolled in the program in the first place.

00:01:59.045 --> 00:02:00.200
To help motivate you.

00:02:00.200 --> 00:02:03.410
Then, reward yourself when you stick with the habit

00:02:03.410 --> 00:02:05.780
I like to get myself an ice cream cone.

00:02:05.780 --> 00:02:08.930
Having a plan and checking off smaller items makes

00:02:08.930 --> 00:02:13.280
the larger task of learning a whole new skill seem a bit more approachable.

00:02:13.280 --> 00:02:18.140
You can even set a goal of finishing one exercise or part of the lesson in one sitting.

00:02:18.140 --> 00:02:20.450
The Udacity classroom has projects and

00:02:20.450 --> 00:02:23.435
suggested project deadlines that you can use as well.

00:02:23.435 --> 00:02:26.140
While these projects are good milestones,

00:02:26.140 --> 00:02:28.130
more importantly they provide

00:02:28.130 --> 00:02:33.155
hands-on learning to actively practice the skills that you've got.

00:02:33.155 --> 00:02:36.470
Now, these projects are meant to be challenging.

00:02:36.470 --> 00:02:38.840
I know it can be frustrating to get stuck in

00:02:38.840 --> 00:02:41.090
the middle of a project that is really difficult.

00:02:41.090 --> 00:02:42.330
Ooh.

00:02:42.330 --> 00:02:43.100
Oh God.

00:02:43.100 --> 00:02:43.935
Ooh.

00:02:43.935 --> 00:02:46.970
But those times are often the ones where there's

00:02:46.970 --> 00:02:50.065
more room for exploration and innovation.

00:02:50.065 --> 00:02:52.410
For example, when writing a new function,

00:02:52.410 --> 00:02:55.475
explain the function in simple sentences or pseudo-code,

00:02:55.475 --> 00:02:58.355
and only then move on to writing the syntax.

00:02:58.355 --> 00:03:00.295
Build on things incrementally.

00:03:00.295 --> 00:03:03.515
Everyone struggles with it when they learn something new.

00:03:03.515 --> 00:03:05.105
Be patient with yourself.

00:03:05.105 --> 00:03:08.045
For example, software programmers in the industry have

00:03:08.045 --> 00:03:11.030
in several years to become masters in their domain.

00:03:11.030 --> 00:03:12.935
To remind yourself of your goal,

00:03:12.935 --> 00:03:16.915
remember every step is getting you closer to it.

00:03:16.915 --> 00:03:19.120
Now, when working with code,

00:03:19.120 --> 00:03:22.570
there are a lot of great resources for when you hit a roadblock.

00:03:22.570 --> 00:03:25.700
Making mistakes in your code is actually a great way to learn.

00:03:25.700 --> 00:03:29.825
A lot of my on code projects are developed one error at a time.

00:03:29.825 --> 00:03:33.920
One habit and skill good programmers have is to read

00:03:33.920 --> 00:03:39.825
error messages and practice figuring out what exactly is not working in the code.

00:03:39.825 --> 00:03:41.870
Being able to use resources to fix

00:03:41.870 --> 00:03:45.140
your code is a problem solving skills in and of itself.

00:03:45.140 --> 00:03:49.835
Community-led sites like Stack Overflow or Udacity's own tool called Knowledge,

00:03:49.835 --> 00:03:52.855
where people answer each other's questions can be very useful.

00:03:52.855 --> 00:03:54.800
One of the best ways is just to

00:03:54.800 --> 00:03:57.590
type in an error message into Google and see what comes up.

00:03:57.590 --> 00:04:02.605
Because someone else has probably had the same error and maybe figured out a solution.

00:04:02.605 --> 00:04:06.200
Also read blog posts and source code to

00:04:06.200 --> 00:04:09.980
see how someone else is thinking through a similar problem.

00:04:09.980 --> 00:04:12.890
Technical concepts can be hard to learn and

00:04:12.890 --> 00:04:15.590
it's normal to get an imperfect solution after the first trial.

00:04:15.590 --> 00:04:18.740
It's highly recommended to start with something that is small,

00:04:18.740 --> 00:04:21.070
that works and incrementally improve it.

00:04:21.070 --> 00:04:22.770
Okay. Let's summarize.

00:04:22.770 --> 00:04:25.040
Set goals for yourself and hold yourself

00:04:25.040 --> 00:04:28.115
accountable with a schedule or an accountability buddy.

00:04:28.115 --> 00:04:30.830
Breakdown projects into small goals.

00:04:30.830 --> 00:04:33.860
Work on incremental parts of the lesson.

00:04:33.860 --> 00:04:36.895
Work, do exercises to make the learning stick.

00:04:36.895 --> 00:04:40.475
Start with pseudo-code and use practice and online resources.

00:04:40.475 --> 00:04:42.875
You've got this. So good luck.

00:04:42.875 --> 00:04:43.820
Happy learning.

00:04:43.820 --> 00:04:44.735
Happy learning.

00:04:44.735 --> 00:04:45.590
Happy learning.

00:04:45.590 --> 00:04:47.310
Happy learning.

