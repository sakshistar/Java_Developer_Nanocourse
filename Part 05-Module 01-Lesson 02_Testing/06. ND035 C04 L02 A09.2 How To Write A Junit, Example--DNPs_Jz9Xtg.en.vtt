WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:04.724
The next annotation that I am going to teach you is called Before.

00:00:04.724 --> 00:00:06.479
So as you see,

00:00:06.480 --> 00:00:08.984
Before happens to be,

00:00:08.984 --> 00:00:11.609
it we'd belongs to Junit,

00:00:11.609 --> 00:00:14.205
and the code marked Before,

00:00:14.205 --> 00:00:17.940
this is executed before each test.

00:00:17.940 --> 00:00:23.445
So let me call a method here,

00:00:23.445 --> 00:00:26.760
and I'm going to call it init,

00:00:26.760 --> 00:00:32.204
which stands for, it's a shortcut for initialization.

00:00:32.204 --> 00:00:38.204
So as you may have guessed because of this annotation Before.

00:00:38.204 --> 00:00:43.429
Before, this method init is going to be called before each test.

00:00:43.429 --> 00:00:46.189
There is another annotation that a lot of

00:00:46.189 --> 00:00:49.789
engineers get confused with which is BeforeClass.

00:00:49.789 --> 00:00:54.394
Now, the difference between Before and BeforeClass is that,

00:00:54.395 --> 00:00:57.705
Before is called before each test,

00:00:57.704 --> 00:01:03.140
whereas BeforeClass runs once before the entire text fixture.

00:01:03.140 --> 00:01:06.754
So if your test have 10 tests,

00:01:06.754 --> 00:01:08.314
the class is 10 tests,

00:01:08.314 --> 00:01:15.829
Before code will be executed 10 times but BeforeClass is going to be executed only once.

00:01:15.829 --> 00:01:19.959
Another thing that we need to keep in mind is that

00:01:19.959 --> 00:01:24.409
BeforeClass method is going to be static method.

00:01:24.409 --> 00:01:28.909
So you have to mention public static void,

00:01:28.909 --> 00:01:31.729
and I'm going to call this setup.

00:01:31.730 --> 00:01:35.299
This method is going to be called only once.

00:01:35.299 --> 00:01:40.579
Now, let's think about what is the use of these two annotation.

00:01:40.579 --> 00:01:42.859
So I already have all my tests,

00:01:42.859 --> 00:01:46.049
what would these tests these annotations do?

00:01:46.049 --> 00:01:51.745
Let's say that I need to have certain piece of code run before each test,

00:01:51.745 --> 00:01:56.175
that code would fall under before in it, in our case.

00:01:56.174 --> 00:01:57.774
Let's say that we have

00:01:57.775 --> 00:02:03.760
certain comprehensive and certain very resource extensive code

00:02:03.760 --> 00:02:05.950
that needs to be run before a class,

00:02:05.950 --> 00:02:11.064
that need to fall under any method that is described under BeforeClass.

00:02:11.064 --> 00:02:16.359
I'm not going to go ahead and create any actual usage of it,

00:02:16.360 --> 00:02:23.625
but I'm going to demonstrate it by printing some simple print lines here.

00:02:23.625 --> 00:02:26.115
So I'm going to say,

00:02:26.115 --> 00:02:34.500
Runs before each method,

00:02:34.500 --> 00:02:41.219
test method, runs before each class.

00:02:41.219 --> 00:02:44.069
So this is used for setup.

00:02:44.069 --> 00:02:46.699
This method names don't really hold any value,

00:02:46.699 --> 00:02:50.389
they are just there for placeholder sake because they are methods.

00:02:50.389 --> 00:02:55.758
I'm going to now talk about two more annotations which are like

00:02:55.758 --> 00:03:01.814
a closure to whatever happened in Before and whatever happened in BeforeClass.

00:03:01.814 --> 00:03:03.609
What I mean by that is,

00:03:03.610 --> 00:03:07.180
let's say that you have made some connections to the database,

00:03:07.180 --> 00:03:09.754
where you have had some open some files,

00:03:09.754 --> 00:03:11.840
and open sends dreams.

00:03:11.840 --> 00:03:17.735
Those things or all these resources need to be close at the end of the test class.

00:03:17.735 --> 00:03:21.755
Now, that is what you do in AfterClass,

00:03:21.754 --> 00:03:23.585
and as you may have guessed,

00:03:23.585 --> 00:03:28.915
AfterClass is run just once which is at the end of every class.

00:03:28.914 --> 00:03:31.884
I'm going to call this, well,

00:03:31.884 --> 00:03:35.269
industry standard is people usually call this a tearDown,

00:03:35.270 --> 00:03:37.130
and that's what I'm going to call it.

00:03:37.129 --> 00:03:40.509
I'm going to say runs after each class,

00:03:40.509 --> 00:03:43.524
and this is going to be after.

00:03:43.525 --> 00:03:47.875
As you may have guessed, this runs after every method.

00:03:47.875 --> 00:03:52.960
It's like a sibling to Before,

00:03:52.960 --> 00:03:57.939
and I'm going to call this initEnd probably,

00:03:58.099 --> 00:04:01.229
want to change this camel case.

00:04:01.229 --> 00:04:05.294
So this is going to run after each method.

00:04:05.294 --> 00:04:08.719
Now, I'm going to run this class.

00:04:08.719 --> 00:04:10.974
We have the previous methods that we had written,

00:04:10.974 --> 00:04:13.719
and I'm going to run this class so that I can show

00:04:13.719 --> 00:04:16.660
you what is going to be printed on the screen.

00:04:16.660 --> 00:04:18.955
So let's run.

00:04:18.954 --> 00:04:26.699
I'm not going to run. One thing that just happened here was it said run compare arrays.

00:04:27.269 --> 00:04:32.125
So if you click outside and you right-click and you run,

00:04:32.125 --> 00:04:34.649
it shows you run verified,

00:04:34.649 --> 00:04:37.589
run specific methods, if you're right there,

00:04:37.589 --> 00:04:40.049
but if you run it at the class level,

00:04:40.050 --> 00:04:42.550
it gives you the option to run the whole class.

00:04:42.550 --> 00:04:46.715
But if you want to just identify one test or run one test,

00:04:46.714 --> 00:04:52.759
you highlight it and then you get the option to run that specific test,

00:04:52.759 --> 00:04:56.240
which is very helpful because every time you're writing a test,

00:04:56.240 --> 00:04:58.165
you don't want to run the whole class.

00:04:58.165 --> 00:05:01.819
Otherwise, you'd have to wait a long period of time if you have 100 tests.

00:05:01.819 --> 00:05:05.209
So another annotation we'll learn about is Ignore.

00:05:05.209 --> 00:05:07.370
What Ignored does is that it helps you

00:05:07.370 --> 00:05:10.370
skip a particular test case if you do not want it to run.

00:05:10.370 --> 00:05:13.069
Now, when do you want to skip a particular test case?

00:05:13.069 --> 00:05:15.139
You would want to skip a particular test case,

00:05:15.139 --> 00:05:18.814
if you have a very resource intensive test

00:05:18.814 --> 00:05:22.459
that you probably just want to run in your local setup.

00:05:22.459 --> 00:05:26.479
In that case when you want to push that code or commit that code,

00:05:26.480 --> 00:05:28.550
you would use Ignore so that it doesn't

00:05:28.550 --> 00:05:31.310
run in any other environment but local environment.

00:05:31.310 --> 00:05:35.030
Now, let me show you how this is going to look,

00:05:35.029 --> 00:05:37.659
so that we can see the functionality of Ignore,

00:05:37.660 --> 00:05:43.135
Before, BeforeClass, After and AfterClass.

00:05:43.134 --> 00:05:44.824
Let me run this.

00:05:44.824 --> 00:05:50.370
So I'm going to run the entire test class.

00:05:51.050 --> 00:05:54.345
So I'm going to go over this,

00:05:54.345 --> 00:05:57.540
runs before each class,

00:05:57.540 --> 00:06:00.540
runs before each class,

00:06:00.540 --> 00:06:03.900
runs before each method, after each method,

00:06:03.899 --> 00:06:05.579
before each method, after each method,

00:06:05.579 --> 00:06:07.694
before each method, after each method.

00:06:07.694 --> 00:06:10.875
Test ignored, runs after each class.

00:06:10.875 --> 00:06:12.384
So as you see,

00:06:12.384 --> 00:06:14.459
this runs before each class,

00:06:14.459 --> 00:06:17.039
it came from BeforeClass.

00:06:17.040 --> 00:06:18.905
Runs after each class,

00:06:18.904 --> 00:06:22.984
came from AfterClass right here.

00:06:22.985 --> 00:06:26.584
So they were only printed once,

00:06:26.584 --> 00:06:36.095
whereas other pieces of code which are under before and after they were run at each test.

00:06:36.095 --> 00:06:44.630
The test I was ignored that did not have Before method or After method, those run.

00:06:44.629 --> 00:06:50.165
So that was a little or small demonstration of Before,

00:06:50.165 --> 00:06:52.835
After, BeforeClass, and AfterClass.

00:06:52.834 --> 00:06:57.659
Next, we will look into parameterized tests.

