WEBVTT
Kind: captions
Language: ar

00:00:00.000 --> 00:00:01.502
أحد الأشياء التي ربما لاحظتموها

00:00:01.602 --> 00:00:04.838
في كود السيارة ذاتية القيادة وما قبلها
هو أننا نعرّف دائماً

00:00:04.938 --> 00:00:08.108
المتغيّرات المنطقية،
مثل isLightGreen، في بداية الكود

00:00:08.208 --> 00:00:11.879
قبل كتلة التعليمات البرمجية
لعبارة if وخارجها.

00:00:11.979 --> 00:00:14.848
وهذا بسبب شيء يُدعى نطاق المتغيّر.

00:00:14.948 --> 00:00:17.351
نطاق المتغيّر هو كتلة أو نطاق تعليمات برمجية

00:00:17.451 --> 00:00:20.454
حيث يمكن استخدام متغيّر محدد والإشارة إليه.

00:00:20.554 --> 00:00:25.726
في هذه الحالة، كان علينا استخدام
المتغيّر isLightGreen في حالة اختبار if.

00:00:25.826 --> 00:00:29.730
وبالتالي، يجب أن يحتوي
نطاق isLightGreen عبارة if هذه بالكامل.

00:00:29.830 --> 00:00:34.034
ومن خلال تعريف isLightGreen
خارج أي قوسين متعرّجين أو عبارات شرطية،

00:00:34.134 --> 00:00:36.703
تجعله متاحاً لبرنامجنا بأكمله.

00:00:36.803 --> 00:00:38.872
أي أن نطاقه هو برنامجنا بأكمله.

00:00:38.972 --> 00:00:43.577
تذكرّوا أنه علينا أيضاً تعريف المتغيّرات
قبل أن نتمكن من استخدامها في الكود.

00:00:43.677 --> 00:00:46.180
ولهذا دائماً يتم تعريف متغيّر حالة اختبارنا

00:00:46.280 --> 00:00:49.917
قبل استخدامه في الكود الخاص باتخاذ القرار.

00:00:50.017 --> 00:00:53.620
لكن ماذا لو أننا قمنا بدلاً من ذلك
بتعريف متغيّر داخل عبارة if،

00:00:53.720 --> 00:00:56.423
أي داخل القوسين المتعرّجين، كهذا المتغيّر،

00:00:56.523 --> 00:00:59.660
carSpeed من نوع double
الذي يتتبّع سرعة السيارة؟

00:00:59.760 --> 00:01:03.931
لنعيّنه مساوياً لـ100 كيلومتر في الساعة،

00:01:04.031 --> 00:01:05.999
أي ما يعادل 60 ميلاً في الساعة.

00:01:06.099 --> 00:01:11.672
عندئذٍ سيكون نطاق المتغيّر carSpeed
مقصوراً على الكود داخل هذين القوسين المتعرّجين.

00:01:11.772 --> 00:01:15.876
في الواقع، إن زوجاً من الأقواس المتعرّجة
من شأنه تحديد نطاق متغيّر معين.

00:01:15.976 --> 00:01:20.848
أي أنه يمكننا استخدام المتغيّر carSpeed
ضمن النطاق، وهذا ما نقوم به من خلال طباعته.

00:01:20.948 --> 00:01:25.519
لكن إذا حاولنا الإشارة إلى ذلك المتغيّر
خارج القوسين المتعرّجين، فلن نستطيع.

00:01:25.619 --> 00:01:31.258
كأن نحاول تقليل سرعة السيارة بعشرة كيلومترات
بعد آخر قوس متعرج لعبارة if.

00:01:31.358 --> 00:01:34.661
سيدفع هذا جهاز الحاسوب لإظهار رسالة خطأ.

00:01:34.761 --> 00:01:36.430
وهي تبدو بهذا الشكل:

00:01:36.530 --> 00:01:40.501
"لا يمكن التعامل مع الرمز 'carSpeed'".
وسنتعرّف أكثر عن الأخطاء لاحقاً.

00:01:40.601 --> 00:01:43.470
لكن يكفي أن تعلموا
أن هذا سيسبب خطأ ًلأن برنامجنا

00:01:43.570 --> 00:01:47.441
لا يستطيع الوصول إلى المتغيّر carSpeed
من خارج نطاقه.

00:01:47.541 --> 00:01:50.310
يمكنكم تخيّل نطاق المتغّير كأنه جدار

00:01:50.410 --> 00:01:53.881
أو حد فاصل
يحدد هذان القوسان المتعرّجان جانبيه.

00:01:53.981 --> 00:01:56.350
جميع المتغيّرات المحددة داخل هذه الجدران

00:01:56.450 --> 00:01:58.318
مثل carSpeed في هذا النطاق،

00:01:58.418 --> 00:02:01.221
يمكن الوصول إليها داخل حدود النطاق.

00:02:01.321 --> 00:02:05.792
لكن ما إن تغادروا الجدار الفاصل
إلى خارج القوسين المتعرّجين ولو قليلاً،

00:02:05.893 --> 00:02:08.262
فلا يمكنكم الوصول إلى تلك المتغيّرات.

00:02:08.362 --> 00:02:09.830
بالتالي إن متغيّر carSpeed

00:02:09.930 --> 00:02:12.633
الذي تم تعيينه
داخل القوسين المتعرّجين لعبارة if،

00:02:12.733 --> 00:02:14.401
يملك نطاقاً صغيراً،

00:02:14.501 --> 00:02:17.938
أي جدار فاصل صغير لا يصل
إلى خارج كتلة التعليمات البرمجية لـif.

00:02:18.038 --> 00:02:22.876
أما المتغيّر isLightGreen الذي عيّناه
خارج أي أقواس متعرّجة، لديه نطاق كبير.

00:02:22.976 --> 00:02:25.812
أي جدار أكبر يشمل برنامجنا بأكمله داخله،

00:02:25.913 --> 00:02:30.817
وهذا يسمح لنا باستخدام متغير isLightGreen
والإشارة إليه في حالة اختبارنا.

00:02:30.918 --> 00:02:33.387
فتذكروا هذا أثناء كتابة عبارات if.

