WEBVTT
Kind: captions
Language: zh-CN

00:00:00.000 --> 00:00:04.504
我们将用这个程序输出 “A birth certificate is a valid ID(出生证明为有效 ID)”

00:00:04.504 --> 00:00:06.000
基于这些布尔值

00:00:06.000 --> 00:00:08.730
计算机将逐行查看我们的代码

00:00:08.730 --> 00:00:10.320
首先它会看到 if 语句

00:00:10.320 --> 00:00:11.944
因为 passport(护照) 的值为假

00:00:11.944 --> 00:00:15.646
所以跳过这段代码块 转到接下来的 else if 语句

00:00:15.646 --> 00:00:19.649
else if 语句检验 birthCertificate (出生证明) 是否为真

00:00:19.649 --> 00:00:22.679
由于出生证明为真 计算机会执行这个代码块

00:00:22.679 --> 00:00:25.806
输出 “A birth certificate is a valid ID.”

00:00:25.806 --> 00:00:29.030
接着还剩一个 else if 语句和一个 else 语句

00:00:29.030 --> 00:00:32.594
但因为已经执行了一个 else if 代码块

00:00:32.594 --> 00:00:34.170
它就会忽略其他代码块

00:00:34.170 --> 00:00:37.929
即使 driversLicense (驾驶执照) 条件同样为真

00:00:37.929 --> 00:00:41.479
它亦将跳到最后一个 else 的结尾

00:00:41.479 --> 00:00:43.079
这就是输出的全部内容

00:00:43.079 --> 00:00:46.184
那么 这个人会成功地得到一张借书证

00:00:46.185 --> 00:00:48.660
所以说即使有一系列 else if 代码块和一个 else 代码块

00:00:48.659 --> 00:00:52.229
一次也只能执行一个代码块

00:00:52.229 --> 00:00:55.319
前提是最先满足测试条件的语句 才能得到执行

00:00:55.320 --> 00:00:59.159
在这个例子中满足测试条件的就是 birthCertificate

00:00:59.159 --> 00:01:02.459
因此 组合运用 if 语句和 else if 语句

00:01:02.460 --> 00:01:07.000
对于编写具有多种唯一路径的决策程序非常有用

