WEBVTT
Kind: captions
Language: ar

00:00:00.000 --> 00:00:05.639
هنالك العديد من سيناريوهات صنع القرار
التي تتطلب أكثر من مسارين متاحين.

00:00:05.739 --> 00:00:07.107
مثل سيارتنا ذاتية القيادة،

00:00:07.207 --> 00:00:09.943
ماذا لو كانت إشارة المرور التي تراها صفراء؟

00:00:10.043 --> 00:00:14.348
قد نريد إعلام السيارة
بأن تنفذ إجراءً آخر، كإبطاء السرعة.

00:00:14.448 --> 00:00:18.552
لكننا نملك الآن خياري التوقف أو القيادة فقط.

00:00:18.652 --> 00:00:23.891
إذن كيف يمكننا تكوين عبارة if/else
لتضم خيارات أكثر من هذين الاثنين؟

00:00:23.991 --> 00:00:25.792
حسناً، هنا يأتي دور else-if.

00:00:25.893 --> 00:00:28.695
تأتي else-if بعد عبارة if

00:00:28.795 --> 00:00:34.001
لكن قبل عبارة else،
وتفحص حالة اختبار مختلفة عن التي في عبارة if.

00:00:34.101 --> 00:00:36.670
لذا بدلاً من فحص ما إن كانت الإشارة خضراء،

00:00:36.770 --> 00:00:39.439
تستطيع else-if فحص ما إن كانت الإشارة صفراء،

00:00:39.540 --> 00:00:42.509
وتعطي مسار قرار أخر

00:00:42.609 --> 00:00:46.313
وهو مجرد مجموعة تعليمات بديلة كالإبطاء مثلاً.

00:00:46.413 --> 00:00:51.752
وسيتم تنفيذ هذا
فقط إن كانت حالة اختبارنا السابقة false.

00:00:51.852 --> 00:00:53.687
لذا، عندما تكون قيمة isLightGreen هي false،

00:00:53.787 --> 00:00:56.256
سينتقل الكود إلى عبارة else-if.

00:00:56.356 --> 00:00:59.526
وإن كانت حالة اختبارها،
وهي isLightYellow، هي true،

00:00:59.626 --> 00:01:01.795
فيمكننا طباعة أمر الإبطاء "Slow Down"
باستخدام print،

00:01:01.895 --> 00:01:05.933
ويصبح "Slow Down" مسار قرار آخر.

00:01:06.033 --> 00:01:08.168
لذا، فقط إن كانت حالتي
الإشارة الضوئية هاتين تساوي false،

00:01:08.268 --> 00:01:12.372
سيذهب كودنا إلى عبارة else ويطبع "Stop".

00:01:12.472 --> 00:01:16.076
لنرى كيف يبدو هذا
في كود Java للسيارة ذاتية القيادة.

00:01:16.176 --> 00:01:18.445
هذا هو كودنا مع else-if.

00:01:18.545 --> 00:01:20.881
أول ما يجب علينا معرفته لحالة اختبار else-if

00:01:20.981 --> 00:01:24.284
هو ما إن كان لون الإشارة الضوئية أصفر.

00:01:24.384 --> 00:01:28.021
لنقل أنه لدينا متغيراً منطقياً جديداً،
وهو IsLightYelow،

00:01:28.121 --> 00:01:30.757
والذي ستكون قيمته إما true أو false.

00:01:30.858 --> 00:01:32.593
ثم سيكون لدينا else-if،

00:01:32.693 --> 00:01:35.529
بعد عبارة if لكن قبل عبارة else.

00:01:35.629 --> 00:01:39.066
وستقوم بتفحص حالة اختبار IsLightYellow.

00:01:39.166 --> 00:01:41.435
فإن كانت الإشارة صفراء لا خضراء،

00:01:41.535 --> 00:01:44.771
فسندخل في عبارة else-if ونطبع "Slow Down".

00:01:44.872 --> 00:01:47.908
الآن لدينا ثلاثة مسارات قرار يمكننا أخذها.

00:01:48.008 --> 00:01:51.111
الأول هو إذا كانت الإشارة خضراء،
فستتم طباعة "Drive!".

00:01:51.211 --> 00:01:55.382
ثانياً، غير ذلك، إن لم تكن الإشارة خضراء،
لكنها كانت صفراء،

00:01:55.482 --> 00:01:57.317
فستتم طباعة "Slow Down".

00:01:57.417 --> 00:02:00.220
وثالثاً، إن لم يتم استيفاء أي تلك الشروط،

00:02:00.320 --> 00:02:02.556
فستتم طباعة "Stop".

00:02:02.656 --> 00:02:04.157
لنجرب هذا.

00:02:04.258 --> 00:02:07.127
لنفكر أولاً فيما سيحدث إن كانت
قيمة IsLightGreen هي "True"،

00:02:07.227 --> 00:02:09.530
وكانت قيمة IsLightYellow هي false.

00:02:09.630 --> 00:02:11.698
وفي هذه الحالة، لن تهم قيمة "isLightYellow"،

00:02:11.798 --> 00:02:15.002
وسنعرف السبب خلال لحظات.

00:02:15.102 --> 00:02:16.904
الآن بما أنه أصبحنا نملك القيم المنطقية هذه،

00:02:17.004 --> 00:02:20.374
سيفحص الحاسوب
كود اتخاذ القرار خاصتنا سطراً بسطر.

00:02:20.474 --> 00:02:24.845
يصل أولاً إلى عبارة if
ويتفحص ما إن كانت isLightGreen هي true.

00:02:24.945 --> 00:02:29.216
إنها true بالفعل، فسندخل
كتلة تعليمات برمجية عبارة if ونطبع "Drive".

00:02:29.316 --> 00:02:30.984
وسينهي هذا الكود.

00:02:31.084 --> 00:02:32.586
هذا ما سيطبع فقط.

00:02:32.686 --> 00:02:36.590
سيتم تخطي عبارتي else-if وelse بالكامل.

00:02:36.690 --> 00:02:40.494
حتى أنه لن يتم اختبار
قيمة isLightYellow بتاتاً.

00:02:40.594 --> 00:02:42.696
وهذا لأنه بمجرد أن يقوم الحاسوب بتنفيذ

00:02:42.796 --> 00:02:45.699
كتلة تعليمات برمجية عبارة if،
كما فعل عند طباعته "Drive"،

00:02:45.799 --> 00:02:50.571
فسيتخطى كل شيء حتى آخر قوس متعرج
لأخر عبارة else أو عبارة else-if.

00:02:50.671 --> 00:02:54.508
وبالنسبة إلى هذا الكود،
سيكون هذا في نهاية برنامجنا.

00:02:54.608 --> 00:02:56.643
حسناً، ماذا لو قمنا
بتبديل التعبيرين المنطقيين هذين؟

00:02:56.743 --> 00:03:00.781
أي قيمة isLightGreen هي false،
وقيمة isLightYellow هي true.

00:03:00.881 --> 00:03:05.853
سيبدأ الحاسوب مجدداً
بقراءة الكود من البداية ويقرأ أولاً عبارة if.

00:03:05.953 --> 00:03:08.689
سيتفحص حالة اختبار، أي إن كانت قيمة
isLightGreen هي true،

00:03:08.789 --> 00:03:10.991
وهي ليست كذلك هذه المرة.

00:03:11.091 --> 00:03:14.995
فسينتقل إلى كتلة التعليمات البرمجية التالية،
وهي else-if خاصتنا.

00:03:15.095 --> 00:03:18.765
وتتفحص else-if
إن كانت قيمة isLightYellow هي true.

00:03:18.866 --> 00:03:23.470
إنها كذلك، فسندخل كتلة تعليمات برمجية else-if
ونطبع "Slow Down".

00:03:23.570 --> 00:03:26.440
سيتم تخطي عبارة else مجدداً،

00:03:26.540 --> 00:03:31.278
كما حدث في المثال السابق، وذلك لأنه بمجرد
أن ينفذ الحاسوب كتلة تعليمات برمجية else-if

00:03:31.378 --> 00:03:35.883
فسيتخطى كل شيء إلى القوس المتعرج الأخير
لآخر عبارة else أو عبارة else-if.

00:03:35.983 --> 00:03:40.721
يعني هذا أنه لمجموعات أطول من عمليات التفحص
فيها عبارات else-if عديدة،

00:03:40.821 --> 00:03:44.758
يمكن تنفيذ واحدة فقط
من كتل التعليمات البرمجية المغلقة في كل مرة،

00:03:44.858 --> 00:03:48.896
وهي كتلة التعليمات البرمجية التي تنتمي
إلى أي حالة اختبار يتم استيفاءها أولاً.

00:03:48.996 --> 00:03:51.832
فقط في حال كانت
كلتا حالتي الإشارة الضوئية هما false،

00:03:51.932 --> 00:03:55.636
سيصل الحاسوب إلى عبارة else ويطبع "Stop".

00:03:55.736 --> 00:03:59.473
لذا إن كانت قيمة isLightGreen هي false
وقيمة isLightYellow هي false،

00:03:59.573 --> 00:04:02.776
فستكون هذه هي المرة الوحيدة
التي سنصل فيها إلى عبارة else.

00:04:02.876 --> 00:04:07.281
لنرى المزيد من الأمثلة عن كيفية
استخدام عبارات else-if لاتخاذ القرار.

