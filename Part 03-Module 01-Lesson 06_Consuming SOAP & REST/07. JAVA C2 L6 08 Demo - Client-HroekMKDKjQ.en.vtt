WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:02.234
Let's see this in action.

00:00:02.234 --> 00:00:06.869
Let's create a client responsible for calling out to the NumberTowords service.

00:00:06.870 --> 00:00:08.879
I've opened the project in IntelliJ,

00:00:08.880 --> 00:00:11.505
and I've navigated to the NumberClient file.

00:00:11.505 --> 00:00:14.100
In order to create a web service client,

00:00:14.099 --> 00:00:18.570
all we need to do is extend WebServiceGatewaySupport like I'm doing here.

00:00:18.570 --> 00:00:22.679
This client contains one method called getWords.

00:00:22.679 --> 00:00:29.489
Notice, it takes a string of numbers and it returns back a NumberToWordsResponse.

00:00:29.489 --> 00:00:33.015
Now, where did this NumberToWordsResponse come from?

00:00:33.015 --> 00:00:35.799
It came from the code generated by the wisdom.

00:00:35.799 --> 00:00:37.695
So that's down here,

00:00:37.695 --> 00:00:40.365
underneath this xjc folder.

00:00:40.365 --> 00:00:43.745
So NumberToWordsResponse let's take a look at that.

00:00:43.744 --> 00:00:46.609
So in NumberToWordsResponse, we get

00:00:46.609 --> 00:00:50.335
a string back and that's going to represent the string of numbers.

00:00:50.335 --> 00:00:53.774
Okay. I'm navigated back to NumberClient.

00:00:53.774 --> 00:00:58.804
On line 12, I have the URL of the SOAP web service.

00:00:58.804 --> 00:01:00.740
Online's 15.

00:01:00.740 --> 00:01:02.710
I'm creating a numberRequest.

00:01:02.710 --> 00:01:04.909
It's of type NumberToWords.

00:01:04.909 --> 00:01:06.769
Where did this type come from?

00:01:06.769 --> 00:01:09.424
This is another one that was generated for us.

00:01:09.424 --> 00:01:13.105
So let's take a look at it, NumberToWords.

00:01:13.105 --> 00:01:17.750
So in NumberToWords, there's one field which is the big integer.

00:01:17.750 --> 00:01:20.480
I've created numberRequest, and I'm setting

00:01:20.480 --> 00:01:24.290
that big integer to the number that's passed in.

00:01:24.290 --> 00:01:26.810
So whatever string of numbers is passed in,

00:01:26.810 --> 00:01:30.200
we are passing to this setUbiNum method.

00:01:30.200 --> 00:01:33.500
On line 19, I'm receiving a response.

00:01:33.500 --> 00:01:37.329
So notice, I'm receiving a NumberToWordsResponse.

00:01:37.329 --> 00:01:41.069
I'm calling the getWebServiceTemplate method,

00:01:41.069 --> 00:01:43.849
and then I'm calling the Marshall send and receive,

00:01:43.849 --> 00:01:45.409
passing in the URL,

00:01:45.409 --> 00:01:47.405
and the number request.

00:01:47.405 --> 00:01:50.754
All this method does is to return the response.

00:01:50.754 --> 00:01:54.199
Now, let's look at testing out this client.

00:01:54.200 --> 00:02:00.379
So navigate to the main Spring Boot application, and it's ConsumingApplication.java.

00:02:00.379 --> 00:02:05.750
Now, I have this application class implementing the command line runner,

00:02:05.750 --> 00:02:08.599
and I'm overriding the run method.

00:02:08.599 --> 00:02:13.489
So this will allow the application to be packaged up to run from the console.

00:02:13.490 --> 00:02:16.820
So we can see the results down here in real time.

00:02:16.819 --> 00:02:19.324
Within the run method on line 18,

00:02:19.324 --> 00:02:21.185
I'm creating a NumberClient.

00:02:21.185 --> 00:02:25.085
On line 21, I'm setting up the jacks be marshaller.

00:02:25.085 --> 00:02:30.860
In this is to serialize and de-serialize XML requests to and from Java.

00:02:30.860 --> 00:02:34.400
Online 24, I'm setting the context path of

00:02:34.400 --> 00:02:38.539
the marshaller passing in the location of the object factory.

00:02:38.539 --> 00:02:43.414
So the object factory was also provided when we generated the code from the wisdom.

00:02:43.414 --> 00:02:45.294
If you scroll down here,

00:02:45.294 --> 00:02:51.109
you'll see ObjectFactory, and it's essentially used to create the objects needed.

00:02:51.110 --> 00:02:54.665
So let's go back to the consuming application class.

00:02:54.664 --> 00:02:59.349
I'm adding the marshaller to the client here on line 27,

00:02:59.349 --> 00:03:01.394
and on line 28.

00:03:01.395 --> 00:03:03.524
Now here on line 31,

00:03:03.524 --> 00:03:05.354
I'm using the NumberClient,

00:03:05.354 --> 00:03:10.774
I'm calling the getWords method that we looked at and passing in 3,454.

00:03:10.775 --> 00:03:14.985
I'm storing the response which is a NumberToWordsResponse,

00:03:14.985 --> 00:03:17.205
and then here on line 34,

00:03:17.205 --> 00:03:19.955
I'm simply printing everything out.

00:03:19.955 --> 00:03:22.685
So let's execute this code.

00:03:22.685 --> 00:03:28.170
We should see the output of 3,454 as words.

00:03:28.169 --> 00:03:31.214
Skip it a second to execute,

00:03:31.215 --> 00:03:40.439
and here we have our response 3,454 as expected.

