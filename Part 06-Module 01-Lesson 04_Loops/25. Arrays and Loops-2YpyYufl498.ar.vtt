WEBVTT
Kind: captions
Language: ar

00:00:00.000 --> 00:00:02.369
المصفوفات، حالها حال أي نوع
من أنواع المتغيّرات الأخرى،

00:00:02.469 --> 00:00:05.405
يمكن تمريرها للدوال كوسيطات،

00:00:05.506 --> 00:00:07.708
ويمكن إرجاعها أيضاً كأنواع إرجاع.

00:00:07.808 --> 00:00:09.643
لنفترض مثلاً أننا نريد تعريف دالة

00:00:09.743 --> 00:00:13.580
تحسب متوسط درجة الحرارة
باستخدام قيم مستمدة من مصفوفة درجات حرارة.

00:00:13.680 --> 00:00:16.950
لنسمّي دالتنا "calculateAverage"،

00:00:17.050 --> 00:00:21.555
وهي ستستقبل كوسيطة مصفوفة من القيم من نوع
"double" وترجع قيمة واحدة من نوع "double"

00:00:21.655 --> 00:00:25.592
ألا وهي متوسط جميع القيم من نوع "double"
الموجودة في مصفوفة الإدخال.

00:00:25.692 --> 00:00:27.828
سيبدو تعريف الدالة شبيهاً بما يلي،

00:00:27.928 --> 00:00:30.163
public double calculateAverage

00:00:30.264 --> 00:00:34.201
ومعلمة على هيئة مصفوفة قيم من النوع
"double" تحمل الاسم "temperatures".

00:00:34.301 --> 00:00:36.069
أول ما علينا فعله هو إيجاد

00:00:36.170 --> 00:00:39.139
عدد قيم درجات الحرارة
المخزنة داخل هذه المصفوفة.

00:00:39.239 --> 00:00:41.508
ولأنه يتم تمريرها كمعلمة،

00:00:41.608 --> 00:00:44.478
فنحن لا ندري عدد العناصر المخزنة داخلها.

00:00:44.578 --> 00:00:45.946
لمعرفة الإجابة،

00:00:46.046 --> 00:00:49.783
يمكننا كتابة اسم المصفوفة
متبوعاً بالكلمة الأساسية "length" أي طول.

00:00:49.883 --> 00:00:52.019
ما يفعله هذا ببساطة
هو عدّ العناصر داخل تلك المصفوفة

00:00:52.119 --> 00:00:55.155
وتخزينها داخل المتغيّر "size".

00:00:55.255 --> 00:00:57.124
تالياً، لحساب المتوسّط،

00:00:57.224 --> 00:01:00.360
علينا أن نجمع قيم كافة
العناصر الموجودة داخل المصفوفة أولاً.

00:01:00.460 --> 00:01:02.996
يمكننا القيام بذلك عن طريق تعريف المتغيّر
"total" أي "مجموع" من نوع "double"

00:01:03.096 --> 00:01:05.199
وتهيئته بإسناد القيمة صفر إليه،

00:01:05.299 --> 00:01:07.334
ثم نتبع ذلك بحلقة.

00:01:07.434 --> 00:01:10.237
يبدأ عدّاد الحلقة "i" من الصفر

00:01:10.337 --> 00:01:12.573
ويستمر في الزيادة إلى أن تصبح
قيمة "i" أقل من قيمة "size"،

00:01:12.673 --> 00:01:14.374
والتي احتسبناها سابقاً.

00:01:14.474 --> 00:01:17.211
والآن، داخل تلك الحلقة،
يمكننا الاستمرار في إضافة

00:01:17.311 --> 00:01:20.948
درجة الحرارة المقابلة لـ"i"
أي "temperatures[i]" إلى المتغير "total".

00:01:21.048 --> 00:01:25.352
لاحظوا كيف استخدمتُ
عدّاد الحلقة كمؤشر الفهرسة في المصفوفة.

00:01:25.452 --> 00:01:27.955
والسبب في ذلك
هو أن عدّاد الحلقة يبدأ من صفر

00:01:28.055 --> 00:01:30.390
ويواصل الازدياد بمقدار واحد في كل مرة،

00:01:30.490 --> 00:01:32.893
ما يعني أننا باستخدامه داخل الحلقة،

00:01:32.993 --> 00:01:36.630
نستخلص كل عنصر من عناصر
مصفوفة "temperatures".

00:01:36.730 --> 00:01:39.032
ولأننا نضيف القيمة المستختلصة
إلى متغيّر المجموع "total"،

00:01:39.132 --> 00:01:40.300
فإنه مع بلوغنا نهاية الحلقة،

00:01:40.400 --> 00:01:44.171
ستكون "total" هي المجموع الكليّ
للقيم المخزنة داخل مصفوفة "temperatures".

00:01:44.271 --> 00:01:45.939
إذن لحساب المتوسط،

00:01:46.039 --> 00:01:47.975
نحتاج فقط إلى قسمة الناتج على قيمة "size"،

00:01:48.075 --> 00:01:50.511
ألا وهي عدد عناصر المصفوفة.

00:01:50.611 --> 00:01:57.818
ثم يمكننا إرجاع المتوسط المحتسب
كنتيجة لتنفيذ الدالة. يبدو هذا رائعاً.

00:01:57.918 --> 00:02:00.187
لنتتبع هذه الخطوات باستخدام مثال
لمصفوفة قيم من نوع "double"

00:02:00.287 --> 00:02:01.889
لنرى إن كانت تحقق النتيجة المرجوة.

00:02:01.989 --> 00:02:04.424
إذا كانت "temperatures"
تساوي هذه المصفوفة هنا

00:02:04.525 --> 00:02:06.627
التي تحتوي على درجات الحرارة الأربعة هذه،

00:02:06.727 --> 00:02:08.962
فإنه عند احتساب الطول "length"

00:02:09.062 --> 00:02:13.467
سوف تُسند القيمة 4 إلى المتغير "size"
لأن هناك أربعة قيم مختلفة في المصفوفة.

00:02:13.567 --> 00:02:15.869
الخطوة التالية هي تهيئة "total"
بإسناد القيمة الأولية صفر إليه

00:02:15.969 --> 00:02:17.671
ثم التوغل إلى داخل الحلقة.

00:02:17.771 --> 00:02:20.674
لنرسم هذا الجدول هنا لنتتبع عدّاد الحلقة

00:02:20.774 --> 00:02:22.743
والقيم المستخلصة من المصفوفة

00:02:22.843 --> 00:02:25.546
والقيمة الإجمالية بعد تحديثها في كل خطوة.

00:02:25.646 --> 00:02:28.348
أول ما سيحدث
هو تهيئة "i" بالقيمة الأولية صفر،

00:02:28.448 --> 00:02:30.284
لذا تصبح قيمة "i" هي صفر.

00:02:30.384 --> 00:02:32.319
ولأن قيمة "i" أقل من قيمة "size"،

00:02:32.419 --> 00:02:34.188
والتي هي 4 في هذه الحالة،

00:02:34.288 --> 00:02:37.824
ندخل إلى مستوى الحلقة الأدنى
وننفذ هذه العبارة.

00:02:37.925 --> 00:02:39.259
ما يحدث داخل الحلقة

00:02:39.359 --> 00:02:42.129
هو أننا نحاول الوصول إلى درجة الحرارة
المقابلة للمؤشر "i" أي "temperatures[i]".

00:02:42.229 --> 00:02:46.133
وبما أن "i" في هذه الحالة تساوي صفر، فنحن
نحاول استرجاع درجة الحرارة المقابلة لصفر،

00:02:46.233 --> 00:02:50.938
ألا وهي العنصر الأول في المصفوفة، أي 75.

00:02:51.038 --> 00:02:52.239
بمجرد الحصول على تلك القيمة،

00:02:52.339 --> 00:02:56.109
نضيفها إلى المجموع "total"
لأننا نستخدم علامة "=+" هنا.

00:02:56.210 --> 00:02:58.145
وبما أن القيمة الأولية لـ"total" كانت صفر،

00:02:58.245 --> 00:03:02.716
لذا فإنه عند إضافة 75 إلى صفر
يكون المجموع هو 75.

00:03:02.816 --> 00:03:06.053
ثم نصل إلى قوس الإغلاق المتعرج للحلقة

00:03:06.153 --> 00:03:09.523
وعليه فإننا نعود مجدداً إلى الأعلى
ونزيد قيمة "i" بمقدار واحد.

00:03:09.623 --> 00:03:12.025
عندما ننفذ أمر الزيادة "++i"،

00:03:12.125 --> 00:03:15.896
تزيد قيمة "i" بمقدار 1،
لتتحول من صفر إلى 1.

00:03:15.996 --> 00:03:20.434
بعد ذلك، نتحقق مما إذا كانت
قيمة "i" أقل من قيمة "size".

00:03:20.534 --> 00:03:25.606
"i" تساوي 1 و"size" تساوي 4، وهذا يعني
أن بإمكاننا الانتقال إلى داخل الحلقة.

00:03:25.706 --> 00:03:28.442
داخل الحلقة، سنسترج درجة الحرارة المقابلة
للمؤشر "i" أي "temperatures[i]"،

00:03:28.542 --> 00:03:30.043
والتي قيمتها الآن هي 1،

00:03:30.143 --> 00:03:33.614
ودرجة الحرارة في الموضع 1 هي 73.

00:03:33.714 --> 00:03:36.149
إذن، في هذه الحالة، نسترجع القيمة 73

00:03:36.250 --> 00:03:41.655
ثم نضيف درجة الحرارة المقابلة لـ"i" هذه
إلى المجموع "total" باستخدام علامة "=+".

00:03:41.755 --> 00:03:47.961
إذن، نحن نضيف 73 إلى 75
ليصبح المجموع "total" هو 148.

00:03:48.061 --> 00:03:51.131
نصل مجدداً إلى قوس الإغلاق المتعرج
وعليه نعود إلى الأعلى،

00:03:51.231 --> 00:03:55.035
ونزيد "i" بمقدار 1، لتتحول من 1 إلى 2،

00:03:55.135 --> 00:03:58.438
ثم نعود للتحقق مما إذا كانت
قيمة "i" أقل من قيمة "size".

00:03:58.539 --> 00:04:00.674
قيمة "size" تساوي 4،
أي أن نتيجة تقييم الشرط لا تزال "true"،

00:04:00.774 --> 00:04:02.976
وعليه ننتقل إلى داخل الحلقة مجددًا.

00:04:03.076 --> 00:04:06.079
temperatures[i] في هذه المرحلة
هي درجة الحرارة في الموضع 2،

00:04:06.180 --> 00:04:10.150
ألا وهي العنصر المقابل للمؤشر 2 هنا،
أي 72،

00:04:10.250 --> 00:04:12.152
ثم نضيف ذلك إلى المجموع.

00:04:12.252 --> 00:04:16.456
لقد حدّثنا المجموع من 148 إلى 220.

00:04:16.557 --> 00:04:19.426
نصل إلى قوس الإغلاق فنعود إلى الأعلى،

00:04:19.526 --> 00:04:24.298
نزيد قيمة "i" من 2 إلى 3
ثم نقارنها بقيمة "size"،

00:04:24.398 --> 00:04:28.001
نجد أن 3 ما تزال أقل من 4
فننتقل إلى داخل الحلقة،

00:04:28.101 --> 00:04:31.738
ونسترجع درجة الحرارة في الموضع 3،
ألا وهي 80.

00:04:31.839 --> 00:04:36.476
نضيف هذه القيمة إلى المجموع
ليتحول من 220 إلى 300.

00:04:36.577 --> 00:04:38.412
ثم في التكرار الأخير،

00:04:38.512 --> 00:04:39.813
عندما نصل إلى قوس الإغلاق نعود إلى الأعلى

00:04:39.913 --> 00:04:42.883
ونزيد قيمة "i" مجدداً، فتصبح 4.

00:04:42.983 --> 00:04:45.152
لكن الآن لم تعد 4 أقل من قيمة "size"،

00:04:45.252 --> 00:04:52.759
وعليه فإننا لا ندخل كتلة الحلقة،
وننتقل مباشرة إلى قوس الإغلاق هذا.

00:04:52.860 --> 00:04:54.228
بما أننا انتهينا من الحلقة،

00:04:54.328 --> 00:04:58.232
سنحسب المتوسط
عن طريق قسمة "total" على "size".

00:04:58.332 --> 00:05:02.035
قيمة "total" النهائية هي 300
أما "size" فكانت قيمته 4،

00:05:02.135 --> 00:05:05.606
أي 300 تقسيم 4 تساوي 75،

00:05:05.706 --> 00:05:08.609
وهذه هي القيمة
التي سيتم تخزينها في المتغيّر "average"،

00:05:08.709 --> 00:05:12.279
لذا يمكننا إرجاع تلك القيمة كناتج للدالة.

00:05:12.379 --> 00:05:16.316
إن معرفة حجم المصفوفة
مفيد جداً في حالات كثيرة.

00:05:16.416 --> 00:05:20.087
لقد رأينا كيف نستخدمه
كحد أقصى في حلقة تكرار،

00:05:20.187 --> 00:05:24.324
لكن هناك مشكلة أكبر يمكن أن تقع
إذا تجاهلتم حجم المصفوفة.

00:05:24.424 --> 00:05:27.594
تخيّلوا أننا نسترجع أرقاماً
مختلفة من هذه المصفوفة.

00:05:27.694 --> 00:05:29.730
نحن نعرف أن بها أربعة أرقام،

00:05:29.830 --> 00:05:33.166
ما يعني أن مؤشرات الفهرسة
تبدأ بصفر وصولاً إلى 3.

00:05:33.267 --> 00:05:38.539
رأينا مسبقاً كيفية إيجاد عدد عناصر
مصفوفة ما باستخدام "length".

00:05:38.639 --> 00:05:41.341
لذا، إذا نفّذنا هذه العبارة
على هذه المصفوفة،

00:05:41.441 --> 00:05:45.846
ستحتسب "length" أن هناك أربعة عناصر،
فتصبح قيمة "size" هي 4.

00:05:45.946 --> 00:05:51.852
لكن لنفترض أننا تجاهلنا المتغيّر "size"
وحاولنا استرجاع العنصر ذي المؤشر 10،

00:05:51.952 --> 00:05:53.987
وهو غير موجود في المصفوفة كما هو واضح.

00:05:54.087 --> 00:05:55.722
عندما تحاول تنفيذ هذا البرنامج،

00:05:55.822 --> 00:06:00.594
ستصدر Java رسالة خطأً مفادها
أن هذا المؤشر يقع خارج حدود المصفوفة.

00:06:00.694 --> 00:06:02.829
لكن بما أن لدينا المتغيّر "size"،

00:06:02.930 --> 00:06:05.332
فنحن نعرف عدد العناصر
الموجودة داخل المصفوفة،

00:06:05.432 --> 00:06:10.204
وبإضافة عبارة "if" بسيطة
بحيث تحيط بسطر الطباعة هذا،

00:06:10.304 --> 00:06:12.606
يمكننا التحقق مما إذا كانت قيمة المؤشر
الذي نحاول الوصول إليه

00:06:12.706 --> 00:06:16.109
هي بالفعل أصغر من قيمة "size".

00:06:16.210 --> 00:06:18.712
وفي حالة مصفوفة هكذه،

00:06:18.812 --> 00:06:23.917
ستكون نتيجة تقييم شرط "if" هذا
هي خطأ أو "false" ولن تنفّذ العبارة.

00:06:24.017 --> 00:06:27.254
ولكن إذا احتوت مصفوفة أخرى
على أكثر من عشرة عناصر،

00:06:27.354 --> 00:06:30.123
فإن نتيجة تقييم هذا الشرط ستكون "true"

00:06:30.224 --> 00:06:34.161
وستطبع هذه العبارة
العنصر العاشر بشكل طبيعي.

00:06:34.261 --> 00:06:36.830
كونوا دائماً متنبهين إلى حدود المصفوفة.

00:06:36.930 --> 00:06:39.233
أول ما عليكم فعله عند التعامل مع المصفوفات

00:06:39.333 --> 00:06:41.635
هو محاولة معرفة عدد العناصر الموجودة فيها

00:06:41.735 --> 00:06:44.137
والتحقق دوماً قبل محاولة استرجاع أي عنصر

00:06:44.238 --> 00:06:47.407
مما إذا كان ذلك العنصر
واقعاً ضمن حدود المصفوفة أم لا.

