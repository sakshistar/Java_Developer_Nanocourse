WEBVTT
Kind: captions
Language: ar

00:00:00.000 --> 00:00:03.971
حسناً، َلنرى كيف يمكننا
تنفيذ هذه الدالة، countBlocks.

00:00:04.071 --> 00:00:06.373
إنها تأخذ متغيّر العدد الصحيح levels كمُدخل

00:00:06.473 --> 00:00:09.343
وهو عدد المستويات التي يتألف الهرم منها،

00:00:09.443 --> 00:00:13.213
ويُرجع قيمة عدد صحيح
تساوي عدد المكعّبات التي يحتاج إليها.

00:00:13.313 --> 00:00:17.885
أول ما علينا فعله
هو تعيين المتغيّر total وتحديد قيمته.

00:00:17.985 --> 00:00:20.387
سيتتبّع عدد المكعبات
التي يحتاجها بناء الهرم بالكامل

00:00:20.487 --> 00:00:23.957
بإضافة كل مستوى واحداً تلو الآخر.

00:00:24.057 --> 00:00:28.795
ثم ننشئ حلقة
تعدّ من 1 إلى عدد مستويات ذلك الهرم،

00:00:28.896 --> 00:00:30.797
وتكون الزيادة هي ++i فحسب.

00:00:30.898 --> 00:00:33.233
داخل الحلقة ولكل مستوى،

00:00:33.333 --> 00:00:37.704
يجب أن نحسب عدد المكعبات
في ذلك المستوى وهو يساوي i ضرب i،

00:00:37.804 --> 00:00:40.174
لأن قيمة i تتغيّر من 1، إلى 2،

00:00:40.274 --> 00:00:43.677
إلى 3، وصولاً إلى أقصى عدد من المستويات.

00:00:43.777 --> 00:00:46.513
حالما نحسب عدد ما نحتاجه لذلك المستوى،

00:00:46.613 --> 00:00:51.251
نضيفه إلى متغيّر total
ونحدّث قيمة total لتكون مساوية للمجموع.

00:00:51.351 --> 00:00:53.320
وأخيراً، عند نهاية الحلقة،

00:00:53.420 --> 00:00:55.455
نعرض قيمة المتغيّر total،

00:00:55.556 --> 00:00:59.693
لأنه سيضم عدد المكعبات الكلي
لكافة المستويات في الهرم.

00:00:59.793 --> 00:01:02.696
لنختبر ذلك مع هرم ذي ثلاث مستويات،

00:01:02.796 --> 00:01:06.633
ما يعني أن قيمة المتغيّر levels
التي أدخلناها ستكون 3،

00:01:06.733 --> 00:01:08.368
ويتم تعيين قيمة total بصفر،

00:01:08.468 --> 00:01:12.840
وتنتقل الحلقة من 1 إلى قيمة levels
وهي هنا تساوي 3.

00:01:12.940 --> 00:01:17.711
لنتتبّع كل متغيّر لدينا أثناء تقدّمنا في الحلقة.

00:01:17.811 --> 00:01:18.946
تبدأ i بالعدد 1،

00:01:19.046 --> 00:01:23.050
ثم نتحقق من هذا الشرط: i&lt;=levels،

00:01:23.150 --> 00:01:26.620
إي إذا كانت i أصغر من أو تساوي 3،

00:01:26.720 --> 00:01:29.156
وهذا true لأن i لا تزال تساوي 1.

00:01:29.256 --> 00:01:30.958
فنحسب عدد المكعبات

00:01:31.058 --> 00:01:34.728
في ذلك المستوى تحديداً، وهي تساوي i ضرب i،

00:01:34.828 --> 00:01:38.465
ثم نضيف ناتج حاصل i ضرب i إلى total،

00:01:38.565 --> 00:01:41.735
والذي قد بدأ بالقيمة صفر،
وبذلك تصبح قيمة total تساوي 1.

00:01:41.835 --> 00:01:44.838
وصلنا إلى نهاية الحلقة الأولى،
فنعود إلى الأعلى،

00:01:44.938 --> 00:01:47.140
ونضيف 1 إلى i لتصبح قيمتها 2،

00:01:47.241 --> 00:01:49.309
ثم نتحقق من الشرط مجدداً.

00:01:49.409 --> 00:01:51.245
هل i أقل من أو تساوي 3؟

00:01:51.345 --> 00:01:53.747
لا تزال قيمتها تساوي 2، فهذا true.

00:01:53.847 --> 00:01:57.050
فنحسب i ضرب i، أي 2 ضرب 2،

00:01:57.150 --> 00:01:58.252
وهذا يساوي 4،

00:01:58.352 --> 00:02:00.120
ونضيف ذلك إلى total.

00:02:00.220 --> 00:02:01.154
total يساوي 1،

00:02:01.255 --> 00:02:03.490
فمع إضافة 4 إليه تصبح قيمته 5.

00:02:03.590 --> 00:02:06.159
وصلنا إلى نهاية الحلقة مجدداً
فنعود إلى الأعلى،

00:02:06.260 --> 00:02:08.762
ونضيف 1 إلى i، فتصبح قيمتها 3.

00:02:08.862 --> 00:02:09.863
نقوم بهذا التحقق مجدداً،

00:02:09.963 --> 00:02:11.832
هل 3 أقل من أو تساوي 3؟

00:02:11.932 --> 00:02:14.801
أجل، لأن قيمتها تساوي 3، فهذا true.

00:02:14.902 --> 00:02:16.770
فندخل مجدداً،

00:02:16.870 --> 00:02:19.473
ونحسب قيمة i َضرب i، فتصبح 9.

00:02:19.573 --> 00:02:20.841
أي 3 ضرب 3،

00:02:20.941 --> 00:02:23.343
ونضيف ذلك إلى total، الذي كانت قيمته 5.

00:02:23.443 --> 00:02:26.480
إذن 9 زائد 5 تساوي 14،

00:02:26.580 --> 00:02:29.082
وبذلك ترتفع قيمة total إلى 14.

00:02:29.183 --> 00:02:32.085
وهكذا وصلنا إلى نهاية هذه الحلقة،
فنعود إلى أعلى،

00:02:32.186 --> 00:02:33.921
ونضيف 1 آخر إلى i،

00:02:34.021 --> 00:02:35.722
ثم نتحقق من هذا الشرط مجدداً.

00:02:35.822 --> 00:02:37.524
هل 4 أقل من أو تساوي 3؟

00:02:37.624 --> 00:02:39.693
كلا، لم تعد i كذلك.

00:02:39.793 --> 00:02:42.229
فلن ندخل إلى تلك الحلقة بعد ذلك،

00:02:42.329 --> 00:02:45.465
فنتخطى الحلقة لنصل إلى هنا ونعرض قيمة total.

00:02:45.566 --> 00:02:48.702
إذن قيمة total عند تلك النقطة هي 14،

00:02:48.802 --> 00:02:50.971
وهي قيمة ناتج هذه الدالة.

00:02:51.071 --> 00:02:53.207
هذا في حال كانت القيمة المُدخلة هي 3.

00:02:53.307 --> 00:02:56.410
عظيم. يمكنكم أيضاً أن تجربوا تتبعها

00:02:56.510 --> 00:03:01.215
بقيم مُدخلة أكبر
لتروا إن كانت ستعمل معها أيضاً.

