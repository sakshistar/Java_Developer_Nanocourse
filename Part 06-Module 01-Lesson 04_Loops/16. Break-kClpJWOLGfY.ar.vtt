WEBVTT
Kind: captions
Language: ar

00:00:00.000 --> 00:00:04.738
قد تريد في العديد من الأحيان
إنهاء حلقة قبل أوانها.

00:00:04.838 --> 00:00:06.840
لنلقي نظرة إلى مثال.

00:00:06.940 --> 00:00:09.610
تخيل أنك تكتب برنامجاً يتحكم

00:00:09.710 --> 00:00:13.113
بهاتفك الذكي للبحث
عن شبكات الواي فاي حولك.

00:00:13.213 --> 00:00:17.684
تريد المحاولة عشر مرات ثم التوقف.

00:00:17.784 --> 00:00:21.088
لذا نكتب حلقة تبدأ فيها قيمة "i" بواحد

00:00:21.188 --> 00:00:23.790
وتنتهي بعشرة،
وتتزايد بمقدار واحد مع كل تكرار.

00:00:23.891 --> 00:00:28.295
إذن، سيكرر هذا أي تعليمات برمجية
موجودة داخل تلك الحلقة عشر مرات بالضبط.

00:00:28.395 --> 00:00:30.197
وفي داخل حلقة "for"،

00:00:30.297 --> 00:00:34.168
سنستدعي هذه الدالة
واسمها "checkWifi".

00:00:34.268 --> 00:00:36.270
تخيل أن هذه الدالة تعمل حقاً

00:00:36.370 --> 00:00:40.440
كباحث عن شبكان الإنترنت اللاسلكية،
وتُرجع القيمة "true" إذا وجدت شبكة.

00:00:40.541 --> 00:00:43.610
لذا سنسند القيمة الراجعة من هذه الدالة

00:00:43.710 --> 00:00:47.214
إلى متغيرنا المنطقي هذا
الذي أسميناه "wifiAvailable".

00:00:47.314 --> 00:00:49.750
ما يعني أنه إن كان هذا
المتغير المنطقي "true"،

00:00:49.850 --> 00:00:52.853
نكون عندها قد نجحنا
في العثور على شبكة إنترنت لاسلكية،

00:00:52.953 --> 00:00:57.324
وإذا كان "false"، نفذلك يعني
أننا لم نجد شيئاً وسنواصل المحاولة.

00:00:57.424 --> 00:01:03.497
نضيف بعد ذلك مباشرة شرط "if" ونتحقق
مما إذا كانت قيمة ذلك المتغير هي "true"،

00:01:03.597 --> 00:01:08.635
فإن كانت كذلك، عندها نقوم ببساطة بطباعة
"Wi-Fi found"، وهذا كل ما في الأمر.

00:01:08.735 --> 00:01:09.903
وإن لم تكن "true"،

00:01:10.003 --> 00:01:15.742
فسنستمر بالتكرار داخل حلقة "for"
لنكمل المرات العشر التي أردناها.

00:01:15.843 --> 00:01:21.448
سيستمر هذا الكود بالمحاولة عشر مرات
إلى أن يجد الشبكة أو لا يجدها.

00:01:21.548 --> 00:01:23.183
يبدو هذا مثالياً،

00:01:23.283 --> 00:01:25.919
فيما عدا سيناريو واحد غريب

00:01:26.019 --> 00:01:31.525
حيث لنفترض أننا وجدنا شبكة إنترنت لاسلكية
في منتصف الحلقة،

00:01:31.625 --> 00:01:34.328
وليكن ذلك في التكرار الخامس.

00:01:34.428 --> 00:01:36.897
تخيل أنه في التكرار رقم خمسة،

00:01:36.997 --> 00:01:40.067
صدف أن أنتجت دالة "checkWifi"
القيمة "true".

00:01:40.167 --> 00:01:42.903
يتم تحديث هذا المتغير هنا ليصبح "true".

00:01:43.003 --> 00:01:47.341
لذا ندخل المستوى الأدنى لعبارة "if" هنا
ونطبع "Wifi found".

00:01:47.441 --> 00:01:49.142
نقوم بإنهاء عبارة "if" الشرطية،

00:01:49.243 --> 00:01:50.811
ونكون ما زلنا داخل الحلقة.

00:01:50.911 --> 00:01:56.984
لذا نتراجع نزيد قيمة "i" لتصبح ستة،
وما تزال ستة أقل أو تساوي عشرة.

00:01:57.084 --> 00:02:00.487
لذا نعود إلى الداخل مجدداً
ونتحقق من الواي فاي مجدداً،

00:02:00.587 --> 00:02:03.891
والذي سينتج عنه "true"
إذا كنا ما نزال داخل النطاق،

00:02:03.991 --> 00:02:06.894
وعليه سيطبع البرنامج الرسالة
"Wi-Fi found" مجدداً.

00:02:06.994 --> 00:02:09.530
في الواقع سيستمر في طباعة "Wi-Fi"

00:02:09.630 --> 00:02:12.933
لما تبقى من تكرارات في حلقة "for".

00:02:13.033 --> 00:02:15.969
لا يبدو أن هذا مثل ما توقعناه.

00:02:16.069 --> 00:02:20.741
ما تخيلته أنا
هو أنه بمجرد إيجادنا لشبكة إنترنت لاسلكية،

00:02:20.841 --> 00:02:23.443
فإننا نريد إنهاء البحث.

00:02:23.544 --> 00:02:27.047
لحسن الحظ، توفر برنامج "Java"
كلمة أساسية تُدعى "break".

00:02:27.147 --> 00:02:29.650
إن أضفنا ببساطة الكلمة الأساسية
"break" هنا،

00:02:29.750 --> 00:02:35.322
فما نعنيه هو أنه عند إيجادنا للشبكة
نتيجة "ًWi-Fi found"

00:02:35.422 --> 00:02:39.293
فستقوم "break" بالخروج من الحلقة بأكملها.

00:02:39.393 --> 00:02:44.498
لذا فهي لن تكمل التنفيذ سواء أكان
الشرط ما يزال "true" أم لا.

00:02:44.598 --> 00:02:48.202
هذا مفيد في الكثير من الحالات
التي سنواجهها.

00:02:48.302 --> 00:02:50.838
بل إنه يعمل مع حلقات "while" أيضاً.

00:02:50.938 --> 00:02:53.207
لنلقي نظرة على مثال هناك.

00:02:53.307 --> 00:02:55.509
تخيل أنك تلعب لعبة

00:02:55.609 --> 00:02:59.379
هدفها دحرجة حجر نرد
حتى حصولك على الرقم ستة،

00:02:59.479 --> 00:03:03.217
ولكنك تخسر إذا حصلت على الرقم ثلاثة.

00:03:03.317 --> 00:03:08.856
إذن سنكتب دالة تستمر في رمي حجر النرد
إلى حين حصولك على ستة.

00:03:08.956 --> 00:03:10.524
تفوز إن حصلت على الرقم ستة،

00:03:10.624 --> 00:03:12.993
لكنك تخسر إن حصلت على الرقم ثلاثة.

00:03:13.093 --> 00:03:19.132
ستُرجع دالتنا قيمة منطقية تكون "true"
إذا فزت، و"false" إن لم أفز.

00:03:19.233 --> 00:03:23.036
لنسميها "rollASix"،
وهي لن تقبل أي معاملات.

00:03:23.136 --> 00:03:26.507
في داخل الدالة سنقوم ببساطة برمي حجر النرد

00:03:26.607 --> 00:03:31.311
باستخدام دالة "rollDice" ونخزن الناتج
في متغير عدد صحيح اسمه "dice"،

00:03:31.411 --> 00:03:33.113
وسنتبعه بحلقة "while".

00:03:33.213 --> 00:03:36.450
طالما "dice" لا تساوي ستة،
استمر في رمي حجر النرد.

00:03:36.550 --> 00:03:42.556
ممتاز. إذن ستستمر حلقة "while" برمي
النرد إلى حين الحصول على رقم ستة بالنهاية.

00:03:42.656 --> 00:03:47.027
لكن علينا التحقق مما إذا كانت نتيجة
أي من رميات حجر النرد هي الرقم ثلاثة.

00:03:47.127 --> 00:03:48.529
لذا نضيف عبارة "if" الشرطية هذه،

00:03:48.629 --> 00:03:52.533
إذا كانت "dice" تساوي ثلاثة،
نفذ أمر "break".

00:03:52.633 --> 00:03:56.136
تعني "break"
أننا سنخرج من حلقة "while" هذه.

00:03:56.236 --> 00:03:58.005
لن نستمر في المحاولة

00:03:58.105 --> 00:04:00.541
ولن نستمر في التكرار داخل حلقة "while".

00:04:00.641 --> 00:04:02.442
انتهى الأمر، لقد خسرنا.

00:04:02.543 --> 00:04:06.980
لكن لاح أنه سواء حصلنا بالفعل
على ستة أو ثلاثة،

00:04:07.080 --> 00:04:11.051
ففي الحالتين سينتهي بنا المطاف
عند هذا الجزء هنا.

00:04:11.151 --> 00:04:13.353
لن نتمكن من معرفة

00:04:13.453 --> 00:04:16.156
ما إن كنا قد حصلنا على ستة بالفعل
أو على ثلاثة عند تلك اللحظة.

00:04:16.256 --> 00:04:20.561
لذا لنتمكن من تحديد
ما إذا كنا قد فزنا أو خسرنا،

00:04:20.661 --> 00:04:23.830
سنقوم فقط بإضافة شرط "if" أخر هنا بالأسفل.

00:04:23.931 --> 00:04:25.933
إن كان "dice" يساوي ستة

00:04:26.033 --> 00:04:27.434
سنُرجع القيمة "true"،

00:04:27.534 --> 00:04:30.470
وبخلاف ذلك سنُرجع القيمة "false".

00:04:30.571 --> 00:04:34.074
إذا استمرت حلقة "while"
في إعادة المحاولة

00:04:34.174 --> 00:04:38.245
حتى حصلت في النهاية على رقم ستة،
ثم وصلنا إلى هذه المرحلة هنا،

00:04:38.345 --> 00:04:42.649
فقد قمنا هنا بالتحقق من أن "dice"
تساوي ستة بالفعل، وأرجعنا القيمة "true".

00:04:42.749 --> 00:04:47.154
أما إذا كانت نتيجة رمية النرد
هي ثلاثة في إحدى محاولاتنا هنا،

00:04:47.254 --> 00:04:49.089
فسننفذ أمر "break"
للخروج من الحلقة لنصل إلى هنا

00:04:49.189 --> 00:04:52.459
حيث سنتحقق من شرط "if" هذا،
وبما أن "dice" لا تساوي 6،

00:04:52.559 --> 00:04:55.696
ستُحال إلى "else" وستُرجع القيمة "false".

00:04:55.796 --> 00:05:00.601
ممتاز. إذن يمكننا أن نرى فائدة "break"
حتى في حلقات "while".

00:05:00.701 --> 00:05:03.504
لنلقي الآن نظرة إلى مثال حيث ستقوم أنت

00:05:03.604 --> 00:05:07.341
باستخدام الكلمة الرئيسية "break"
لحل مشكلة.

