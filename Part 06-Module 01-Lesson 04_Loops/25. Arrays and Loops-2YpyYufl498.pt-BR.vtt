WEBVTT
Kind: captions
Language: pt-BR

00:00:00.000 --> 00:00:02.501
Vetores, como qualquer
tipo de variável,

00:00:02.534 --> 00:00:05.567
podem ser passados como
parâmetros para funções.

00:00:05.601 --> 00:00:07.767
Também podem ser retornados.

00:00:07.801 --> 00:00:11.567
Queremos uma função
que calcule a temperatura média

00:00:11.601 --> 00:00:13.501
de um vetor de temperaturas.

00:00:13.534 --> 00:00:16.701
Vamos chamar a função
de calculateAverage.

00:00:16.734 --> 00:00:19.400
Ela vai receber
um vetor de doubles

00:00:19.434 --> 00:00:21.634
e retornar um só double,

00:00:21.667 --> 00:00:25.567
que é a média de todos os doubles
no vetor de entrada.

00:00:25.601 --> 00:00:27.934
A definição da função
ficaria assim.

00:00:27.968 --> 00:00:32.200
public double calculateAverage
e o parâmetro é um vetor de doubles

00:00:32.234 --> 00:00:33.901
chamado temperatures.

00:00:33.934 --> 00:00:35.534
A primeira coisa a fazer

00:00:35.567 --> 00:00:39.467
é descobrir quantas temperaturas
estão guardadas no vetor.

00:00:39.501 --> 00:00:44.634
Como são passadas como parâmetro,
não sabemos quantos elementos tem.

00:00:44.667 --> 00:00:47.701
Para descobrir,
podemos escrever o nome do vetor

00:00:47.734 --> 00:00:49.667
com a palavra length.

00:00:49.701 --> 00:00:52.634
Isto conta o número de itens
dentro do vetor

00:00:52.667 --> 00:00:55.334
e o guarda
na variável size.

00:00:55.367 --> 00:00:57.133
Para calcular a média,

00:00:57.167 --> 00:01:00.267
primeiro temos que somar
todos os itens do vetor.

00:01:00.300 --> 00:01:03.467
Podemos declarar a variável total,
do tipo double,

00:01:03.501 --> 00:01:05.167
e inicializar como zero.

00:01:05.200 --> 00:01:07.567
Depois fazemos um laço.

00:01:07.601 --> 00:01:09.934
O contador i começa de zero

00:01:09.968 --> 00:01:12.601
e continua enquanto for
menor do que size,

00:01:12.634 --> 00:01:14.334
que calculamos antes.

00:01:14.367 --> 00:01:18.734
Dentro do laço, podemos continuar
somando à variável total

00:01:18.767 --> 00:01:21.067
a temperatures[i].

00:01:21.100 --> 00:01:25.200
Veja que é o contador do laço
que indexa o vetor aqui.

00:01:25.234 --> 00:01:30.200
Isso é porque ele começa de zero
e incrementa 1 a cada vez,

00:01:30.234 --> 00:01:36.534
e usando isso dentro do laço
acessamos todos os itens do vetor.

00:01:36.567 --> 00:01:39.033
Como estamos somando
à variável total,

00:01:39.067 --> 00:01:44.234
quando o laço terminar, ela tem
o total das temperaturas no vetor.

00:01:44.267 --> 00:01:47.868
Para calcular a média,
só precisamos dividir por size,

00:01:47.901 --> 00:01:50.667
que é o número de elementos
dentro do vetor.

00:01:50.701 --> 00:01:53.767
Agora podemos retornar
o cálculo da média

00:01:53.801 --> 00:01:56.567
como resultado da função.

00:01:56.601 --> 00:01:57.868
Está ótimo.

00:01:57.901 --> 00:02:01.734
Vamos fazer o traço com um exemplo
para ver se funciona.

00:02:01.767 --> 00:02:04.467
Se temperatures
fosse esse vetor aqui,

00:02:04.501 --> 00:02:06.634
com essas 4 temperaturas,

00:02:06.667 --> 00:02:10.634
quando calculamos o comprimento,
size viraria 4,

00:02:10.667 --> 00:02:12.901
porque temos
4 valores aqui.

00:02:12.934 --> 00:02:15.834
O próximo passo é
inicializar total como zero.

00:02:15.868 --> 00:02:17.400
Agora entramos no laço.

00:02:17.434 --> 00:02:20.534
Vamos desenhar esta tabela
e observar o contador,

00:02:20.567 --> 00:02:22.567
o que ele acessa no vetor,

00:02:22.601 --> 00:02:25.367
e o total atualizado
a cada passo.

00:02:25.400 --> 00:02:28.334
Começamos inicializando
i como zero.

00:02:28.367 --> 00:02:30.067
i vira zero.

00:02:30.100 --> 00:02:33.968
Como i é menor do que size,
que neste caso é 4,

00:02:34.000 --> 00:02:37.434
entramos no laço
e rodamos esta linha.

00:02:37.467 --> 00:02:42.200
O que acontece dentro do laço
é que acessamos temperatures[i].

00:02:42.234 --> 00:02:46.300
i é zero neste caso, então
acessamos temperatures[0],

00:02:46.334 --> 00:02:48.467
que é o primeiro item
do vetor,

00:02:48.501 --> 00:02:50.634
que é 75.

00:02:50.667 --> 00:02:53.834
Tendo este valor,
adicionamos ao total,

00:02:53.868 --> 00:02:56.133
usando o sinal +=.

00:02:56.167 --> 00:02:58.067
total começou como zero,

00:02:58.100 --> 00:03:02.834
então somando 75 a zero,
total se torna 75.

00:03:02.868 --> 00:03:05.968
Chegamos à chave
que fecha o laço,

00:03:06.000 --> 00:03:09.567
então voltamos
e incrementamos i.

00:03:09.601 --> 00:03:15.501
Rodando esta instrução,
i aumenta de 0 para 1.

00:03:15.534 --> 00:03:20.267
Em seguida checamos
se i é menor do que size.

00:03:20.300 --> 00:03:25.667
i é 1 e size é 4, então
podemos entrar no laço.

00:03:25.701 --> 00:03:28.534
Aqui dentro, acessamos
temperatures[i],

00:03:28.567 --> 00:03:29.968
que agora é 1,

00:03:30.000 --> 00:03:33.167
e temperatures[1] é 73.

00:03:33.200 --> 00:03:36.067
Neste caso,
estamos acessando 73.

00:03:36.100 --> 00:03:41.334
Somamos a temperatures[i]
ao total com o sinal +=,

00:03:41.367 --> 00:03:44.467
então somamos 73 a 75,

00:03:44.501 --> 00:03:47.601
e o total passa a ser 148.

00:03:47.634 --> 00:03:49.868
Chegamos de novo
à chave que fecha,

00:03:49.901 --> 00:03:52.567
voltamos para cima,
aumentamos o i,

00:03:52.601 --> 00:03:54.801
que passa de 1 para 2,

00:03:54.834 --> 00:03:58.267
e checamos
se é menor que size.

00:03:58.300 --> 00:04:02.634
size é 4, então ainda é verdade,
então entramos no laço de novo.

00:04:02.667 --> 00:04:05.801
temperatures[i]
agora é temperatures[2],

00:04:05.834 --> 00:04:09.868
então é o item de índice 2 aqui,
que é 72.

00:04:09.901 --> 00:04:16.200
Somamos isso ao total.
O total passa de 148 a 220.

00:04:16.234 --> 00:04:19.200
Chegamos à chave que fecha,
voltamos para cima,

00:04:19.234 --> 00:04:24.167
aumentamos i de 2 para 3,
comparamos com size,

00:04:24.200 --> 00:04:27.701
3 ainda é menor do que 4,
entramos no laço,

00:04:27.734 --> 00:04:31.434
acessamos temperatures[3],
que agora é 80,

00:04:31.467 --> 00:04:36.467
e somamos ao total,
que passa de 220 para 300.

00:04:36.501 --> 00:04:39.667
Agora na última iteração,
quando chegamos à chave,

00:04:39.701 --> 00:04:42.534
voltamos,
aumentamos o i para 4,

00:04:42.567 --> 00:04:45.067
mas 4 não é mais
maior do que size,

00:04:45.100 --> 00:04:47.267
então não entramos no laço,

00:04:47.300 --> 00:04:51.834
e passamos direto
para a chave que fecha.

00:04:51.868 --> 00:04:55.400
Agora que terminamos o laço,
calculamos a média,

00:04:55.434 --> 00:04:58.033
dividindo o total por size.

00:04:58.067 --> 00:05:01.968
total terminou como 300
e size era 4,

00:05:02.000 --> 00:05:08.534
então 300 dividido por 4 é 75,
valor que é guardado em average,

00:05:08.567 --> 00:05:12.200
e podemos retornar
o resultado da função.

00:05:12.234 --> 00:05:16.167
Saber o tamanho do vetor
é muito útil em muitas ocasiões.

00:05:16.200 --> 00:05:19.534
Já vimos como usá-lo como
limite superior de um laço,

00:05:19.567 --> 00:05:24.000
mas acontece um problema mais sério
se ignorar o tamanho do vetor.

00:05:24.033 --> 00:05:27.234
Imagine que estamos acessando
números neste vetor.

00:05:27.267 --> 00:05:29.567
Sabemos que tem 4 números,

00:05:29.601 --> 00:05:32.667
então os índices
vão de 0 até 3.

00:05:32.701 --> 00:05:36.501
Já vimos como podemos detectar
o número de itens em um vetor

00:05:36.534 --> 00:05:38.200
usando a palavra length.

00:05:38.234 --> 00:05:41.067
Se rodarmos esta linha
neste vetor,

00:05:41.100 --> 00:05:45.667
length calcula que temos 4 itens,
e size se torna 4.

00:05:45.701 --> 00:05:47.834
Mas se ignorarmos
a variável size,

00:05:47.868 --> 00:05:51.634
e tentarmos acessar
o item com índice 10,

00:05:51.667 --> 00:05:53.434
que não existe no vetor,

00:05:53.467 --> 00:05:57.067
quando você rodar o programa,
o Java vai mostrar um erro,

00:05:57.100 --> 00:06:00.133
dizendo que este ítem
está fora do vetor.

00:06:00.167 --> 00:06:02.501
Mas como agora temos
a variável size,

00:06:02.534 --> 00:06:05.234
sabemos quantos itens
existem no vetor.

00:06:05.267 --> 00:06:09.901
Colocando uma condição em volta
desta linha de impressão,

00:06:09.934 --> 00:06:13.000
podemos checar se o índice
que queremos acessar

00:06:13.033 --> 00:06:15.567
é mesmo menor do que size.

00:06:15.601 --> 00:06:18.334
Caso o vetor seja assim,

00:06:18.367 --> 00:06:20.567
essa condição seria falsa,

00:06:20.601 --> 00:06:23.400
e não rodaria esta linha.

00:06:23.434 --> 00:06:26.968
Mas se outro vetor tivesse
mais do que 10 itens,

00:06:27.000 --> 00:06:30.000
esta condição
seria verdadeira,

00:06:30.033 --> 00:06:33.701
e esta linha imprimiria
o décimo item normalmente.

00:06:33.734 --> 00:06:36.434
Sempre tenha em mente
o limite dos vetores.

00:06:36.467 --> 00:06:38.901
A primeira coisa a fazer
com um vetor

00:06:38.934 --> 00:06:41.701
e determinar
quantos itens ele tem,

00:06:41.734 --> 00:06:44.234
e sempre checar,
antes de acessar itens,

00:06:44.267 --> 00:06:47.033
se ele está dentro
dos limites do vetor.

