WEBVTT
Kind: captions
Language: ar

00:00:00.000 --> 00:00:05.405
رأينا حتى الآن كيفية استخدام حلقات "for"
للعد من واحد إلى عدد أكبر،

00:00:05.506 --> 00:00:08.876
لكن هنالك بضعة أشياء أخرى
يمكننا القيام بها باستخدام حلقات "for".

00:00:08.976 --> 00:00:12.679
فعلى سبيل المثال،
ليس علينا البدء بواحد دائماً.

00:00:12.779 --> 00:00:17.284
لنفترض أنك تريد كتابة دالة
تحسب حاصل جمع الأعداد من 15 إلى 20،

00:00:17.384 --> 00:00:22.289
أي 15+16 وهكذا وصولاً إلى 20
وإرجاع المجموع الكلي.

00:00:22.389 --> 00:00:23.524
نكتب دالتنا كالتالي:

00:00:23.624 --> 00:00:27.694
"public int addNumbers"،
ولن تقبل أي معاملات،

00:00:27.794 --> 00:00:30.664
لكنها ستُرجع عدداً صحيحاً،
ألا وهو المجموع الكلي "sum".

00:00:30.764 --> 00:00:36.136
أول شيء سنفعله هو إسناد صفر كقيمة أولية
للمجموع "sum" ثم بدء التكرار الحلقي.

00:00:36.236 --> 00:00:43.110
هنا يمكننا جعل عدّاد الحلقة،
ألا وهو المتغير "i"، يبدأ من 15،

00:00:43.210 --> 00:00:49.950
ويمكن للشرط أن يكون "i = 20"،
وبذلك تكون عبارة الزيادة "++1".

00:00:50.050 --> 00:00:53.120
في الوضع العادي نضيف "i" داخل الحلقة

00:00:53.220 --> 00:00:56.223
إلى المجموع "sum"
ونحدّث المجموع بهذه القيمة الجديدة.

00:00:56.323 --> 00:01:00.694
عندما تنتهي الحلقة سيكون المجموع الكلي...

00:01:00.794 --> 00:01:05.632
15+16 وصولاً إلى 20،
ونُرجعها كناتج الدالة.

00:01:05.732 --> 00:01:09.736
لنقم بتتبع الحلقة
ونرى ما الذي يحدث بالضبط.

00:01:09.837 --> 00:01:12.406
نبدأ أولاً بإسناد القيمة الأولية صفر
للمجموع "sum"،

00:01:12.506 --> 00:01:18.145
وعليه إن القيمة هي صفر. ثم ندخل الحلقة
ونهيئ "i" بالقيمة الأولية 15.

00:01:18.245 --> 00:01:21.615
وبما أن "i" أقل من أو تساوي 20،
فنتيجة تقييم هذا الشرط هي "true".

00:01:21.715 --> 00:01:25.052
لذا ندخل الحلقة وننفذ هذه العبارة،

00:01:25.152 --> 00:01:27.454
وهي "sum = sum + i".

00:01:27.554 --> 00:01:30.490
كانت "sum" تساوي
صفر، و"sum" زائد "i" يساوي 15.

00:01:30.591 --> 00:01:34.895
وعليه يتم تحديث
"sum" بناتج هذه الحسبة، أي 15.

00:01:34.995 --> 00:01:36.563
نصل إلى نهاية الحلقة،

00:01:36.663 --> 00:01:42.102
فنعود للأعلى ونزيد العداد ليصبح 16،

00:01:42.202 --> 00:01:44.705
ثم نجري عملية التحقق من استيفاء الشرط.

00:01:44.805 --> 00:01:46.640
هل "i" أقل من أو تساوي 20؟

00:01:46.740 --> 00:01:48.775
نعم هي كذلك، فنعود إلى داخل الحلقة

00:01:48.876 --> 00:01:51.612
ونزيد "i" إلى "sum" مجدداً
ونُحدث قيمة "sum"،

00:01:51.712 --> 00:01:54.681
فنزيد "i" إلى المجموع، أي 15+16،

00:01:54.781 --> 00:02:00.153
ويتم تحديث المتغير "sum" بقيمة الناتج
ألا وهو 31، وهكذا دواليك.

00:02:00.254 --> 00:02:02.789
نزيد "i" مجدداً لتصبح 17،

00:02:02.890 --> 00:02:05.025
ونجري المقارنة،
ونتيجة المقارنة هنا هي "true".

00:02:05.125 --> 00:02:07.127
ندخل الحلقة ونُحدّث المجموع،

00:02:07.227 --> 00:02:13.967
ثم نزيد "i" ونجري المقارنة ونُحدّث المجموع.

00:02:14.067 --> 00:02:19.473
نزيد "i" ثم نقارن ثم نُحدّث المجموع.
نزيد "i" ونقارن...

00:02:19.573 --> 00:02:23.243
في هذه المرحلة قيمة المجموع "sum" هي 105.

00:02:23.343 --> 00:02:25.579
نصل إلى نهاية الحلقة فنعود للأعلى

00:02:25.679 --> 00:02:32.085
ونزيد "i" لتصبح 21، ثم نجري المقارنة
"i &lt;= 20".

00:02:32.186 --> 00:02:34.988
أصبحت الآن "i" تساوي 21،
لذا ستكون نتيجة تقييم الشرط هي "false"،

00:02:35.088 --> 00:02:37.658
ما يعني أننا لن نعود إلى داخل الحلقة.

00:02:37.758 --> 00:02:39.993
ننتقل إلى هنا حيث السطر "return sum"،

00:02:40.093 --> 00:02:43.630
إذن تنتهي دالتنا بإرجاع
قيمة المجموع "sum" والتي هي 105،

00:02:43.730 --> 00:02:46.133
وتلك هي القيمة الصحيحة.

00:02:46.233 --> 00:02:51.572
الفكرة هنا هي بما أننا بدأنا
"i" بالقيمة 15 وليس واحد،

00:02:51.672 --> 00:02:54.041
وبما أن شرط الحلقة وصل إلى 20،

00:02:54.141 --> 00:02:59.746
يمكنك أن ترى "i" وهي تتغير من 15
وصولاً إلى نقطة خروجها من الحلقة.

00:02:59.847 --> 00:03:04.084
الأمر الآخر الذي يمكنك فعله بحلقات "for"
هو العد تنازلياً بدلاً من تصاعدياً.

00:03:04.184 --> 00:03:07.888
على سبيل المثال، تقوم هذه الحلقة
بالعد من واحد وصولاً إلى ثلاثة.

00:03:07.988 --> 00:03:11.258
إن نفّذناها
سنحصل على المخرجات "1، 2، 3".

00:03:11.358 --> 00:03:15.462
وهذا بسبب "++i" هذه
وهي تعبير زيادة عدّاد الحلقة.

00:03:15.562 --> 00:03:21.368
فهي تزيد "i" بمقدار واحد في كل مرة
بحيث تُغير قيمتها من 1 إلى 2 وأخيراً 3.

00:03:21.468 --> 00:03:24.271
ولكن إن أردنا للمخرجات
أن تُصبح 3، 2، 1،

00:03:24.371 --> 00:03:26.306
أي أن تقوم بالعد تنازلياً من 3 إلى 1،

00:03:26.406 --> 00:03:29.843
يمكننا استخدام التعبير "--i".

00:03:29.943 --> 00:03:34.481
فكما تقوم "++i"
بزيادة 1 إلى "i" وتحديثها،

00:03:34.581 --> 00:03:39.820
فإن "--i" تطرح
واحد من "i" وتحدّث قيمتها أيضاً.

00:03:39.920 --> 00:03:42.289
يسمى هذا بالإنقاص،

00:03:42.389 --> 00:03:45.559
لأن "i" تتناقص في كل مرة.

00:03:45.659 --> 00:03:49.596
وهذا مطابق تماماً للعبارة "i=i-1".

00:03:49.696 --> 00:03:52.032
فما هذه إلا طريقة مختصرة لكتابتها.

00:03:52.132 --> 00:03:56.036
ولكن عندما نستخدم "--i"،
فإننا نقوم بالعد تنازلياً.

00:03:56.136 --> 00:04:01.008
لذا نريد للحقلة أن تبدأ بالرقم الأعلى
هذه المرة، وهو الرقم 3.

00:04:01.108 --> 00:04:04.444
تبدأ "i" من ثلاثة وتعد تنازلياً.

00:04:04.545 --> 00:04:08.015
لكن على شرط الحلقة أن يتغير أيضاً.

00:04:08.115 --> 00:04:11.285
هل بإمكانك استنباط
شرط الحلقة في هذه الحالة؟

