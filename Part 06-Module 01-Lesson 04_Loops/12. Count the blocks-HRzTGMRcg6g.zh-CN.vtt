WEBVTT
Kind: captions
Language: zh-CN

00:00:00.000 --> 00:00:05.629
你知道吉萨胡夫金字塔是由两百万块石块砌成的吗？

00:00:05.629 --> 00:00:10.664
假设我们自己想砌一座小型金字塔 像这样

00:00:10.664 --> 00:00:14.584
最底层由九个方块组成 也就是 3 乘 3 个

00:00:14.585 --> 00:00:19.260
第二层是由 2 乘 2 个方块组成的

00:00:19.260 --> 00:00:21.815
最后一层只有一块

00:00:21.815 --> 00:00:24.315
这个金字塔总共由 14 个方块组成

00:00:24.315 --> 00:00:26.905
1 加 4 加 9

00:00:26.905 --> 00:00:29.130
现在想想 如果我们在底下加一层

00:00:29.129 --> 00:00:31.890
也就是加一层 5 乘 5 的方块呢？

00:00:31.890 --> 00:00:35.160
那要造这么个金字塔 我们总共需要多少个方块？

00:00:35.159 --> 00:00:38.779
如果我们想让金字塔有 100 层高 那又需要多少？

00:00:38.780 --> 00:00:41.945
方块数会迅速增长

00:00:41.945 --> 00:00:45.134
所以 与其人工数出方块数

00:00:45.134 --> 00:00:46.979
你何不写一个 Java 函数

00:00:46.979 --> 00:00:49.799
让它为你算出总方块数呢？

00:00:49.799 --> 00:00:51.404
给这个函数一个输入参数

00:00:51.405 --> 00:00:53.560
也就是我们想要的层数

00:00:53.560 --> 00:00:57.039
然后它会返回出结果 即砌金字塔需要多少个方块

00:00:57.039 --> 00:00:59.310
比如在这里

00:00:59.310 --> 00:01:01.020
如果给函数输入 3

00:01:01.020 --> 00:01:04.185
它就会返回 14 因为我们让 3 乘 3

00:01:04.185 --> 00:01:05.445
加 2 乘 2

00:01:05.444 --> 00:01:07.907
再加 1 就等于 14

00:01:07.908 --> 00:01:11.070
所以 与其人工数出方块数

00:01:11.069 --> 00:01:13.079
你何不写一个 Java 函数

00:01:13.079 --> 00:01:16.109
让它为你算出总方块数呢？

00:01:16.109 --> 00:01:19.765
给这个函数一个输入参数 令其值等于金字塔的层数

00:01:19.765 --> 00:01:23.719
之后函数就会输出要建造这么个金字塔需要的方块数

00:01:23.719 --> 00:01:25.319
以本情景为例

00:01:25.319 --> 00:01:27.219
输入值为 3

00:01:27.219 --> 00:01:30.689
函数计算出的方块总数就会是 14

00:01:30.689 --> 00:01:33.209
其中的运算过程是 函数会把每层的方块数相加

00:01:33.209 --> 00:01:36.779
从第一层开始 1 乘 1

00:01:36.780 --> 00:01:38.310
然后加上第二层的数目

00:01:38.310 --> 00:01:40.469
也就是 2 乘 2 个方块

00:01:40.469 --> 00:01:43.920
再加上第三层 也就是 3 乘 3 个方块

00:01:43.920 --> 00:01:47.159
把这些数字加起来 就得到了 14 这个值

00:01:47.159 --> 00:01:49.295
也即该函数的输出结果

00:01:49.295 --> 00:01:53.117
试试看能不能实现这个函数 也就是无论我们输入什么参数

00:01:53.117 --> 00:01:56.000
该函数都能帮你计算出相应金字塔所需的方块数

