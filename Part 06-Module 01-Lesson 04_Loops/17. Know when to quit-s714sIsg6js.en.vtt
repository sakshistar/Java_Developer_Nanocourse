WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:02.669
A very popular strategy for gambling used

00:00:02.669 --> 00:00:05.875
with Roulette and other games is called the Martingale strategy.

00:00:05.875 --> 00:00:08.414
You start betting small and every time you lose,

00:00:08.414 --> 00:00:11.539
you play again betting double as much as the previous bet.

00:00:11.539 --> 00:00:14.694
And when you actually win you make up for all the losses you've

00:00:14.695 --> 00:00:18.885
suffered so far plus a small profit thanks to that double bet strategy.

00:00:18.885 --> 00:00:21.600
Which means you can now reset your bet back to

00:00:21.600 --> 00:00:24.980
that small starting bet and start all over again.

00:00:24.980 --> 00:00:27.210
This strategy assumes that you would eventually

00:00:27.210 --> 00:00:29.640
build up all those small profits over time.

00:00:29.640 --> 00:00:32.939
But the danger is that you could easily run out of money.

00:00:32.939 --> 00:00:35.294
Because you're doubling your bet every time,

00:00:35.295 --> 00:00:38.820
money would run out real fast.

00:00:38.820 --> 00:00:42.804
The key now is to know when to stop.

00:00:42.804 --> 00:00:44.369
Let's assume you're going to start with

00:00:44.369 --> 00:00:48.914
a thousand dollars and you'd be really happy if you can make a 20% profit,

00:00:48.914 --> 00:00:52.564
meaning that you would end up with $12,000.

00:00:52.564 --> 00:00:55.814
However, the minimum bet that you can play is $10.

00:00:55.814 --> 00:00:58.119
So to get there, you start with this minimum bet of

00:00:58.119 --> 00:01:01.669
$10 and you would keep doubling every time you lose,

00:01:01.670 --> 00:01:04.185
but reset it back to 10 once you win.

00:01:04.185 --> 00:01:06.855
Here's the function called martingale.

00:01:06.855 --> 00:01:09.100
It doesn't have any input parameters,

00:01:09.099 --> 00:01:10.469
but it returns the integer,

00:01:10.469 --> 00:01:12.704
which is the value of the money you end up with,

00:01:12.704 --> 00:01:16.560
which could be either more than what you started with or a lot less.

00:01:16.560 --> 00:01:20.745
The first thing we do is we start with initializing those three variables here: money,

00:01:20.745 --> 00:01:23.719
target and bet, equal to those values.

00:01:23.719 --> 00:01:25.575
And then we have this while loop.

00:01:25.575 --> 00:01:28.829
The idea of this loop is that it would keep repeating this code block down

00:01:28.829 --> 00:01:32.569
here for as long as we still have enough money to place a bet.

00:01:32.569 --> 00:01:34.784
So as long as money is greater than bet.

00:01:34.784 --> 00:01:37.004
Once we don't have enough money anymore,

00:01:37.004 --> 00:01:39.224
then we just return whatever money we have.

00:01:39.224 --> 00:01:43.049
Inside that loop, we're using this function called play.

00:01:43.049 --> 00:01:46.079
This function simulates the actual betting game play.

00:01:46.079 --> 00:01:49.855
Assume it's implemented somewhere else and it returns a boolean.

00:01:49.855 --> 00:01:53.920
This boolean is true if you've won that bet and false if you didn't.

00:01:53.920 --> 00:01:57.570
So we're storing the return value of this function into the variable win here,

00:01:57.569 --> 00:02:02.609
which is a boolean, and we're checking if we actually did win this bet or not.

00:02:02.609 --> 00:02:07.200
If we did, we just add the bet value to our money and then reset it back to 10.

00:02:07.200 --> 00:02:08.729
If we didn't win this bet,

00:02:08.729 --> 00:02:11.549
we subtract it from our money value and then we

00:02:11.550 --> 00:02:15.405
multiply the actual bet by two so that we double the bet for the next time.

00:02:15.405 --> 00:02:17.865
This code block here would keep repeating

00:02:17.865 --> 00:02:21.180
until we don't have enough money to bet anymore.

00:02:21.180 --> 00:02:23.159
Now there is one part missing here.

00:02:23.159 --> 00:02:25.799
We need to break out of this loop when it's time to stop

00:02:25.800 --> 00:02:29.625
playing and that's when we've reached our target that we're happy with.

00:02:29.625 --> 00:02:32.370
Modify this code here by adding an IF condition that

00:02:32.370 --> 00:02:36.159
checks if the money has reached or exceeded our predefined target.

00:02:36.159 --> 00:02:38.129
And if so, break from this loop.

