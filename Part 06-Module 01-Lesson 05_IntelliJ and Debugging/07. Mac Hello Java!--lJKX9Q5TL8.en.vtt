WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:03.674
Now that we've verified that we have a version of the JDK installed,

00:00:03.674 --> 00:00:05.759
let's write a simple program.

00:00:05.759 --> 00:00:07.737
Like I mentioned before,

00:00:07.737 --> 00:00:09.345
you can use any text editor.

00:00:09.345 --> 00:00:11.640
And I'll be using TextEdit which can be found,

00:00:11.640 --> 00:00:14.910
again, in your applications folder or just by searching for it.

00:00:14.910 --> 00:00:18.300
And I'll click on this to open a new TextEdit document.

00:00:18.300 --> 00:00:20.157
And to get the correct format,

00:00:20.157 --> 00:00:24.929
the first thing I need to do is make sure I have the simplest plain text settings.

00:00:24.929 --> 00:00:28.850
So, I click on TextEdit, and preferences.

00:00:28.850 --> 00:00:33.329
And in this window I want to make sure I have two specific settings.

00:00:33.329 --> 00:00:39.195
The first, is that I want my format to be plain text instead of rich text.

00:00:39.195 --> 00:00:44.429
The second, is that I want to make sure that I uncheck this box for smart quotes by

00:00:44.429 --> 00:00:46.979
choosing plain text and no smart quotes and

00:00:46.979 --> 00:00:50.625
making sure that this text won't have any special characters.

00:00:50.625 --> 00:00:54.689
For example, smart quotes will create special left leaning and right

00:00:54.689 --> 00:00:58.799
leaning quotes that our Java compiler won't be able to understand.

00:00:58.799 --> 00:01:03.229
It can only understand the normal straight up and down quote character.

00:01:03.229 --> 00:01:05.189
So, now that we have these two settings,

00:01:05.189 --> 00:01:07.311
plain text and no smart quotes,

00:01:07.311 --> 00:01:13.219
let's open a new document by clicking File, New.

00:01:13.219 --> 00:01:17.984
So, here's our new plain text document and it looks a little simpler already.

00:01:17.984 --> 00:01:20.250
Here I've written a simple "Hello world!"

00:01:20.250 --> 00:01:24.510
program that contains the code that will print out the string, "Hello world!"

00:01:24.510 --> 00:01:28.005
And I'll provide this code in the notes so that you can copy and paste this

00:01:28.004 --> 00:01:32.164
into your own text document and you don't have to write it all yourself.

00:01:32.165 --> 00:01:36.240
The first thing I have is a comment which is text that won't be executed.

00:01:36.239 --> 00:01:39.884
And in Java, single line comments start with this double slash.

00:01:39.885 --> 00:01:42.740
Then you see the words public class HelloWorld.

00:01:42.739 --> 00:01:45.059
And the class in Java is just a way to

00:01:45.060 --> 00:01:48.060
contain functions and code and refer to our program.

00:01:48.060 --> 00:01:50.158
And this class is called HelloWorld,

00:01:50.158 --> 00:01:53.689
with a capital H and a capital W, all one word.

00:01:53.689 --> 00:01:57.495
Then inside these curly braces is a main function.

00:01:57.495 --> 00:02:00.435
It says, public, static, void, main.

00:02:00.435 --> 00:02:05.545
And this main function is where our computer will go to read and actually execute code.

00:02:05.545 --> 00:02:09.500
And we'll learn more about both classes and this main function later.

00:02:09.500 --> 00:02:12.430
So, don't worry if you don't understand all of this right now.

00:02:12.430 --> 00:02:15.030
Just know that the code inside our main function will be

00:02:15.030 --> 00:02:17.849
executed by our computer when we run our "Hello world!"

00:02:17.849 --> 00:02:23.489
program. And inside our main function there's this print code which should look familiar.

00:02:23.490 --> 00:02:26.610
It's a println statement that prints out "Hello world!"

00:02:26.610 --> 00:02:29.830
And notice that these quotes are just used straight up and down lines.

00:02:29.830 --> 00:02:32.520
They're not tilted one way or the other.

00:02:32.520 --> 00:02:35.040
Now to compile and actually run this code,

00:02:35.039 --> 00:02:38.215
we first have to save this text as a java file.

00:02:38.215 --> 00:02:42.140
It's important that our file have the same name as our class, HelloWorld,

00:02:42.139 --> 00:02:45.659
all one word with a capital H and capital W. And

00:02:45.659 --> 00:02:49.629
this.java extension let's our computer know that this is a java file.

00:02:49.629 --> 00:02:52.794
And I'm just going to save this is on my desktop, so it's easy to find.

00:02:52.794 --> 00:02:56.909
Then click save. And there's our java file on our desktop.

00:02:56.909 --> 00:02:58.875
Then to compile and run this code,

00:02:58.875 --> 00:03:01.259
we have to go back to our terminal window.

00:03:01.259 --> 00:03:03.584
And if you've closed it, don't worry.

00:03:03.585 --> 00:03:05.400
Just open it up again by searching for

00:03:05.400 --> 00:03:08.895
it or going through your applications and opening it.

00:03:08.895 --> 00:03:13.094
Now, I need to tell my computer to find my Java file,

00:03:13.094 --> 00:03:16.340
and I need to navigate to the directory that I've saved it in.

00:03:16.340 --> 00:03:19.365
Since I've saved it on my desktop, I'm going to say,

00:03:19.365 --> 00:03:23.885
"cd Desktop" and press enter.

00:03:23.884 --> 00:03:26.974
And cd just means change directory.

00:03:26.974 --> 00:03:28.644
So, now we're in the right spot.

00:03:28.645 --> 00:03:31.490
The next thing we need to do is to compile our code.

00:03:31.490 --> 00:03:35.375
And to do that we type in the name of our compiler, Java C,

00:03:35.375 --> 00:03:37.664
then a space, and the name of our program,

00:03:37.664 --> 00:03:40.859
HelloWorld.java. And press enter.

00:03:40.860 --> 00:03:43.605
If this compilation step is successful,

00:03:43.604 --> 00:03:46.759
our terminal will just move to another line.

00:03:46.759 --> 00:03:48.394
If you get any errors at this step,

00:03:48.395 --> 00:03:50.510
it's most likely because your format is not in

00:03:50.509 --> 00:03:53.674
plain text or accidentally includes smart quotes,

00:03:53.675 --> 00:03:57.020
or maybe your file name doesn't match your class name.

00:03:57.020 --> 00:03:58.055
So, if you get an error,

00:03:58.055 --> 00:04:00.290
check on those potential sources.

00:04:00.289 --> 00:04:02.900
And once our code compiles successfully,

00:04:02.900 --> 00:04:06.034
our last step is to execute our code.

00:04:06.034 --> 00:04:10.924
We do this by typing in Java to let our computer know that this is a job program,

00:04:10.925 --> 00:04:13.550
and then the name of our compiled program,

00:04:13.550 --> 00:04:18.670
which is just HelloWorld, and press enter.

00:04:18.670 --> 00:04:23.745
And we should see the expected print output right below, "Hello world!".

00:04:23.745 --> 00:04:29.100
And we can run this code multiple times just by typing java HelloWorld.

00:04:29.100 --> 00:04:31.730
But if we want to change anything, like what prints out,

00:04:31.730 --> 00:04:34.840
we have to go back to our text file and change our code.

00:04:34.839 --> 00:04:36.589
So, let's go back and change our println,

00:04:36.589 --> 00:04:38.209
so that it prints out "Hello Java!"

00:04:38.209 --> 00:04:40.074
Instead of "Hello world!"

00:04:40.074 --> 00:04:44.144
So, I'm just going to change this word to Java and then save it.

00:04:44.144 --> 00:04:47.984
Then let's go back to our terminal window and try running our program again.

00:04:47.985 --> 00:04:51.045
But wait a second, it's still printed out "Hello world!"

00:04:51.045 --> 00:04:53.270
And that's because even for small changes,

00:04:53.269 --> 00:04:55.639
like changing the print output in our java file,

00:04:55.639 --> 00:05:00.139
the whole file has to be compiled again before it will reflect the changes.

00:05:00.139 --> 00:05:03.089
So, we have to compile again by typing javac HelloWorld.java.

00:05:03.089 --> 00:05:09.009
And you may have actually noticed this HelloWorld.class file here.

00:05:09.009 --> 00:05:12.194
And this is actually the code that our compiler creates.

00:05:12.194 --> 00:05:16.370
It takes our java file and turns it into a dot class file.

00:05:16.370 --> 00:05:18.485
So, now we've compiled our most recent code.

00:05:18.485 --> 00:05:22.444
Let's run it again by saying java HelloWorld, and enter.

00:05:22.444 --> 00:05:24.500
And this time it reflects our change,

00:05:24.500 --> 00:05:26.185
and says, "Hello Java!"

00:05:26.185 --> 00:05:29.329
So, you can see that writing code in a text editor and then

00:05:29.329 --> 00:05:33.529
compiling and running it separately in the terminal can get kind of tedious,

00:05:33.529 --> 00:05:36.304
especially when you want to change anything in the code.

00:05:36.305 --> 00:05:38.795
And to make it easier to organize and write code,

00:05:38.795 --> 00:05:41.774
we'll be downloading an integrated development environment,

00:05:41.774 --> 00:05:43.444
also known as an IDE.

00:05:43.444 --> 00:05:46.594
Development environments often include Java compilers.

00:05:46.595 --> 00:05:50.750
So, this will make it easier to write and run our code in the same application.

00:05:50.750 --> 00:05:53.824
There are a number of environments that help programmers code in Java.

00:05:53.824 --> 00:05:56.000
And we'll be using one code IntelliJ.

