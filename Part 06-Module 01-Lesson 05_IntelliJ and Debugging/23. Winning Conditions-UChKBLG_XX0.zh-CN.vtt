WEBVTT
Kind: captions
Language: zh-CN

00:00:00.000 --> 00:00:02.069
要完成我们的井字游戏程序

00:00:02.069 --> 00:00:04.410
你得检查一行里是否有三个 X 或三个 O

00:00:04.410 --> 00:00:07.705
因为这就是赢的条件

00:00:07.705 --> 00:00:09.865
以下是游戏过程的一个示例

00:00:09.865 --> 00:00:11.099
现在 grid [1] [1]

00:00:11.099 --> 00:00:14.609
等于字符 x

00:00:14.609 --> 00:00:17.250
grid [0] [2] 等于字符 o

00:00:17.250 --> 00:00:18.870
随着游戏进行

00:00:18.870 --> 00:00:22.050
网格会渐渐被这两个字符填满

00:00:22.050 --> 00:00:26.339
这是游戏结束的一种情况 一竖行里有三个 X

00:00:26.339 --> 00:00:29.225
我们很容易就能看出这里 X 赢了

00:00:29.225 --> 00:00:32.975
但你要怎么让井字游戏程序判断出这是赢呢？

00:00:32.975 --> 00:00:37.469
你需要判断索引号为 [1] [0]、[1] [1] 和 [1] [2]

00:00:37.469 --> 00:00:41.140
的 gird 字符值

00:00:41.140 --> 00:00:45.625
还需要判断它们是否都等于字符 x

00:00:45.625 --> 00:00:47.375
如果是 就像这样

00:00:47.375 --> 00:00:49.399
那么就可以说游戏赢了

00:00:49.399 --> 00:00:52.699
除了这种赢的情况 也就是 X 排成一列

00:00:52.700 --> 00:00:54.275
还有很多情况需要判断

00:00:54.274 --> 00:00:57.890
比如 O 赢的情况 还有连成水平线或斜线的情况

00:00:57.890 --> 00:01:01.490
在你的项目里 你需要囊括所有赢的情况

00:01:01.490 --> 00:01:05.240
也就是完成一个叫做 checkGameWinner 的函数

00:01:05.239 --> 00:01:08.619
我们为你提供了代码的一小部分

00:01:08.620 --> 00:01:12.980
这个函数以一个二维字符数组作为参数

00:01:12.980 --> 00:01:15.510
这就是那个存放着字符 x、

00:01:15.510 --> 00:01:17.625
o 和 - 的 grid

00:01:17.625 --> 00:01:20.370
该代码还会返回一个叫 result 的字符串

00:01:20.370 --> 00:01:22.510
告诉我们谁赢了

00:01:22.510 --> 00:01:24.540
如果你发现一行里有三个 X

00:01:24.540 --> 00:01:29.510
字符串 result 就会是 “X 赢” 函数会将此结果返回出来

00:01:29.510 --> 00:01:31.240
如果你发现一行里有三个 O

00:01:31.239 --> 00:01:33.959
那就返回 “O 赢”

00:01:33.959 --> 00:01:38.349
你还得处理井字格里填满了 X 和 O

00:01:38.349 --> 00:01:43.644
但游戏是死局的情况 因为这时候没有 X 和 O 三个成行

00:01:43.644 --> 00:01:47.099
这种情况下 需要返回字符串 “死局”

00:01:47.099 --> 00:01:50.500
其它情况下只需返回字符串 “无”

00:01:50.500 --> 00:01:54.019
比如这段没完成的代码就会这么返回

00:01:54.019 --> 00:01:56.125
但在你着手完成这段代码之前

00:01:56.125 --> 00:02:00.000
我们先来看看另一种井字游戏胜局 探讨应如何判断

