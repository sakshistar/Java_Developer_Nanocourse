WEBVTT
Kind: captions
Language: zh-CN

00:00:00.000 --> 00:00:03.674
既然确认好我们已装了一版 JDK

00:00:03.674 --> 00:00:05.759
我们就来写个简单的程序吧

00:00:05.759 --> 00:00:07.737
就像我之前说过的

00:00:07.737 --> 00:00:09.345
你要用什么文本编辑器都可以

00:00:09.345 --> 00:00:11.640
我这里要用的是文本编辑器

00:00:11.640 --> 00:00:14.910
这个程序你也可以在应用程序文件夹中找到 直接搜索出来也可以

00:00:14.910 --> 00:00:18.300
点击这个图标 打开一个新的文本编辑器文档

00:00:18.300 --> 00:00:20.157
为了得到正确的格式

00:00:20.157 --> 00:00:24.929
我得先确保它的设置是最简单的纯文本

00:00:24.929 --> 00:00:28.850
因此 我要点击文本编辑 然后点击偏好设置

00:00:28.850 --> 00:00:33.329
在这个窗口里 我得进行两项设置

00:00:33.329 --> 00:00:39.195
第一 格式应为纯文本 而不是多信息文本

00:00:39.195 --> 00:00:44.429
第二 取消勾选智能引号复选框

00:00:44.429 --> 00:00:46.979
选择了纯文本 取消了智能引号

00:00:46.979 --> 00:00:50.625
确保这个文本不会有任何特殊字符

00:00:50.625 --> 00:00:54.689
以智能引号为例 它会创建左右倾斜的特殊引号

00:00:54.689 --> 00:00:58.799
这是无法被 Java 编译器识别的

00:00:58.799 --> 00:01:03.229
Java 编译器只能识别直上直下的普通引号字符

00:01:03.229 --> 00:01:05.189
现在我们完成了这两个设置

00:01:05.189 --> 00:01:07.311
纯文本和无智能引号

00:01:07.311 --> 00:01:13.219
我们来点击文件 新建 打开一个新文档

00:01:13.219 --> 00:01:17.984
这就是我们新建的纯文本文档了 看起来已经简单了一些

00:01:17.984 --> 00:01:20.250
这里我已经写好了一个简单的 “Hello world!” 程序

00:01:20.250 --> 00:01:24.510
里面的代码会输出字符串 “Hello world!”

00:01:24.510 --> 00:01:28.005
我会在注释里提供这段代码 以便你复制粘贴到自己的文本文档里去

00:01:28.004 --> 00:01:32.164
这样你就不需要自己写一遍了

00:01:32.165 --> 00:01:36.240
最开头这行是注释 也就是不会执行的文本

00:01:36.239 --> 00:01:39.884
在 Java 里 单行注释以这样的双斜线开始

00:01:39.885 --> 00:01:42.740
下面就是单词 public class HelloWorld

00:01:42.739 --> 00:01:45.059
Java 里的 class (类) 是用来

00:01:45.060 --> 00:01:48.060
存放函数和代码并关联程序的

00:01:48.060 --> 00:01:50.158
这里的类叫做 HelloWorld

00:01:50.158 --> 00:01:53.689
H 和 W 这两个字母大写 写成一个单词

00:01:53.689 --> 00:01:57.495
在这些花括号里的是个主函数

00:01:57.495 --> 00:02:00.435
里面写着 public static void main

00:02:00.435 --> 00:02:05.545
这个主函数就是计算机读取并执行代码的部分

00:02:05.545 --> 00:02:09.500
稍后我们会进一步探讨类和这个主函数

00:02:09.500 --> 00:02:12.430
所以就算你现在无法完全理解 也无需担心

00:02:12.430 --> 00:02:15.030
你只需要知道 在运行 HelloWorld 程序时

00:02:15.030 --> 00:02:17.849
计算机会执行主函数里的代码

00:02:17.849 --> 00:02:23.489
就行了 在主函数里 这个输出代码你应该很眼熟

00:02:23.490 --> 00:02:26.610
这就是个 println 语句 会输出 “Hello world!”

00:02:26.610 --> 00:02:29.830
注意这些引号只是直上直下的竖线

00:02:29.830 --> 00:02:32.520
不会向两边倾斜

00:02:32.520 --> 00:02:35.040
现在要编译和执行这段代码

00:02:35.039 --> 00:02:38.215
我们得先将这个文本存为 Java 文件

00:02:38.215 --> 00:02:42.140
很重要的一点是 文件名应和类名相同 即 HelloWorld

00:02:42.139 --> 00:02:45.659
要写成一个单词 其中 H 和 W 大写

00:02:45.659 --> 00:02:49.629
然后这个 .java 扩展名会让计算机明白这是个 java 文件

00:02:49.629 --> 00:02:52.794
我直接把这个存到桌面上 比较好找

00:02:52.794 --> 00:02:56.909
点击存储 这就是桌面上的 java 文件了

00:02:56.909 --> 00:02:58.875
要编译并执行这段代码

00:02:58.875 --> 00:03:01.259
我们得回到终端窗口上来

00:03:01.259 --> 00:03:03.584
如果你把它关掉了 那也不怕

00:03:03.585 --> 00:03:05.400
重新搜索出来 再把它打开就好

00:03:05.400 --> 00:03:08.895
或者从应用程序里再把它打开也行

00:03:08.895 --> 00:03:13.094
现在 我要让我的计算机找到这个 Java 文件

00:03:13.094 --> 00:03:16.340
所以我得找到它的存储目录

00:03:16.340 --> 00:03:19.365
由于我把它存放到了桌面 所以我得写

00:03:19.365 --> 00:03:23.885
“cd Desktop” 然后按 enter 键

00:03:23.884 --> 00:03:26.974
cd 的意思就是更换目录

00:03:26.974 --> 00:03:28.644
所以现在我们到了正确的目录下

00:03:28.645 --> 00:03:31.490
接下来我们要编译代码

00:03:31.490 --> 00:03:35.375
因此 我们需要输入编译器的名字 Javac

00:03:35.375 --> 00:03:37.664
然后空格 再输入我们的程序名

00:03:37.664 --> 00:03:40.859
即 HelloWorld.java 按下 enter 键

00:03:40.860 --> 00:03:43.605
如果编译这步成功了

00:03:43.604 --> 00:03:46.759
终端就会移至下一行

00:03:46.759 --> 00:03:48.394
如果这一步出错

00:03:48.395 --> 00:03:50.510
那很可能因为文档格式不是纯文本

00:03:50.509 --> 00:03:53.674
或者文档里不小心包含了智能引号

00:03:53.675 --> 00:03:57.020
又或者是文件名和类名不一致

00:03:57.020 --> 00:03:58.055
所以如果出错了

00:03:58.055 --> 00:04:00.290
你就得检查看是不是这几个问题

00:04:00.289 --> 00:04:02.900
代码编译成功后

00:04:02.900 --> 00:04:06.034
我们就进入了最后一步 执行代码

00:04:06.034 --> 00:04:10.924
要执行代码 我们要输入 java 让计算机知道这是 java 程序

00:04:10.925 --> 00:04:13.550
然后输入编译好的程序的名字

00:04:13.550 --> 00:04:18.670
也就是 HelloWorld 然后按下 enter 键

00:04:18.670 --> 00:04:23.745
这样我们就会在下方看到想要的输出内容 “Hello world!” 了

00:04:23.745 --> 00:04:29.100
要多次运行这段代码 我们只需重复输入 java HelloWorld

00:04:29.100 --> 00:04:31.730
但如果我们想做些修改 比如修改输出内容

00:04:31.730 --> 00:04:34.840
我们就得回到文本文档 把代码修改好

00:04:34.839 --> 00:04:36.589
所以我们回到这边 修改 println 语句

00:04:36.589 --> 00:04:38.209
使其输出 “Hello Java!”

00:04:38.209 --> 00:04:40.074
而不是 “Hello world!”

00:04:40.074 --> 00:04:44.144
我就只把这个单词改成 Java 然后保存

00:04:44.144 --> 00:04:47.984
回到终端窗口 我们再运行一次程序看看

00:04:47.985 --> 00:04:51.045
等下 这输出的还是 “Hello world!”

00:04:51.045 --> 00:04:53.270
这是因为就算只对 java 文件做些小改动

00:04:53.269 --> 00:04:55.639
比如更改输出内容

00:04:55.639 --> 00:05:00.139
也得把整个文件重新编译一次 才能让文件对更改做出反应

00:05:00.139 --> 00:05:03.089
所以我们得再编译一次文件 输入 javac HelloWorld.java

00:05:03.089 --> 00:05:09.009
可能你已经注意到了这个 HelloWorld.class 文件

00:05:09.009 --> 00:05:12.194
这实际上是编译器创建的代码

00:05:12.194 --> 00:05:16.370
编译器会将我们的 java 文件转化为 .class 文件

00:05:16.370 --> 00:05:18.485
现在我们已经编译好了最新的代码

00:05:18.485 --> 00:05:22.444
再次输入 java HelloWorld 按 enter 键 运行看看怎么样

00:05:22.444 --> 00:05:24.500
这一次程序对我们的更改做出了回应

00:05:24.500 --> 00:05:26.185
输出了 “Hello Java!”

00:05:26.185 --> 00:05:29.329
所以你会发现 在文本编辑器里编写代码

00:05:29.329 --> 00:05:33.529
然后改用终端编译并运行代码 这一套做下来会有点繁琐

00:05:33.529 --> 00:05:36.304
如果你想改动代码 那就更是如此了

00:05:36.305 --> 00:05:38.795
要更方便地组织并编写代码

00:05:38.795 --> 00:05:41.774
我们需要下载一个集成开发环境

00:05:41.774 --> 00:05:43.444
也称 IDE

00:05:43.444 --> 00:05:46.594
开发环境通常含有 Java 编译器

00:05:46.595 --> 00:05:50.750
因为是在同一个应用程序里 所以编写和运行代码会方便些

00:05:50.750 --> 00:05:53.824
有很多环境都能帮程序员在 Java 里写代码

00:05:53.824 --> 00:05:56.000
我们要用到的这个叫 IntelliJ

