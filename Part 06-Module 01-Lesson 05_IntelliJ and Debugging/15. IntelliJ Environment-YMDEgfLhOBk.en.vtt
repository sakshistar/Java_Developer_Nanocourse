WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:02.430
Now that we've set up our "Hello World" project,

00:00:02.430 --> 00:00:04.758
we should be able to see our IntelliJ environment,

00:00:04.758 --> 00:00:06.435
which is this split screen.

00:00:06.434 --> 00:00:08.580
On the left we have our project layout,

00:00:08.580 --> 00:00:12.085
that shows our main project folder named "Hello world! "

00:00:12.085 --> 00:00:14.065
Let's expand this folder.

00:00:14.064 --> 00:00:20.050
SRC is short for source and that refers to the source code,our main code of our program.

00:00:20.050 --> 00:00:21.855
Let's expand this.

00:00:21.855 --> 00:00:24.060
Inside here you might recognize

00:00:24.059 --> 00:00:28.289
our base package name and inside that is something called Main.

00:00:28.289 --> 00:00:30.689
Main is something called the class and you'll learn

00:00:30.690 --> 00:00:33.500
more about classes when we talk about objects later.

00:00:33.500 --> 00:00:37.740
But for now know that all the code and functions you write will be inside classes.

00:00:37.740 --> 00:00:40.325
Main is what we want to pay attention to.

00:00:40.325 --> 00:00:44.130
And in fact, on the right side of our screen is all the code contained in

00:00:44.130 --> 00:00:48.875
our main class and there's this main function that I mentioned before.

00:00:48.875 --> 00:00:50.310
Whenever you write a program,

00:00:50.310 --> 00:00:53.000
your computer needs to know where to start running your code

00:00:53.000 --> 00:00:56.909
and by default it will always start at this main function.

00:00:56.909 --> 00:01:01.034
Inside this function is where you place all the lines of code you want to execute.

00:01:01.034 --> 00:01:02.985
Like if you want to print out a line of text,

00:01:02.985 --> 00:01:07.799
you'll have to call the print line function inside this main function.

00:01:07.799 --> 00:01:12.097
For this program, we want to execute a line of code that prints out, "Hello world! "

00:01:12.097 --> 00:01:15.605
We can do that just by writing a simple print line statement here.

00:01:15.605 --> 00:01:18.540
We'll start by saying system and you

00:01:18.540 --> 00:01:21.625
can see that just when I type in the starting letters for system,

00:01:21.625 --> 00:01:25.484
IntelliJ helps me by suggesting the code that I'm writing.

00:01:25.484 --> 00:01:29.174
Then, I can write.out and.println,

00:01:29.174 --> 00:01:31.715
with IntelliJ helping me every step of the way.

00:01:31.715 --> 00:01:33.265
Then inside these parentheses,

00:01:33.265 --> 00:01:39.950
I'll write the string that I want to print out.

00:01:39.950 --> 00:01:41.771
That's just "Hello World!"

00:01:41.772 --> 00:01:46.173
Let's save this by pressing command S or save all.

00:01:46.173 --> 00:01:49.685
We have one more thing to check before we run this program.

00:01:49.685 --> 00:01:54.210
Let's click on this run tab and go down to edit configurations.

00:01:54.209 --> 00:01:59.069
Then this window pops up and you should see four filled in fields.

00:01:59.069 --> 00:02:01.859
The first, is our main class that we want to run,

00:02:01.859 --> 00:02:06.135
which is, com.company main. This is correct.

00:02:06.135 --> 00:02:07.695
Next is our working directory,

00:02:07.694 --> 00:02:10.484
which is just where our project has been saved.

00:02:10.485 --> 00:02:13.890
Then we have the class-path of our module and

00:02:13.889 --> 00:02:17.584
this just specifies the project folder that our main class is in.

00:02:17.585 --> 00:02:19.628
And that's our project, "Hello world! "

00:02:19.627 --> 00:02:23.279
IntelliJ should automatically select this for you but if it doesn't,

00:02:23.280 --> 00:02:27.156
just use this drop down menu to find it.

00:02:27.156 --> 00:02:29.250
Then, it has a Java run-time environment

00:02:29.250 --> 00:02:31.995
and this should say that we're using version 1.8,

00:02:31.995 --> 00:02:34.800
which is the version of Java that I downloaded.

00:02:34.800 --> 00:02:38.640
This all looks good and usually this information is filled in automatically.

00:02:38.639 --> 00:02:40.994
But it's always a good idea to double check,

00:02:40.995 --> 00:02:43.200
so we don't have to change anything here.

00:02:43.199 --> 00:02:47.054
I'll just click, okay and this will exit back to our program.

00:02:47.055 --> 00:02:49.110
We can run this in two ways, by clicking,

00:02:49.110 --> 00:02:51.870
run main or by clicking this run button at

00:02:51.870 --> 00:02:55.980
the top right of our program and I'll use this.

00:02:55.979 --> 00:02:57.750
After we press run,

00:02:57.750 --> 00:03:01.034
we can see that a third window pops up at the bottom of our screen.

00:03:01.034 --> 00:03:05.228
This is called our console and this is where all of our print statements will print out.

00:03:05.228 --> 00:03:08.557
Running this program we see the expected print output.

00:03:08.556 --> 00:03:12.405
And whenever we write system.out.println our main method,

00:03:12.405 --> 00:03:14.294
the lines will print out in our console,

00:03:14.294 --> 00:03:16.906
in the order that they're called in our main function.

00:03:16.907 --> 00:03:19.950
You may have noticed that we only had to run our code and that's

00:03:19.949 --> 00:03:24.084
because IntelliJ automatically compiles our code before we run it.

00:03:24.084 --> 00:03:26.550
This makes it easier to change code too.

00:03:26.550 --> 00:03:29.820
I can go into my code and change this to "Hello Java! "

00:03:29.819 --> 00:03:34.516
and then I'll save this again and press run.

00:03:34.516 --> 00:03:37.353
In our console window we see our updated text,

00:03:37.353 --> 00:03:39.283
" Hello Java! "

00:03:39.282 --> 00:03:41.155
IntelliJ is really useful.

00:03:41.155 --> 00:03:42.705
It does; text highlighting,

00:03:42.705 --> 00:03:49.040
automatic code completion and let's you change and run code really quickly and easily.

00:03:49.039 --> 00:03:52.949
Congrats on completing your first hello world program in IntelliJ.

00:03:52.949 --> 00:03:57.000
I'd recommend adding onto this program with a few lines of code of your own.

00:03:57.000 --> 00:03:59.250
Maybe try adding two numbers and printing out

00:03:59.250 --> 00:04:02.555
that value or displaying any message of your own.

00:04:02.555 --> 00:04:05.010
That's the best way to get familiar with IntelliJ

00:04:05.009 --> 00:04:08.000
and comfortable writing programs on your own computer.

