WEBVTT
Kind: captions
Language: zh-CN

00:00:00.000 --> 00:00:03.819
要判断玩家什么时候赢了井字游戏

00:00:03.819 --> 00:00:07.904
你需要告诉计算机 赢了的井字格是怎么样的

00:00:07.905 --> 00:00:09.605
在你所得的代码里

00:00:09.605 --> 00:00:13.384
井字格 grid 是个 3 乘 3 的二维字符数组

00:00:13.384 --> 00:00:17.855
会跟踪 X 和 O 是否被放置到了格子上以及它们的放置位置

00:00:17.855 --> 00:00:19.949
游戏开始时

00:00:19.949 --> 00:00:22.913
网格有九个空格子 随着游戏进行

00:00:22.913 --> 00:00:26.719
这些格子会被 X 和 O 这两个标志填满

00:00:26.719 --> 00:00:27.844
所以无论何时

00:00:27.844 --> 00:00:29.570
某个格子都可能是空的、

00:00:29.570 --> 00:00:32.625
放了个 X 或者放了个 O

00:00:32.625 --> 00:00:34.890
在代码里 grid 数组

00:00:34.890 --> 00:00:38.460
以三种字符不断跟踪着这三种可能性

00:00:38.460 --> 00:00:42.120
空格子由字符破折号代表

00:00:42.119 --> 00:00:45.794
X 和 O 则分别为各自的小写字母

00:00:45.795 --> 00:00:50.789
grid 里的每个字符会分别存放在二维数组的不同索引中

00:00:50.789 --> 00:00:54.045
左上角的这个空字符索引为 0,0

00:00:54.045 --> 00:00:57.920
所以要在代码里访问这个字符的值

00:00:57.920 --> 00:01:01.195
你需要输入 grid [0] [0]

00:01:01.195 --> 00:01:03.390
因此 grid [0] [0] 的值

00:01:03.390 --> 00:01:07.814
为字符 - 因为这是个空格子

00:01:07.814 --> 00:01:12.739
这个格子的右边是 grid [1] [0] 和 grid [2] [0]

00:01:12.739 --> 00:01:16.984
这些的值也是字符 - 因为这整行的格子都是空的

00:01:16.984 --> 00:01:20.155
但如果索引 2,0 处有一个 X

00:01:20.155 --> 00:01:24.438
那么 grid [2] [0] 就会等于字符 x

00:01:24.438 --> 00:01:26.484
其它格子又会是什么呢？

00:01:26.484 --> 00:01:30.855
0,0 正下方的这个格子是 0,1

00:01:30.855 --> 00:01:34.365
你能猜出左下方这个角落的索引是什么吗？

00:01:34.364 --> 00:01:37.822
这里的索引会是 0,2

00:01:37.822 --> 00:01:39.779
估计你已经看出规律了

00:01:39.780 --> 00:01:42.960
要访问这个网格里任意位置的字符

00:01:42.959 --> 00:01:46.564
我们可以把这些索引当成 X Y 坐标

00:01:46.564 --> 00:01:49.224
但是在编程时 我们不用 x 和 y

00:01:49.224 --> 00:01:51.709
通常都是用 i 和 j

00:01:51.709 --> 00:01:53.939
假设我们有整数变量 i 和 j

00:01:53.939 --> 00:01:57.730
也就是网格的坐标位置

00:01:57.730 --> 00:01:59.310
所以二维索引

00:01:59.310 --> 00:02:01.230
grid [i] [j]

00:02:01.230 --> 00:02:03.180
中的 i 会跟踪我们在数组里的哪一列

00:02:03.180 --> 00:02:06.285
0、1 或 2

00:02:06.284 --> 00:02:08.844
从左往右数

00:02:08.844 --> 00:02:11.770
而 j 则跟踪我们在哪一行

00:02:11.770 --> 00:02:13.870
从上往下数

00:02:13.870 --> 00:02:17.620
还是 0、1 或 2

00:02:17.620 --> 00:02:22.659
所以网格的中心索引为 1,1

00:02:22.659 --> 00:02:29.039
右下角为 grid [2] [2] grid 其它字符的索引以此类推

00:02:29.039 --> 00:02:32.054
也即相对应的索引 i 和 j 的值

00:02:32.055 --> 00:02:35.420
所以现在 grid [1] [1] 和 grid [2] [2]

00:02:35.419 --> 00:02:39.224
等于字符 - 因为它们都是空格子

00:02:39.224 --> 00:02:41.680
不过假如这里有个 O

00:02:41.680 --> 00:02:44.635
那么右下角的 grid [2] [2]

00:02:44.634 --> 00:02:47.349
就会等于字符 o

00:02:47.349 --> 00:02:51.000
我们来做更多类似的二维数组可视化练习

