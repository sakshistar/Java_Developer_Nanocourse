WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:02.069
To finish our Tic-Tac-Toe program,

00:00:02.069 --> 00:00:04.410
you'll be interested in checking for three Xs or

00:00:04.410 --> 00:00:07.705
three Os in a row Which is when someone wins.

00:00:07.705 --> 00:00:09.865
Here's an example of a game in progress.

00:00:09.865 --> 00:00:11.099
So now grid (1,

00:00:11.099 --> 00:00:14.609
1) is equal to the character X and grid (0,

00:00:14.609 --> 00:00:17.250
2) is equal to the character O.

00:00:17.250 --> 00:00:18.870
As the game progresses,

00:00:18.870 --> 00:00:22.050
the grid fills up with these two characters.

00:00:22.050 --> 00:00:26.339
Here's a finished game with three Xs in a row vertically.

00:00:26.339 --> 00:00:29.225
It's easy for us to see that Xs have won here but

00:00:29.225 --> 00:00:32.975
how can you tell the Tic-Tac-Toe program to detect this win?

00:00:32.975 --> 00:00:37.469
You'll have to check the character value of the grid at the indices (1,

00:00:37.469 --> 00:00:41.140
0) (1, 1) and (1, 2).

00:00:41.140 --> 00:00:45.625
And you need to check if they're all equal to the character X.

00:00:45.625 --> 00:00:47.375
And if they are, like in this case,

00:00:47.375 --> 00:00:49.399
you can declare this a win.

00:00:49.399 --> 00:00:52.699
Besides this win condition with three Xs in sequence,

00:00:52.700 --> 00:00:54.275
there are a lot more to check,

00:00:54.274 --> 00:00:57.890
for Os and for horizontal and diagonal wins.

00:00:57.890 --> 00:01:01.490
For your project, you should cover all these win conditions by

00:01:01.490 --> 00:01:05.240
helping to complete a function called check game winner.

00:01:05.239 --> 00:01:08.619
We provided a little bit of the code for you.

00:01:08.620 --> 00:01:12.980
This function takes in the 2D character array as a parameter.

00:01:12.980 --> 00:01:15.510
This is the grid that stores the characters X,

00:01:15.510 --> 00:01:17.625
O and the dash character.

00:01:17.625 --> 00:01:20.370
It also returns a string named result,

00:01:20.370 --> 00:01:22.510
that tells us who's won.

00:01:22.510 --> 00:01:24.540
If you detect three Xs in a row,

00:01:24.540 --> 00:01:29.510
the result string should be X wins and this function should return that.

00:01:29.510 --> 00:01:31.240
If you detect three Os in a row,

00:01:31.239 --> 00:01:33.959
then this should return O wins.

00:01:33.959 --> 00:01:38.349
You should also handle the case where the Tic-Tac-Toe grid is full of Xs and Os but

00:01:38.349 --> 00:01:43.644
the game is a tie because there are no places where Xs or Os are three in a row.

00:01:43.644 --> 00:01:47.099
And in this case, return the string tie.

00:01:47.099 --> 00:01:50.500
In any other case just return the string none,

00:01:50.500 --> 00:01:54.019
which is what this incomplete code does right now.

00:01:54.019 --> 00:01:56.125
But before you get started on this code,

00:01:56.125 --> 00:02:00.000
let's look at how to check for one more Tic-Tac-Toe win condition.

