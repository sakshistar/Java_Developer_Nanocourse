WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:02.113
Now that we've downloaded intelliJ,

00:00:02.113 --> 00:00:03.870
let's take a look at how to use it.

00:00:03.870 --> 00:00:05.565
If you don't already have this open,

00:00:05.565 --> 00:00:09.740
open it from your applications folder.

00:00:10.500 --> 00:00:13.974
When you first open IntelliJ,

00:00:13.974 --> 00:00:17.730
you'll see this welcome screen and options to create a new project,

00:00:17.730 --> 00:00:20.545
import a project or open one from a file.

00:00:20.545 --> 00:00:24.701
And projects are ways to organize different programs and group functions together.

00:00:24.701 --> 00:00:27.440
You might want to group together code for a game project

00:00:27.440 --> 00:00:30.730
and have a separate project that holds code for designing a website.

00:00:30.730 --> 00:00:35.204
Projects just help us separate and group our code in ways that make sense.

00:00:35.204 --> 00:00:37.750
So let's choose create a new project.

00:00:37.750 --> 00:00:40.280
Then IntelliJ should show a window that asks

00:00:40.280 --> 00:00:43.140
for the Java SDK we want to use for our project.

00:00:43.140 --> 00:00:46.130
And this is why we needed to install a Java Development Kit

00:00:46.130 --> 00:00:50.285
beforehand so that we can use it in our development environment here.

00:00:50.284 --> 00:00:54.469
IntelliJ sometimes finds the correct JDK automatically but if not,

00:00:54.469 --> 00:00:58.234
you should click this new button on the side and then the JDK option,

00:00:58.234 --> 00:01:03.219
and it should automatically navigate to the home file of your latest version of your JDK.

00:01:03.219 --> 00:01:07.099
For us, that's JDK 1.8 and here's our home folder.

00:01:07.099 --> 00:01:09.899
So once that folder is selected, click OK.

00:01:09.900 --> 00:01:13.594
Here it also asks for any additional libraries and frameworks.

00:01:13.594 --> 00:01:17.849
And these are just collections of Java code and functions that someone else has written.

00:01:17.849 --> 00:01:20.390
We'll just be using functions that Java already has built

00:01:20.390 --> 00:01:23.295
in so we aren't going to need any external code.

00:01:23.295 --> 00:01:27.170
So let's leave these unchecked and click next.

00:01:27.170 --> 00:01:32.474
Then intelliJ will ask us if we want to create a project from a template, and we will.

00:01:32.474 --> 00:01:36.199
We only have one option here called the Command Line App.

00:01:36.200 --> 00:01:40.850
And remember, Command Line is another word for the Terminal or Command Prompt.

00:01:40.849 --> 00:01:44.534
And so, this template will include some starting code that will make it easier to write,

00:01:44.534 --> 00:01:47.299
compile and run our own code.

00:01:47.299 --> 00:01:48.859
So once we check this box,

00:01:48.859 --> 00:01:50.090
it actually says this is

00:01:50.090 --> 00:01:53.975
a simple job application that includes a class with the main method.

00:01:53.974 --> 00:01:57.079
And method is just another name for a Java function and

00:01:57.079 --> 00:02:01.219
this main method is a special function that we'll talk about more in a bit.

00:02:01.219 --> 00:02:02.629
So let's use this template.

00:02:02.629 --> 00:02:05.089
And if you forget to click this in future, don't worry.

00:02:05.090 --> 00:02:07.895
We can always manually type in any code we need.

00:02:07.894 --> 00:02:10.750
So then click next.

00:02:10.750 --> 00:02:13.129
Then we'll be asked to give our product a name,

00:02:13.129 --> 00:02:16.490
and it's always a good idea to give a simple descriptive name.

00:02:16.490 --> 00:02:18.825
We'll be making a simple hello world program again.

00:02:18.824 --> 00:02:21.619
So let's name this project, Hello World.

00:02:21.620 --> 00:02:23.870
Next, you'll see this project location which is

00:02:23.870 --> 00:02:26.435
the directory where all our projects will be saved,

00:02:26.435 --> 00:02:29.360
and IntelliJ creates a convenient project folder for

00:02:29.360 --> 00:02:32.585
us where it files our projects under their project name.

00:02:32.585 --> 00:02:34.895
So I'll just keep this the way it is.

00:02:34.895 --> 00:02:38.770
And last is our base package that says comp.company.

00:02:38.770 --> 00:02:42.920
If you are creating an application to distribute to the web or a mobile device,

00:02:42.919 --> 00:02:47.034
that would require a unique package name and you'd want to change this.

00:02:47.034 --> 00:02:50.645
But for going through this example together and for practice seeing writing code,

00:02:50.645 --> 00:02:57.250
just use this default com.company and then, click Finish.

00:03:00.050 --> 00:03:03.480
And our project is set up.

00:03:03.479 --> 00:03:05.185
You might see these tips on startup.

00:03:05.185 --> 00:03:06.895
I'll just close these.

00:03:06.895 --> 00:03:08.500
Next we'll go through how to write the code for

00:03:08.500 --> 00:03:12.000
our Hello World program in this intelliJ environment.

