WEBVTT
Kind: captions
Language: zh-CN

00:00:00.000 --> 00:00:04.290
既然确认好我们已装了一版 Java 开发工具包

00:00:04.290 --> 00:00:07.765
完成下一步我们就可以开始编程了

00:00:07.764 --> 00:00:10.574
我们得告诉计算机去哪里找这个开发工具包

00:00:10.574 --> 00:00:14.109
因此我们需要更改计算机的环境变量

00:00:14.109 --> 00:00:16.539
我们先把这个命令提示符关掉

00:00:16.539 --> 00:00:19.619
要找到计算机环境变量

00:00:19.620 --> 00:00:22.035
你得先用右键点击开始菜单

00:00:22.035 --> 00:00:23.934
找到系统

00:00:23.934 --> 00:00:26.654
系统指的就是你的计算机

00:00:26.655 --> 00:00:29.455
所以点击这个

00:00:29.454 --> 00:00:31.804
你会看到系统窗口弹了出来

00:00:31.804 --> 00:00:36.939
左手边有个高级系统设置

00:00:36.939 --> 00:00:38.269
这就是我们想更改的东西

00:00:38.270 --> 00:00:40.453
点击它

00:00:40.453 --> 00:00:44.900
弹出另一个窗口 也就是系统属性

00:00:44.899 --> 00:00:47.049
在这个窗口的右下方

00:00:47.049 --> 00:00:50.154
有个标签为环境变量的按钮

00:00:50.155 --> 00:00:53.361
环境变量会影响计算机运行的方式

00:00:53.360 --> 00:00:55.534
所以要紧跟着我的指示来

00:00:55.534 --> 00:00:58.464
单击环境变量按钮

00:00:58.465 --> 00:01:03.975
弹出另一个窗口 该窗口会显示出你计算机能识别的一切变量

00:01:03.975 --> 00:01:06.325
我们只对其中一项感兴趣

00:01:06.325 --> 00:01:08.115
那就是 Path 这个变量

00:01:08.114 --> 00:01:11.379
Path 是电脑寻找编程资源的地方

00:01:11.379 --> 00:01:14.399
我们需要将我们的 JDK 加到这个变量中

00:01:14.400 --> 00:01:18.630
选择 Path 变量 点击编辑

00:01:18.629 --> 00:01:20.935
你可能会看到里面的一些程序文件

00:01:20.935 --> 00:01:24.784
想把下载好的 JDK 加入到这个清单里

00:01:24.784 --> 00:01:27.969
我们就得先新建一个变量

00:01:27.969 --> 00:01:32.260
我们就把它命名为 new 吧 按下 enter 键

00:01:32.260 --> 00:01:34.085
然后趁这个还被选中的时候

00:01:34.084 --> 00:01:38.069
点击浏览来找我们的 JDK

00:01:39.129 --> 00:01:44.174
首先 找到你的主目录 也就是 C 盘

00:01:44.174 --> 00:01:46.944
在里面可以看到 Program Files 这个文件夹

00:01:46.944 --> 00:01:51.819
你应该已经下好一版 JDK 并放在 Program Files (x86) 这个文件夹里了

00:01:51.819 --> 00:01:54.104
所以展开这个文件夹

00:01:54.105 --> 00:01:57.375
里面就有我们的 Java 文件夹 点击

00:01:57.375 --> 00:01:59.355
在 Java 文件夹里

00:01:59.355 --> 00:02:01.500
你会看到 JDK 和 JRE 两个文件夹

00:02:01.500 --> 00:02:05.159
我们要的是 JDK

00:02:05.159 --> 00:02:06.750
在 JDK 文件夹里

00:02:06.750 --> 00:02:09.794
你会看到一个叫做 bin 的文件夹

00:02:09.794 --> 00:02:12.979
这就是我们想加到程序文件列表里的东西

00:02:12.979 --> 00:02:19.500
所以选择 bin 单击确定 接下来你就会看到 bin 文件夹出现在了列表里

00:02:19.500 --> 00:02:21.080
我们就快好了

00:02:21.080 --> 00:02:24.190
退出这个窗口之前 记得点确定

00:02:24.189 --> 00:02:28.995
在环境变量窗口里也要记得点确定

00:02:28.995 --> 00:02:32.784
然后就可以把剩下的窗口都关掉了

00:02:32.784 --> 00:02:35.694
现在我们就可以动手写简单的程序了

00:02:35.694 --> 00:02:38.655
任何文本编辑器都可以用来写 Java 程序

00:02:38.655 --> 00:02:41.205
我要用的是 notebook 

00:02:41.205 --> 00:02:45.930
你可以在应用程序里的 Windows 附件中找到 notebook 

00:02:45.930 --> 00:02:49.025
也可以直接搜索出来

00:02:49.025 --> 00:02:51.974
打开一个新的 notebook 

00:02:51.974 --> 00:02:56.134
现在我们就可以在纯文本里写程序了 像这样

00:02:56.134 --> 00:02:58.419
这个程序里写的代码

00:02:58.419 --> 00:03:01.434
会在计算机屏幕上输出字符串“HelloWorld!”

00:03:01.435 --> 00:03:03.400
我会在注释里提供这段代码

00:03:03.400 --> 00:03:05.170
你可以复制粘贴到自己的 notebook 里

00:03:05.169 --> 00:03:08.954
无需自己写一遍

00:03:08.955 --> 00:03:13.260
首先你会看到这些单词 public class HelloWorld

00:03:13.259 --> 00:03:19.459
Java 里的 class (类) 是用来存放函数和代码并关联程序的

00:03:19.460 --> 00:03:22.034
这个类就叫 HelloWorld

00:03:22.034 --> 00:03:28.745
H 和 W 大写 写成一个单词 然后这里面是主函数

00:03:28.745 --> 00:03:30.625
写着 public static void main

00:03:30.625 --> 00:03:34.900
这个主函数就是计算机读取并执行代码的部分

00:03:34.900 --> 00:03:38.555
稍后我们会进一步探讨类和这个主函数

00:03:38.555 --> 00:03:41.740
所以就算你现在无法完全理解 也无需担心

00:03:41.740 --> 00:03:45.850
你只需要知道 在运行这个程序时

00:03:45.849 --> 00:03:48.049
计算机会执行主函数里的代码就好了

00:03:48.050 --> 00:03:50.064
在这个主函数里的是输出代码

00:03:50.064 --> 00:03:51.710
你应该会觉得眼熟

00:03:51.710 --> 00:03:55.245
这是个 println 语句 会输出 HelloWorld

00:03:55.245 --> 00:03:57.284
要编译和执行这段代码

00:03:57.284 --> 00:04:01.199
我们先得将这个文本存为 Java 文件

00:04:01.199 --> 00:04:04.609
所以点击文件 保存

00:04:04.610 --> 00:04:06.775
不要把这个存成文本文档

00:04:06.775 --> 00:04:09.735
所以记得将其改为“所有文件”

00:04:09.735 --> 00:04:14.935
给这个 Java 文件命名 名字得和类名相同 也就是 HelloWorld.java

00:04:14.935 --> 00:04:23.939
也就是说 文件全名得是 HelloWorld.java

00:04:23.939 --> 00:04:26.420
我直接把这个存到桌面

00:04:26.420 --> 00:04:28.009
比较好找

00:04:28.009 --> 00:04:30.980
点击保存 很重要的一点是

00:04:30.980 --> 00:04:34.640
文件名应和类名相同

00:04:34.639 --> 00:04:38.599
即 HelloWorld 写成一个单词 其中 H 和 W

00:04:38.600 --> 00:04:42.605
大写 将其存为 Java 文件

00:04:42.605 --> 00:04:46.345
我们就可以在命令提示符窗口里编译并执行这个文件了

00:04:46.345 --> 00:04:50.430
打开命令提示符 操作和之前一样

00:04:50.430 --> 00:04:55.180
第一条指令是访问 Java 文件的存储目录

00:04:55.180 --> 00:04:56.949
也就是我的桌面

00:04:56.949 --> 00:04:58.723
所以输入 cd、空格、

00:04:58.723 --> 00:05:03.069
Desktop 然后按 enter 键

00:05:03.069 --> 00:05:06.973
cd 的意思就是更换目录

00:05:06.973 --> 00:05:09.099
等到了正确的目录下

00:05:09.100 --> 00:05:11.000
我们就需要编译代码

00:05:11.000 --> 00:05:13.745
于是输入编译器的名字

00:05:13.745 --> 00:05:16.090
即 Javac 然后一个空格

00:05:16.089 --> 00:05:18.974
然后输入我们的程序名

00:05:18.975 --> 00:05:25.582
即 HelloWorld.java 按下 enter 键

00:05:25.581 --> 00:05:28.990
编译可能需要几秒钟

00:05:28.990 --> 00:05:33.340
成功了的话 命令提示符就会移至下一行

00:05:33.339 --> 00:05:34.464
如果出错了

00:05:34.464 --> 00:05:37.879
最大的可能是 计算机无法找到 Javac 编译器

00:05:37.879 --> 00:05:40.764
因为环境变量没改

00:05:40.764 --> 00:05:43.779
又或者是文件名和类名不一致

00:05:43.779 --> 00:05:44.814
所以如果出错了

00:05:44.814 --> 00:05:46.569
你就得检查看是不是这几个问题

00:05:46.569 --> 00:05:49.764
即环境变量和文件名是否一致

00:05:49.764 --> 00:05:51.685
编译成功后

00:05:51.685 --> 00:05:54.459
我们就进入了最后一步 执行代码

00:05:54.459 --> 00:05:56.919
所以输入 java

00:05:56.920 --> 00:05:59.965
然后一个空格 之后是程序名

00:05:59.964 --> 00:06:03.429
这一次不需要加 java 扩展名了

00:06:03.430 --> 00:06:07.345
java 这个词会告诉计算机这是个 java 程序

00:06:07.345 --> 00:06:11.200
然后这是我们的程序名 HelloWorld

00:06:11.199 --> 00:06:13.985
等你输好了这两个单词 按 enter 键

00:06:13.985 --> 00:06:17.395
我们就能看到下方输出了我们想要的内容

00:06:17.394 --> 00:06:20.192
即 Hello World 太好了

00:06:20.192 --> 00:06:22.944
我们可以多次运行这个程序

00:06:22.944 --> 00:06:26.430
只需输入 java HelloWorld 然后按 enter 键即可

00:06:26.430 --> 00:06:28.025
但如果我们要做些改动

00:06:28.024 --> 00:06:29.435
比如更改输出的文本内容

00:06:29.435 --> 00:06:33.014
我们就需要回到文本文档里 修改代码

00:06:33.014 --> 00:06:35.360
我们现在就回去修改 println 语句

00:06:35.360 --> 00:06:39.215
让它输出 Hello Java 而不是 Hello world

00:06:39.214 --> 00:06:41.949
回到我的 notebook 

00:06:41.949 --> 00:06:46.029
把这个改成 Java 记得保存

00:06:46.029 --> 00:06:48.459
我们回到命令提示符

00:06:48.459 --> 00:06:54.834
再次运行程序 java HelloWorld

00:06:54.834 --> 00:06:56.034
等下

00:06:56.035 --> 00:06:59.435
这输出的还是 Hello world! 而不是 Hello Java

00:06:59.435 --> 00:07:01.899
这是因为就算只对 java 文件做些小改动

00:07:01.899 --> 00:07:04.375
比如更改输出内容

00:07:04.375 --> 00:07:09.370
整个文件也需要重新编译 才能对更改做出反应

00:07:09.370 --> 00:07:11.050
事实上 你可能已经注意到

00:07:11.050 --> 00:07:14.715
桌面角落里多了一个文件

00:07:14.714 --> 00:07:20.339
叫做 HelloWorld.class 这是在我们第一次编译代码时创建的

00:07:20.339 --> 00:07:23.889
是 Javac 编译器的杰作

00:07:23.889 --> 00:07:25.824
编译器每接收一个 Java 文件

00:07:25.824 --> 00:07:30.319
就会创建一个 class 文件 以便计算机识别

00:07:30.319 --> 00:07:31.675
所以我们每做出一次改变

00:07:31.675 --> 00:07:34.030
就得编译一次 Java 程序

00:07:34.029 --> 00:07:39.792
也就是要输入 javac HelloWorld.java 按下 enter 键

00:07:39.793 --> 00:07:48.180
现在我们输入 java HelloWorld 再运行这段代码试试

00:07:48.180 --> 00:07:52.240
这回就输出了更新后的内容 即 Hello Java!

00:07:52.240 --> 00:07:55.460
由此可见 在 notebook 等文本编辑器里写代码

00:07:55.459 --> 00:07:58.639
然后改用命令提示符来编译并执行代码

00:07:58.639 --> 00:08:00.303
会有些繁琐

00:08:00.303 --> 00:08:02.729
如果你想改动代码 那就更是如此了

00:08:02.730 --> 00:08:05.435
要更方便地组织并编写代码

00:08:05.435 --> 00:08:08.314
我们需要下载一个集成开发环境

00:08:08.314 --> 00:08:09.639
也称 IDE

00:08:09.639 --> 00:08:13.264
开发环境通常含有 Java 编译器

00:08:13.264 --> 00:08:18.004
因为是在同一个应用程序里 所以编写和运行代码会方便些

00:08:18.004 --> 00:08:21.699
有很多环境都能帮程序员在 Java 里写代码

00:08:21.699 --> 00:08:24.000
我们要用到 IntelliJ

